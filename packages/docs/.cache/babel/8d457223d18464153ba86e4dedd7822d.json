{"ast":null,"code":"import React from 'react';\nimport { Card, CardTitle, CardHeader, CardBody, CardFooter, Button } from '@patternfly/react-core';\nimport ArrowRightIcon from '@patternfly/react-icons/dist/esm/icons/arrow-right-icon';\nimport CubesIcon from '@patternfly/react-icons/dist/esm/icons/cubes-icon';\nimport ClockIcon from '@patternfly/react-icons/dist/esm/icons/clock-icon';\nimport RunningIcon from '@patternfly/react-icons/dist/esm/icons/running-icon';\nimport PuzzlePieceIcon from '@patternfly/react-icons/dist/esm/icons/puzzle-piece-icon';\nimport ChartBarIcon from '@patternfly/react-icons/dist/esm/icons/chart-bar-icon';\nimport SketchIcon from '@patternfly/react-icons/dist/esm/icons/sketch-icon';\nimport { Link } from 'theme-patternfly-org/components/link/link';\nimport { capitalize } from 'theme-patternfly-org/helpers/capitalize';\nimport './trainingCard.css';\n\nvar getTrainingIcon = function getTrainingIcon(trainingType) {\n  if (['html-css', 'react'].includes(trainingType)) {\n    return /*#__PURE__*/React.createElement(CubesIcon, {\n      className: \"pf-org__training-basics\"\n    });\n  } else if (trainingType === 'react-components') {\n    return /*#__PURE__*/React.createElement(PuzzlePieceIcon, {\n      className: \"pf-org__training-components\"\n    });\n  } else if (trainingType === 'design') {\n    return /*#__PURE__*/React.createElement(SketchIcon, {\n      className: \"pf-org__training-design\"\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(ChartBarIcon, {\n    className: \"pf-org__training-charts\"\n  });\n};\n\nexport var TrainingCard = function TrainingCard(_ref) {\n  var trainingType = _ref.trainingType,\n      level = _ref.level,\n      title = _ref.title,\n      time = _ref.time,\n      description = _ref.description,\n      subsection = _ref.subsection,\n      _ref$katacodaId = _ref.katacodaId,\n      katacodaId = _ref$katacodaId === void 0 ? null : _ref$katacodaId,\n      _ref$designUrl = _ref.designUrl,\n      designUrl = _ref$designUrl === void 0 ? null : _ref$designUrl;\n  return /*#__PURE__*/React.createElement(Card, {\n    className: \"pf-org__card\",\n    isCompact: true\n  }, /*#__PURE__*/React.createElement(CardHeader, null, /*#__PURE__*/React.createElement(Card, {\n    className: \"pf-org__card-small\"\n  }, getTrainingIcon(trainingType)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pf-org__level\"\n  }, /*#__PURE__*/React.createElement(RunningIcon, {\n    className: \"pf-org__level-\" + level\n  }), capitalize(level))), /*#__PURE__*/React.createElement(CardTitle, null, title), /*#__PURE__*/React.createElement(CardBody, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pf-org__time\"\n  }, /*#__PURE__*/React.createElement(ClockIcon, null), time), description), /*#__PURE__*/React.createElement(CardFooter, null, katacodaId && /*#__PURE__*/React.createElement(Link, {\n    to: \"/training/\" + katacodaId\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"link\"\n  }, \"Start\", /*#__PURE__*/React.createElement(ArrowRightIcon, null))), designUrl && /*#__PURE__*/React.createElement(Link, {\n    to: designUrl\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"link\"\n  }, \"Start\", /*#__PURE__*/React.createElement(ArrowRightIcon, null)))));\n};","map":{"version":3,"names":["React","Card","CardTitle","CardHeader","CardBody","CardFooter","Button","ArrowRightIcon","CubesIcon","ClockIcon","RunningIcon","PuzzlePieceIcon","ChartBarIcon","SketchIcon","Link","capitalize","getTrainingIcon","trainingType","includes","TrainingCard","level","title","time","description","subsection","katacodaId","designUrl"],"sources":["/Users/jschuler/Code/patternfly-quickstarts/packages/docs/src/content/training/trainingCard/trainingCard.js"],"sourcesContent":["import React from 'react';\nimport { Card, CardTitle, CardHeader, CardBody, CardFooter, Button } from '@patternfly/react-core';\nimport ArrowRightIcon from '@patternfly/react-icons/dist/esm/icons/arrow-right-icon';\nimport CubesIcon from '@patternfly/react-icons/dist/esm/icons/cubes-icon';\nimport ClockIcon from '@patternfly/react-icons/dist/esm/icons/clock-icon';\nimport RunningIcon from '@patternfly/react-icons/dist/esm/icons/running-icon';\nimport PuzzlePieceIcon from '@patternfly/react-icons/dist/esm/icons/puzzle-piece-icon';\nimport ChartBarIcon from '@patternfly/react-icons/dist/esm/icons/chart-bar-icon';\nimport SketchIcon from '@patternfly/react-icons/dist/esm/icons/sketch-icon';\nimport { Link } from 'theme-patternfly-org/components/link/link';\nimport { capitalize } from 'theme-patternfly-org/helpers/capitalize';\nimport './trainingCard.css';\n\nconst getTrainingIcon = trainingType => {\n  if (['html-css', 'react'].includes(trainingType)) {\n    return <CubesIcon className=\"pf-org__training-basics\" />;\n  }\n  else if (trainingType === 'react-components') {\n    return <PuzzlePieceIcon className=\"pf-org__training-components\" />;\n  }\n  else if (trainingType === 'design') {\n    return <SketchIcon className=\"pf-org__training-design\" />;\n  }\n\n  return <ChartBarIcon className=\"pf-org__training-charts\" />;\n}\n\nexport const TrainingCard = ({\n  trainingType,\n  level,\n  title,\n  time,\n  description,\n  subsection,\n  katacodaId = null,\n  designUrl = null\n}) => (\n  <Card className=\"pf-org__card\" isCompact>\n    <CardHeader>\n      <Card className=\"pf-org__card-small\">\n        {getTrainingIcon(trainingType)}\n      </Card>\n      <div className=\"pf-org__level\">\n        <RunningIcon className={`pf-org__level-${level}`} />\n        {capitalize(level)}\n      </div>\n    </CardHeader>\n    <CardTitle>\n      {title}\n    </CardTitle>\n    <CardBody>\n      <div className=\"pf-org__time\">\n        <ClockIcon />\n        {time}\n      </div>\n      {description}\n    </CardBody>\n    <CardFooter>\n    {katacodaId && (\n      <Link to={`/training/${katacodaId}`} >\n        <Button variant=\"link\">\n          Start\n          <ArrowRightIcon />\n        </Button>\n      </Link>\n    )}\n    {designUrl && (\n      <Link to={designUrl} >\n        <Button variant=\"link\">\n          Start\n          <ArrowRightIcon />\n        </Button>\n      </Link>\n    )}\n    </CardFooter>\n  </Card>\n);\n"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,SAAf,EAA0BC,UAA1B,EAAsCC,QAAtC,EAAgDC,UAAhD,EAA4DC,MAA5D,QAA0E,wBAA1E;AACA,OAAOC,cAAP,MAA2B,yDAA3B;AACA,OAAOC,SAAP,MAAsB,mDAAtB;AACA,OAAOC,SAAP,MAAsB,mDAAtB;AACA,OAAOC,WAAP,MAAwB,qDAAxB;AACA,OAAOC,eAAP,MAA4B,0DAA5B;AACA,OAAOC,YAAP,MAAyB,uDAAzB;AACA,OAAOC,UAAP,MAAuB,oDAAvB;AACA,SAASC,IAAT,QAAqB,2CAArB;AACA,SAASC,UAAT,QAA2B,yCAA3B;AACA,OAAO,oBAAP;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,YAAY,EAAI;EACtC,IAAI,CAAC,UAAD,EAAa,OAAb,EAAsBC,QAAtB,CAA+BD,YAA/B,CAAJ,EAAkD;IAChD,oBAAO,oBAAC,SAAD;MAAW,SAAS,EAAC;IAArB,EAAP;EACD,CAFD,MAGK,IAAIA,YAAY,KAAK,kBAArB,EAAyC;IAC5C,oBAAO,oBAAC,eAAD;MAAiB,SAAS,EAAC;IAA3B,EAAP;EACD,CAFI,MAGA,IAAIA,YAAY,KAAK,QAArB,EAA+B;IAClC,oBAAO,oBAAC,UAAD;MAAY,SAAS,EAAC;IAAtB,EAAP;EACD;;EAED,oBAAO,oBAAC,YAAD;IAAc,SAAS,EAAC;EAAxB,EAAP;AACD,CAZD;;AAcA,OAAO,IAAME,YAAY,GAAG,SAAfA,YAAe;EAAA,IAC1BF,YAD0B,QAC1BA,YAD0B;EAAA,IAE1BG,KAF0B,QAE1BA,KAF0B;EAAA,IAG1BC,KAH0B,QAG1BA,KAH0B;EAAA,IAI1BC,IAJ0B,QAI1BA,IAJ0B;EAAA,IAK1BC,WAL0B,QAK1BA,WAL0B;EAAA,IAM1BC,UAN0B,QAM1BA,UAN0B;EAAA,2BAO1BC,UAP0B;EAAA,IAO1BA,UAP0B,gCAOb,IAPa;EAAA,0BAQ1BC,SAR0B;EAAA,IAQ1BA,SAR0B,+BAQd,IARc;EAAA,oBAU1B,oBAAC,IAAD;IAAM,SAAS,EAAC,cAAhB;IAA+B,SAAS;EAAxC,gBACE,oBAAC,UAAD,qBACE,oBAAC,IAAD;IAAM,SAAS,EAAC;EAAhB,GACGV,eAAe,CAACC,YAAD,CADlB,CADF,eAIE;IAAK,SAAS,EAAC;EAAf,gBACE,oBAAC,WAAD;IAAa,SAAS,qBAAmBG;EAAzC,EADF,EAEGL,UAAU,CAACK,KAAD,CAFb,CAJF,CADF,eAUE,oBAAC,SAAD,QACGC,KADH,CAVF,eAaE,oBAAC,QAAD,qBACE;IAAK,SAAS,EAAC;EAAf,gBACE,oBAAC,SAAD,OADF,EAEGC,IAFH,CADF,EAKGC,WALH,CAbF,eAoBE,oBAAC,UAAD,QACCE,UAAU,iBACT,oBAAC,IAAD;IAAM,EAAE,iBAAeA;EAAvB,gBACE,oBAAC,MAAD;IAAQ,OAAO,EAAC;EAAhB,yBAEE,oBAAC,cAAD,OAFF,CADF,CAFF,EASCC,SAAS,iBACR,oBAAC,IAAD;IAAM,EAAE,EAAEA;EAAV,gBACE,oBAAC,MAAD;IAAQ,OAAO,EAAC;EAAhB,yBAEE,oBAAC,cAAD,OAFF,CADF,CAVF,CApBF,CAV0B;AAAA,CAArB"},"metadata":{},"sourceType":"module"}