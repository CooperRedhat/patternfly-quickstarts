{"ast":null,"code":"function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport { AutoLinkHeader, Example, Link as PatternflyThemeLink } from 'theme-patternfly-org/components';\nvar pageData = {\n  \"id\": \"Switch\",\n  \"section\": \"components\",\n  \"source\": \"react\",\n  \"slug\": \"/components/switch/react\",\n  \"sourceLink\": \"https://github.com/patternfly/patternfly-react/blob/main/packages/docs/packages/react-core/src/components/Switch/examples/Switch.md\",\n  \"propComponents\": [{\n    \"name\": \"Switch\",\n    \"description\": \"\",\n    \"props\": [{\n      \"name\": \"aria-label\",\n      \"type\": \"string\",\n      \"description\": \"Adds accessible text to the switch, and should describe the isChecked=\\\"true\\\" state. When label is defined, aria-label should be set to the text string that is visible when isChecked is true.\",\n      \"defaultValue\": \"''\"\n    }, {\n      \"name\": \"className\",\n      \"type\": \"string\",\n      \"description\": \"Additional classes added to the switch\"\n    }, {\n      \"name\": \"hasCheckIcon\",\n      \"type\": \"boolean\",\n      \"description\": \"Flag to show if the switch has a check icon.\"\n    }, {\n      \"name\": \"id\",\n      \"type\": \"string\",\n      \"description\": \"id for the label.\"\n    }, {\n      \"name\": \"isChecked\",\n      \"type\": \"boolean\",\n      \"description\": \"Flag to show if the switch is checked.\",\n      \"defaultValue\": \"true\"\n    }, {\n      \"name\": \"isDisabled\",\n      \"type\": \"boolean\",\n      \"description\": \"Flag to show if the switch is disabled.\",\n      \"defaultValue\": \"false\"\n    }, {\n      \"name\": \"isReversed\",\n      \"type\": \"boolean\",\n      \"description\": \"Flag to reverse the layout of toggle and label (toggle on right).\",\n      \"defaultValue\": \"false\"\n    }, {\n      \"name\": \"label\",\n      \"type\": \"React.ReactNode\",\n      \"description\": \"Text value for the label when on\"\n    }, {\n      \"name\": \"labelOff\",\n      \"type\": \"React.ReactNode\",\n      \"description\": \"Text value for the label when off\"\n    }, {\n      \"name\": \"onChange\",\n      \"type\": \"(checked: boolean, event: React.FormEvent<HTMLInputElement>) => void\",\n      \"description\": \"A callback for when the switch selection changes. (isChecked, event) => {}\",\n      \"defaultValue\": \"() => undefined as any\"\n    }]\n  }],\n  \"cssPrefix\": [\"pf-c-switch\"],\n  \"examples\": [\"Basic\", \"Reversed Layout\", \"Without label\", \"Checked with label\", \"Disabled\", \"Uncontrolled\"]\n};\npageData.examples = {\n  'Basic': function Basic(props) {\n    return /*#__PURE__*/React.createElement(Example, _extends({}, pageData, props, {\n      \"code\": \"import React from 'react';\\nimport { Switch } from '@patternfly/react-core';\\n\\nclass SimpleSwitch extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      isChecked: true\\n    };\\n    this.handleChange = isChecked => {\\n      this.setState({ isChecked });\\n    };\\n  }\\n\\n  render() {\\n    const { isChecked } = this.state;\\n    return (\\n      <Switch\\n        id=\\\"simple-switch\\\"\\n        label=\\\"Message when on\\\"\\n        labelOff=\\\"Message when off\\\"\\n        isChecked={isChecked}\\n        onChange={this.handleChange}\\n      />\\n    );\\n  }\\n}\",\n      \"title\": \"Basic\",\n      \"lang\": \"js\"\n    }));\n  },\n  'Reversed Layout': function ReversedLayout(props) {\n    return /*#__PURE__*/React.createElement(Example, _extends({}, pageData, props, {\n      \"code\": \"import React from 'react';\\nimport { Switch } from '@patternfly/react-core';\\n\\nclass ReversedSwitch extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      isChecked: true\\n    };\\n    this.handleChange = isChecked => {\\n      this.setState({ isChecked });\\n    };\\n  }\\n\\n  render() {\\n    const { isChecked } = this.state;\\n    return (\\n      <Switch\\n        id=\\\"reversed-switch\\\"\\n        label=\\\"Message when on\\\"\\n        labelOff=\\\"Message when off\\\"\\n        isChecked={isChecked}\\n        onChange={this.handleChange}\\n        isReversed\\n      />\\n    );\\n  }\\n}\",\n      \"title\": \"Reversed Layout\",\n      \"lang\": \"js\"\n    }));\n  },\n  'Without label': function WithoutLabel(props) {\n    return /*#__PURE__*/React.createElement(Example, _extends({}, pageData, props, {\n      \"code\": \"import React from 'react';\\nimport { Switch } from '@patternfly/react-core';\\n\\nclass NoLabelSwitch extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      isChecked: true\\n    };\\n    this.handleChange = isChecked => {\\n      this.setState({ isChecked });\\n    };\\n  }\\n\\n  render() {\\n    const { isChecked } = this.state;\\n    return (\\n      <Switch id=\\\"no-label-switch-on\\\" aria-label=\\\"Message when on\\\" isChecked={isChecked} onChange={this.handleChange} />\\n    );\\n  }\\n}\",\n      \"title\": \"Without label\",\n      \"lang\": \"js\"\n    }));\n  },\n  'Checked with label': function CheckedWithLabel(props) {\n    return /*#__PURE__*/React.createElement(Example, _extends({}, pageData, props, {\n      \"code\": \"import React from 'react';\\nimport { Switch } from '@patternfly/react-core';\\n\\nclass CheckedWithLabelSwitch extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      isChecked: true\\n    };\\n    this.handleChange = isChecked => {\\n      this.setState({ isChecked });\\n    };\\n  }\\n\\n  render() {\\n    const { isChecked } = this.state;\\n    return (\\n      <Switch\\n        label=\\\"Message when on\\\"\\n        labelOff=\\\"Message when off\\\"\\n        id=\\\"checked-with-label-switch-on\\\"\\n        aria-label=\\\"Message when on\\\"\\n        isChecked={isChecked}\\n        hasCheckIcon\\n        onChange={this.handleChange}\\n      />\\n    );\\n  }\\n}\",\n      \"title\": \"Checked with label\",\n      \"lang\": \"js\"\n    }));\n  },\n  'Disabled': function Disabled(props) {\n    return /*#__PURE__*/React.createElement(Example, _extends({}, pageData, props, {\n      \"code\": \"import React from 'react';\\nimport { Switch } from '@patternfly/react-core';\\n\\nconst Disabled = () => (\\n  <React.Fragment>\\n    <Switch\\n      id=\\\"disabled-switch-on\\\"\\n      aria-label=\\\"Message when on\\\"\\n      label=\\\"Message when on\\\"\\n      labelOff=\\\"Message when off\\\"\\n      isChecked\\n      isDisabled\\n    />\\n    <br />\\n    <Switch\\n      id=\\\"disabled-switch-off\\\"\\n      aria-label=\\\"Message when on\\\"\\n      label=\\\"Message when on\\\"\\n      labelOff=\\\"Message when off\\\"\\n      isChecked={false}\\n      isDisabled\\n    />\\n    <br />\\n    <Switch id=\\\"disabled-no-label-switch-on\\\" aria-label=\\\"Message when on\\\" isChecked isDisabled />\\n    <br />\\n    <Switch id=\\\"disabled-no-label-switch-off\\\" aria-label=\\\"Message when on\\\" isChecked={false} isDisabled />\\n  </React.Fragment>\\n)\",\n      \"title\": \"Disabled\",\n      \"lang\": \"js\"\n    }));\n  },\n  'Uncontrolled': function Uncontrolled(props) {\n    return /*#__PURE__*/React.createElement(Example, _extends({}, pageData, props, {\n      \"code\": \"import React from 'react';\\nimport { Switch } from '@patternfly/react-core';\\n\\nconst Uncontrolled = () => (\\n  <React.Fragment>\\n    <Switch\\n      id=\\\"uncontrolled-switch-on\\\"\\n      aria-label=\\\"Message when on\\\"\\n      label=\\\"Message when on\\\"\\n      labelOff=\\\"Message when off\\\"\\n      isChecked\\n    />\\n    <br />\\n    <Switch\\n      id=\\\"uncontrolled-switch-off\\\"\\n      aria-label=\\\"Message when on\\\"\\n      label=\\\"Message when on\\\"\\n      labelOff=\\\"Message when off\\\"\\n      isChecked={false}\\n    />\\n    <br />\\n    <Switch id=\\\"uncontrolled-no-label-switch-on\\\" aria-label=\\\"Message when on\\\" isChecked />\\n    <br />\\n    <Switch id=\\\"uncontrolled-no-label-switch-off\\\" aria-label=\\\"Message when on\\\" isChecked={false} />\\n  </React.Fragment>\\n)\",\n      \"title\": \"Uncontrolled\",\n      \"lang\": \"js\"\n    }));\n  }\n};\n\nvar Component = function Component() {\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(AutoLinkHeader, {\n    \"id\": \"examples\",\n    \"size\": \"h2\",\n    \"className\": \"ws-title ws-h2\"\n  }, \"Examples\"), React.createElement(pageData.examples[\"Basic\"]), React.createElement(pageData.examples[\"Reversed Layout\"]), React.createElement(pageData.examples[\"Without label\"]), React.createElement(pageData.examples[\"Checked with label\"]), React.createElement(pageData.examples[\"Disabled\"]), React.createElement(pageData.examples[\"Uncontrolled\"]));\n};\n\nComponent.displayName = 'ComponentsSwitchReactDocs';\nComponent.pageData = pageData;\nexport default Component;","map":{"version":3,"names":["React","AutoLinkHeader","Example","Link","PatternflyThemeLink","pageData","examples","props","Component","createElement","displayName"],"sources":["/Users/jschuler/Code/patternfly-quickstarts/packages/docs/src/generated/components/switch/react.js"],"sourcesContent":["import React from 'react';\nimport { AutoLinkHeader, Example, Link as PatternflyThemeLink } from 'theme-patternfly-org/components';\n\nconst pageData = {\n  \"id\": \"Switch\",\n  \"section\": \"components\",\n  \"source\": \"react\",\n  \"slug\": \"/components/switch/react\",\n  \"sourceLink\": \"https://github.com/patternfly/patternfly-react/blob/main/packages/docs/packages/react-core/src/components/Switch/examples/Switch.md\",\n  \"propComponents\": [\n    {\n      \"name\": \"Switch\",\n      \"description\": \"\",\n      \"props\": [\n        {\n          \"name\": \"aria-label\",\n          \"type\": \"string\",\n          \"description\": \"Adds accessible text to the switch, and should describe the isChecked=\\\"true\\\" state. When label is defined, aria-label should be set to the text string that is visible when isChecked is true.\",\n          \"defaultValue\": \"''\"\n        },\n        {\n          \"name\": \"className\",\n          \"type\": \"string\",\n          \"description\": \"Additional classes added to the switch\"\n        },\n        {\n          \"name\": \"hasCheckIcon\",\n          \"type\": \"boolean\",\n          \"description\": \"Flag to show if the switch has a check icon.\"\n        },\n        {\n          \"name\": \"id\",\n          \"type\": \"string\",\n          \"description\": \"id for the label.\"\n        },\n        {\n          \"name\": \"isChecked\",\n          \"type\": \"boolean\",\n          \"description\": \"Flag to show if the switch is checked.\",\n          \"defaultValue\": \"true\"\n        },\n        {\n          \"name\": \"isDisabled\",\n          \"type\": \"boolean\",\n          \"description\": \"Flag to show if the switch is disabled.\",\n          \"defaultValue\": \"false\"\n        },\n        {\n          \"name\": \"isReversed\",\n          \"type\": \"boolean\",\n          \"description\": \"Flag to reverse the layout of toggle and label (toggle on right).\",\n          \"defaultValue\": \"false\"\n        },\n        {\n          \"name\": \"label\",\n          \"type\": \"React.ReactNode\",\n          \"description\": \"Text value for the label when on\"\n        },\n        {\n          \"name\": \"labelOff\",\n          \"type\": \"React.ReactNode\",\n          \"description\": \"Text value for the label when off\"\n        },\n        {\n          \"name\": \"onChange\",\n          \"type\": \"(checked: boolean, event: React.FormEvent<HTMLInputElement>) => void\",\n          \"description\": \"A callback for when the switch selection changes. (isChecked, event) => {}\",\n          \"defaultValue\": \"() => undefined as any\"\n        }\n      ]\n    }\n  ],\n  \"cssPrefix\": [\n    \"pf-c-switch\"\n  ],\n  \"examples\": [\n    \"Basic\",\n    \"Reversed Layout\",\n    \"Without label\",\n    \"Checked with label\",\n    \"Disabled\",\n    \"Uncontrolled\"\n  ]\n};\npageData.examples = {\n  'Basic': props => \n    <Example {...pageData} {...props} {...{\"code\":\"import React from 'react';\\nimport { Switch } from '@patternfly/react-core';\\n\\nclass SimpleSwitch extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      isChecked: true\\n    };\\n    this.handleChange = isChecked => {\\n      this.setState({ isChecked });\\n    };\\n  }\\n\\n  render() {\\n    const { isChecked } = this.state;\\n    return (\\n      <Switch\\n        id=\\\"simple-switch\\\"\\n        label=\\\"Message when on\\\"\\n        labelOff=\\\"Message when off\\\"\\n        isChecked={isChecked}\\n        onChange={this.handleChange}\\n      />\\n    );\\n  }\\n}\",\"title\":\"Basic\",\"lang\":\"js\"}}>\n      \n    </Example>,\n  'Reversed Layout': props => \n    <Example {...pageData} {...props} {...{\"code\":\"import React from 'react';\\nimport { Switch } from '@patternfly/react-core';\\n\\nclass ReversedSwitch extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      isChecked: true\\n    };\\n    this.handleChange = isChecked => {\\n      this.setState({ isChecked });\\n    };\\n  }\\n\\n  render() {\\n    const { isChecked } = this.state;\\n    return (\\n      <Switch\\n        id=\\\"reversed-switch\\\"\\n        label=\\\"Message when on\\\"\\n        labelOff=\\\"Message when off\\\"\\n        isChecked={isChecked}\\n        onChange={this.handleChange}\\n        isReversed\\n      />\\n    );\\n  }\\n}\",\"title\":\"Reversed Layout\",\"lang\":\"js\"}}>\n      \n    </Example>,\n  'Without label': props => \n    <Example {...pageData} {...props} {...{\"code\":\"import React from 'react';\\nimport { Switch } from '@patternfly/react-core';\\n\\nclass NoLabelSwitch extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      isChecked: true\\n    };\\n    this.handleChange = isChecked => {\\n      this.setState({ isChecked });\\n    };\\n  }\\n\\n  render() {\\n    const { isChecked } = this.state;\\n    return (\\n      <Switch id=\\\"no-label-switch-on\\\" aria-label=\\\"Message when on\\\" isChecked={isChecked} onChange={this.handleChange} />\\n    );\\n  }\\n}\",\"title\":\"Without label\",\"lang\":\"js\"}}>\n      \n    </Example>,\n  'Checked with label': props => \n    <Example {...pageData} {...props} {...{\"code\":\"import React from 'react';\\nimport { Switch } from '@patternfly/react-core';\\n\\nclass CheckedWithLabelSwitch extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      isChecked: true\\n    };\\n    this.handleChange = isChecked => {\\n      this.setState({ isChecked });\\n    };\\n  }\\n\\n  render() {\\n    const { isChecked } = this.state;\\n    return (\\n      <Switch\\n        label=\\\"Message when on\\\"\\n        labelOff=\\\"Message when off\\\"\\n        id=\\\"checked-with-label-switch-on\\\"\\n        aria-label=\\\"Message when on\\\"\\n        isChecked={isChecked}\\n        hasCheckIcon\\n        onChange={this.handleChange}\\n      />\\n    );\\n  }\\n}\",\"title\":\"Checked with label\",\"lang\":\"js\"}}>\n      \n    </Example>,\n  'Disabled': props => \n    <Example {...pageData} {...props} {...{\"code\":\"import React from 'react';\\nimport { Switch } from '@patternfly/react-core';\\n\\nconst Disabled = () => (\\n  <React.Fragment>\\n    <Switch\\n      id=\\\"disabled-switch-on\\\"\\n      aria-label=\\\"Message when on\\\"\\n      label=\\\"Message when on\\\"\\n      labelOff=\\\"Message when off\\\"\\n      isChecked\\n      isDisabled\\n    />\\n    <br />\\n    <Switch\\n      id=\\\"disabled-switch-off\\\"\\n      aria-label=\\\"Message when on\\\"\\n      label=\\\"Message when on\\\"\\n      labelOff=\\\"Message when off\\\"\\n      isChecked={false}\\n      isDisabled\\n    />\\n    <br />\\n    <Switch id=\\\"disabled-no-label-switch-on\\\" aria-label=\\\"Message when on\\\" isChecked isDisabled />\\n    <br />\\n    <Switch id=\\\"disabled-no-label-switch-off\\\" aria-label=\\\"Message when on\\\" isChecked={false} isDisabled />\\n  </React.Fragment>\\n)\",\"title\":\"Disabled\",\"lang\":\"js\"}}>\n      \n    </Example>,\n  'Uncontrolled': props => \n    <Example {...pageData} {...props} {...{\"code\":\"import React from 'react';\\nimport { Switch } from '@patternfly/react-core';\\n\\nconst Uncontrolled = () => (\\n  <React.Fragment>\\n    <Switch\\n      id=\\\"uncontrolled-switch-on\\\"\\n      aria-label=\\\"Message when on\\\"\\n      label=\\\"Message when on\\\"\\n      labelOff=\\\"Message when off\\\"\\n      isChecked\\n    />\\n    <br />\\n    <Switch\\n      id=\\\"uncontrolled-switch-off\\\"\\n      aria-label=\\\"Message when on\\\"\\n      label=\\\"Message when on\\\"\\n      labelOff=\\\"Message when off\\\"\\n      isChecked={false}\\n    />\\n    <br />\\n    <Switch id=\\\"uncontrolled-no-label-switch-on\\\" aria-label=\\\"Message when on\\\" isChecked />\\n    <br />\\n    <Switch id=\\\"uncontrolled-no-label-switch-off\\\" aria-label=\\\"Message when on\\\" isChecked={false} />\\n  </React.Fragment>\\n)\",\"title\":\"Uncontrolled\",\"lang\":\"js\"}}>\n      \n    </Example>\n};\n\nconst Component = () => (\n  <React.Fragment>\n    <AutoLinkHeader {...{\"id\":\"examples\",\"size\":\"h2\",\"className\":\"ws-title ws-h2\"}}>\n      {`Examples`}\n    </AutoLinkHeader>\n    {React.createElement(pageData.examples[\"Basic\"])}\n    {React.createElement(pageData.examples[\"Reversed Layout\"])}\n    {React.createElement(pageData.examples[\"Without label\"])}\n    {React.createElement(pageData.examples[\"Checked with label\"])}\n    {React.createElement(pageData.examples[\"Disabled\"])}\n    {React.createElement(pageData.examples[\"Uncontrolled\"])}\n  </React.Fragment>\n);\nComponent.displayName = 'ComponentsSwitchReactDocs';\nComponent.pageData = pageData;\n\nexport default Component;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}