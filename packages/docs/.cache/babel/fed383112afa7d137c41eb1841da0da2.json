{"ast":null,"code":"import React from 'react';\nimport { AutoLinkHeader, Example, Link as PatternflyThemeLink } from 'theme-patternfly-org/components';\nimport srcImport204 from '../../../content/design-guidelines/components/file-upload/./img/Fileupload.png';\nimport srcImport205 from '../../../content/design-guidelines/components/file-upload/./img/Noneditable.png';\nimport srcImport206 from '../../../content/design-guidelines/components/file-upload/./img/editable.png';\nimport srcImport207 from '../../../content/design-guidelines/components/file-upload/./img/Loading.png';\nimport srcImport208 from '../../../content/design-guidelines/components/file-upload/./img/FileError.png';\nvar pageData = {\n  \"id\": \"File upload\",\n  \"section\": \"components\",\n  \"source\": \"design-guidelines\",\n  \"slug\": \"/components/file-upload/design-guidelines\",\n  \"sourceLink\": \"https://github.com/patternfly/patternfly-org/blob/main/packages/docs/src/content/design-guidelines/components/file-upload/file-upload.md\"\n};\npageData.examples = {};\n\nvar Component = function Component() {\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"p\", {\n    \"className\": \"ws-p\"\n  }, \"A \", /*#__PURE__*/React.createElement(\"strong\", null, \"file upload\"), \" component allows the users to upload a single file into the browser.\"), /*#__PURE__*/React.createElement(AutoLinkHeader, {\n    \"id\": \"usage\",\n    \"size\": \"h2\",\n    \"className\": \"ws-title ws-h2\"\n  }, \"Usage\"), /*#__PURE__*/React.createElement(\"p\", {\n    \"className\": \"ws-p\"\n  }, \"Use a single file upload component when only one file can be uploaded. If multiple files need to be uploaded, use the \", /*#__PURE__*/React.createElement(PatternflyThemeLink, {\n    \"to\": \"https://www.patternfly.org/v4/components/file-upload---multiple/\"\n  }, \"multiple file upload component\"), \". This component is recommended for the use of text files where content can easily be displayed in the text area, but all file types are supported.\"), /*#__PURE__*/React.createElement(\"p\", {\n    \"className\": \"ws-p\"\n  }, \"Once the file is uploaded, the user can edit the content.\"), /*#__PURE__*/React.createElement(\"p\", {\n    \"className\": \"ws-p\"\n  }, \"To upload, a user can either:\"), /*#__PURE__*/React.createElement(\"ul\", {\n    \"className\": \"ws-ul\"\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    \"className\": \"ws-li\"\n  }, \"Drag and drop the file into the box. When the user hovers over the file upload component, a message should appear telling the user they can drop files there.\"), /*#__PURE__*/React.createElement(\"li\", {\n    \"className\": \"ws-li\"\n  }, \"Browse their device for a file to upload.\")), /*#__PURE__*/React.createElement(AutoLinkHeader, {\n    \"id\": \"elements\",\n    \"size\": \"h2\",\n    \"className\": \"ws-title ws-h2\"\n  }, \"Elements\"), /*#__PURE__*/React.createElement(\"img\", {\n    src: srcImport204,\n    height: srcImport204.height * 442 / srcImport204.width,\n    \"alt\": \"File Upload\",\n    \"width\": \"442\",\n    \"className\": \"ws-img\"\n  }), /*#__PURE__*/React.createElement(\"ol\", {\n    \"className\": \"ws-ol\"\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    \"className\": \"ws-li\"\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    \"className\": \"ws-p\"\n  }, /*#__PURE__*/React.createElement(\"strong\", null, \"Label\"), \": Text to inform users about how they can interact with the component. The text should describe that you can either drag and drop a file into the drop zone, or click the button to upload a file.\")), /*#__PURE__*/React.createElement(\"li\", {\n    \"className\": \"ws-li\"\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    \"className\": \"ws-p\"\n  }, /*#__PURE__*/React.createElement(\"strong\", null, \"Button\"), \": A button to upload files if preferred.\"))), /*#__PURE__*/React.createElement(AutoLinkHeader, {\n    \"id\": \"best-practices\",\n    \"size\": \"h2\",\n    \"className\": \"ws-title ws-h2\"\n  }, \"Best practices\"), /*#__PURE__*/React.createElement(\"ul\", {\n    \"className\": \"ws-ul\"\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    \"className\": \"ws-li\"\n  }, \"Show the process of uploading. If large file sizes will be supported in your context, showing progress is important. However, if the file size supported will always upload in a matter of a few seconds this may not be necessary.\")), /*#__PURE__*/React.createElement(AutoLinkHeader, {\n    \"id\": \"behavior\",\n    \"size\": \"h2\",\n    \"className\": \"ws-title ws-h2\"\n  }, \"Behavior\"), /*#__PURE__*/React.createElement(AutoLinkHeader, {\n    \"id\": \"upload-complete-non-editable\",\n    \"size\": \"h3\",\n    \"className\": \"ws-title ws-h3\"\n  }, \"Upload complete non-editable\"), /*#__PURE__*/React.createElement(\"img\", {\n    src: srcImport205,\n    height: srcImport205.height * 442 / srcImport205.width,\n    \"alt\": \"File upload with greyed out text box\",\n    \"width\": \"442\",\n    \"className\": \"ws-img\"\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    \"className\": \"ws-p\"\n  }, \"Once the file is uploaded, users cannot edit the text displayed. The text box should be greyed out to indicate it cannot be changed.\"), /*#__PURE__*/React.createElement(AutoLinkHeader, {\n    \"id\": \"upload-complete-editable\",\n    \"size\": \"h3\",\n    \"className\": \"ws-title ws-h3\"\n  }, \"Upload complete editable\"), /*#__PURE__*/React.createElement(\"img\", {\n    src: srcImport206,\n    height: srcImport206.height * 442 / srcImport206.width,\n    \"alt\": \"File Upload with text editable\",\n    \"width\": \"442\",\n    \"className\": \"ws-img\"\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    \"className\": \"ws-p\"\n  }, \"Once the file is uploaded, the user can edit the text displayed by clicking within the text box.\"), /*#__PURE__*/React.createElement(AutoLinkHeader, {\n    \"id\": \"loading-states\",\n    \"size\": \"h3\",\n    \"className\": \"ws-title ws-h3\"\n  }, \"Loading states\"), /*#__PURE__*/React.createElement(\"img\", {\n    src: srcImport207,\n    height: srcImport207.height * 442 / srcImport207.width,\n    \"alt\": \"File upload with loading symbol\",\n    \"width\": \"442\",\n    \"className\": \"ws-img\"\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    \"className\": \"ws-p\"\n  }, \"While a file is being uploaded, the waiting icon is displayed.\"), /*#__PURE__*/React.createElement(AutoLinkHeader, {\n    \"id\": \"error\",\n    \"size\": \"h3\",\n    \"className\": \"ws-title ws-h3\"\n  }, \"Error\"), /*#__PURE__*/React.createElement(\"img\", {\n    src: srcImport208,\n    height: srcImport208.height * 448 / srcImport208.width,\n    \"alt\": \"File upload with a an error alert\",\n    \"width\": \"448\",\n    \"className\": \"ws-img\"\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    \"className\": \"ws-p\"\n  }, \"When a specific file cannot be uploaded successfully, the corresponding file will show an error state. Error messages should provide clear guidance to help the user resolve the error.\"));\n};\n\nComponent.displayName = 'ComponentsFileUploadDesignGuidelinesDocs';\nComponent.pageData = pageData;\nexport default Component;","map":{"version":3,"names":["React","AutoLinkHeader","Example","Link","PatternflyThemeLink","srcImport204","srcImport205","srcImport206","srcImport207","srcImport208","pageData","examples","Component","height","width","displayName"],"sources":["/Users/jschuler/Code/patternfly-quickstarts/packages/docs/src/generated/components/file-upload/design-guidelines.js"],"sourcesContent":["import React from 'react';\nimport { AutoLinkHeader, Example, Link as PatternflyThemeLink } from 'theme-patternfly-org/components';\nimport srcImport204 from '../../../content/design-guidelines/components/file-upload/./img/Fileupload.png';\nimport srcImport205 from '../../../content/design-guidelines/components/file-upload/./img/Noneditable.png';\nimport srcImport206 from '../../../content/design-guidelines/components/file-upload/./img/editable.png';\nimport srcImport207 from '../../../content/design-guidelines/components/file-upload/./img/Loading.png';\nimport srcImport208 from '../../../content/design-guidelines/components/file-upload/./img/FileError.png';\nconst pageData = {\n  \"id\": \"File upload\",\n  \"section\": \"components\",\n  \"source\": \"design-guidelines\",\n  \"slug\": \"/components/file-upload/design-guidelines\",\n  \"sourceLink\": \"https://github.com/patternfly/patternfly-org/blob/main/packages/docs/src/content/design-guidelines/components/file-upload/file-upload.md\"\n};\npageData.examples = {\n  \n};\n\nconst Component = () => (\n  <React.Fragment>\n    <p {...{\"className\":\"ws-p\"}}>\n      {`A `}\n      <strong>\n        {`file upload`}\n      </strong>\n      {` component allows the users to upload a single file into the browser.`}\n    </p>\n    <AutoLinkHeader {...{\"id\":\"usage\",\"size\":\"h2\",\"className\":\"ws-title ws-h2\"}}>\n      {`Usage`}\n    </AutoLinkHeader>\n    <p {...{\"className\":\"ws-p\"}}>\n      {`Use a single file upload component when only one file can be uploaded. If multiple files need to be uploaded, use the `}\n      <PatternflyThemeLink {...{\"to\":\"https://www.patternfly.org/v4/components/file-upload---multiple/\"}}>\n        {`multiple file upload component`}\n      </PatternflyThemeLink>\n      {`. This component is recommended for the use of text files where content can easily be displayed in the text area, but all file types are supported.`}\n    </p>\n    <p {...{\"className\":\"ws-p\"}}>\n      {`Once the file is uploaded, the user can edit the content.`}\n    </p>\n    <p {...{\"className\":\"ws-p\"}}>\n      {`To upload, a user can either:`}\n    </p>\n    <ul {...{\"className\":\"ws-ul\"}}>\n      <li {...{\"className\":\"ws-li\"}}>\n        {`Drag and drop the file into the box. When the user hovers over the file upload component, a message should appear telling the user they can drop files there.`}\n      </li>\n      <li {...{\"className\":\"ws-li\"}}>\n        {`Browse their device for a file to upload.`}\n      </li>\n    </ul>\n    <AutoLinkHeader {...{\"id\":\"elements\",\"size\":\"h2\",\"className\":\"ws-title ws-h2\"}}>\n      {`Elements`}\n    </AutoLinkHeader>\n    <img src={srcImport204} height={srcImport204.height * 442 / srcImport204.width} {...{\"alt\":\"File Upload\",\"width\":\"442\",\"className\":\"ws-img\"}}>\n    </img>\n    <ol {...{\"className\":\"ws-ol\"}}>\n      <li {...{\"className\":\"ws-li\"}}>\n        <p {...{\"className\":\"ws-p\"}}>\n          <strong>\n            {`Label`}\n          </strong>\n          {`: Text to inform users about how they can interact with the component. The text should describe that you can either drag and drop a file into the drop zone, or click the button to upload a file.`}\n        </p>\n      </li>\n      <li {...{\"className\":\"ws-li\"}}>\n        <p {...{\"className\":\"ws-p\"}}>\n          <strong>\n            {`Button`}\n          </strong>\n          {`: A button to upload files if preferred.`}\n        </p>\n      </li>\n    </ol>\n    <AutoLinkHeader {...{\"id\":\"best-practices\",\"size\":\"h2\",\"className\":\"ws-title ws-h2\"}}>\n      {`Best practices`}\n    </AutoLinkHeader>\n    <ul {...{\"className\":\"ws-ul\"}}>\n      <li {...{\"className\":\"ws-li\"}}>\n        {`Show the process of uploading. If large file sizes will be supported in your context, showing progress is important. However, if the file size supported will always upload in a matter of a few seconds this may not be necessary.`}\n      </li>\n    </ul>\n    <AutoLinkHeader {...{\"id\":\"behavior\",\"size\":\"h2\",\"className\":\"ws-title ws-h2\"}}>\n      {`Behavior`}\n    </AutoLinkHeader>\n    <AutoLinkHeader {...{\"id\":\"upload-complete-non-editable\",\"size\":\"h3\",\"className\":\"ws-title ws-h3\"}}>\n      {`Upload complete non-editable`}\n    </AutoLinkHeader>\n    <img src={srcImport205} height={srcImport205.height * 442 / srcImport205.width} {...{\"alt\":\"File upload with greyed out text box\",\"width\":\"442\",\"className\":\"ws-img\"}}>\n    </img>\n    <p {...{\"className\":\"ws-p\"}}>\n      {`Once the file is uploaded, users cannot edit the text displayed. The text box should be greyed out to indicate it cannot be changed.`}\n    </p>\n    <AutoLinkHeader {...{\"id\":\"upload-complete-editable\",\"size\":\"h3\",\"className\":\"ws-title ws-h3\"}}>\n      {`Upload complete editable`}\n    </AutoLinkHeader>\n    <img src={srcImport206} height={srcImport206.height * 442 / srcImport206.width} {...{\"alt\":\"File Upload with text editable\",\"width\":\"442\",\"className\":\"ws-img\"}}>\n    </img>\n    <p {...{\"className\":\"ws-p\"}}>\n      {`Once the file is uploaded, the user can edit the text displayed by clicking within the text box.`}\n    </p>\n    <AutoLinkHeader {...{\"id\":\"loading-states\",\"size\":\"h3\",\"className\":\"ws-title ws-h3\"}}>\n      {`Loading states`}\n    </AutoLinkHeader>\n    <img src={srcImport207} height={srcImport207.height * 442 / srcImport207.width} {...{\"alt\":\"File upload with loading symbol\",\"width\":\"442\",\"className\":\"ws-img\"}}>\n    </img>\n    <p {...{\"className\":\"ws-p\"}}>\n      {`While a file is being uploaded, the waiting icon is displayed.`}\n    </p>\n    <AutoLinkHeader {...{\"id\":\"error\",\"size\":\"h3\",\"className\":\"ws-title ws-h3\"}}>\n      {`Error`}\n    </AutoLinkHeader>\n    <img src={srcImport208} height={srcImport208.height * 448 / srcImport208.width} {...{\"alt\":\"File upload with a an error alert\",\"width\":\"448\",\"className\":\"ws-img\"}}>\n    </img>\n    <p {...{\"className\":\"ws-p\"}}>\n      {`When a specific file cannot be uploaded successfully, the corresponding file will show an error state. Error messages should provide clear guidance to help the user resolve the error.`}\n    </p>\n  </React.Fragment>\n);\nComponent.displayName = 'ComponentsFileUploadDesignGuidelinesDocs';\nComponent.pageData = pageData;\n\nexport default Component;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}