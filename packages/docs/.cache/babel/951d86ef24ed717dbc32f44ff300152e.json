{"ast":null,"code":"function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport { AutoLinkHeader, Example, Link as PatternflyThemeLink } from 'theme-patternfly-org/components';\nimport { Brand, Breadcrumb, BreadcrumbItem, Modal, ModalVariant, Nav, NavItem, NavList, Page, PageToggleButton, PageSection, PageSectionTypes, PageSectionVariants, PageSidebar, Progress, SkipToContent, Text, TextContent, Title, Wizard } from '@patternfly/react-core';\nimport imgBrand from '../../../../node_modules/@patternfly/react-core/src/demos/Wizard/./imgBrand.svg';\nimport BarsIcon from '@patternfly/react-icons/dist/js/icons/bars-icon';\nimport srcImportinmodal from './react-demos/in-modal.png';\nimport srcImportinpage from './react-demos/in-page.png';\nvar pageData = {\n  \"id\": \"Wizard\",\n  \"section\": \"components\",\n  \"source\": \"react-demos\",\n  \"slug\": \"/components/wizard/react-demos\",\n  \"sourceLink\": \"https://github.com/patternfly/patternfly-react/blob/main/packages/docs/packages/react-core/src/demos/Wizard/WizardDemo.md\",\n  \"fullscreenExamples\": [\"In Modal\", \"In Page\"]\n};\npageData.liveContext = {\n  Brand: Brand,\n  Breadcrumb: Breadcrumb,\n  BreadcrumbItem: BreadcrumbItem,\n  Modal: Modal,\n  ModalVariant: ModalVariant,\n  Nav: Nav,\n  NavItem: NavItem,\n  NavList: NavList,\n  Page: Page,\n  PageToggleButton: PageToggleButton,\n  PageSection: PageSection,\n  PageSectionTypes: PageSectionTypes,\n  PageSectionVariants: PageSectionVariants,\n  PageSidebar: PageSidebar,\n  Progress: Progress,\n  SkipToContent: SkipToContent,\n  Text: Text,\n  TextContent: TextContent,\n  Title: Title,\n  Wizard: Wizard,\n  imgBrand: imgBrand,\n  BarsIcon: BarsIcon\n};\npageData.examples = {\n  'In Modal': function InModal(props) {\n    return /*#__PURE__*/React.createElement(Example, _extends({}, pageData, props, {\n      thumbnail: srcImportinmodal,\n      \"code\": \"import React from 'react';\\nimport { Modal, ModalVariant, Wizard } from '@patternfly/react-core';\\n\\nclass BasicWizardDemo extends React.Component {\\n  render() {\\n    const steps = [\\n      { id: 0, name: 'Information', component: <p>Step 1 content</p> },\\n      {\\n        id: 1,\\n        name: 'Configuration',\\n        steps: [\\n          {\\n            id: 2,\\n            name: 'Substep A',\\n            component: <p>Configuration substep A</p>\\n          },\\n          {\\n            id: 3,\\n            name: 'Substep B',\\n            component: <p>Configuration substep B</p>\\n          }\\n        ],\\n        component: <p>Step 2 content</p>\\n      },\\n      { id: 4, name: 'Additional', component: <p>Step 3 content</p> },\\n      { id: 5, name: 'Review', component: <p>Review step content</p>, nextButtonText: 'Finish' }\\n    ];\\n    const title = 'Basic wizard';\\n    return (\\n      <Modal\\n        isOpen\\n        variant={ModalVariant.large}\\n        showClose={false}\\n        hasNoBodyWrapper\\n        aria-describedby=\\\"wiz-modal-demo-description\\\"\\n        aria-labelledby=\\\"wiz-modal-demo-title\\\"\\n      >\\n        <Wizard\\n          navAriaLabel={`${title} steps`}\\n          mainAriaLabel={`${title} content`}\\n          titleId=\\\"wiz-modal-demo-title\\\"\\n          descriptionId=\\\"wiz-modal-demo-description\\\"\\n          title=\\\"Simple wizard in modal\\\"\\n          description=\\\"Simple wizard description\\\"\\n          steps={steps}\\n          height={400}\\n        />\\n      </Modal>\\n    );\\n  }\\n}\",\n      \"title\": \"In Modal\",\n      \"lang\": \"js\",\n      \"isFullscreen\": true\n    }));\n  },\n  'In Page': function InPage(props) {\n    return /*#__PURE__*/React.createElement(Example, _extends({}, pageData, props, {\n      thumbnail: srcImportinpage,\n      \"code\": \"import React from 'react';\\nimport {\\n  Brand,\\n  Breadcrumb,\\n  BreadcrumbItem,\\n  Nav,\\n  NavItem,\\n  NavList,\\n  Page,\\n  PageSection,\\n  PageSectionTypes,\\n  PageSectionVariants,\\n  PageSidebar,\\n  Progress,\\n  SkipToContent,\\n  Text,\\n  TextContent,\\n  Title,\\n  Wizard,\\n  Masthead,\\n  PageToggleButton,\\n  MastheadToggle,\\n  MastheadMain,\\n  MastheadBrand\\n} from '@patternfly/react-core';\\nimport imgBrand from './imgBrand.svg';\\nimport BarsIcon from '@patternfly/react-icons/dist/js/icons/bars-icon';\\n\\nclass FullPageWizard extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      activeItem: 0\\n    };\\n    this.onNavSelect = result => {\\n      this.setState({\\n        activeItem: result.itemId\\n      });\\n    };\\n  }\\n  render() {\\n    const { activeItem } = this.state;\\n    const PageNav = (\\n      <Nav onSelect={this.onNavSelect} aria-label=\\\"Nav\\\">\\n        <NavList>\\n          <NavItem itemId={0} isActive={activeItem === 0}>\\n            System Panel\\n          </NavItem>\\n          <NavItem itemId={1} isActive={activeItem === 1}>\\n            Policy\\n          </NavItem>\\n          <NavItem itemId={2} isActive={activeItem === 2}>\\n            Authentication\\n          </NavItem>\\n          <NavItem itemId={3} isActive={activeItem === 3}>\\n            Network Services\\n          </NavItem>\\n          <NavItem itemId={4} isActive={activeItem === 4}>\\n            Server\\n          </NavItem>\\n        </NavList>\\n      </Nav>\\n    );\\n    const Header = (\\n      <Masthead id=\\\"basic\\\">\\n        <MastheadToggle>\\n          <PageToggleButton variant=\\\"plain\\\" aria-label=\\\"Global navigation\\\">\\n            <BarsIcon />\\n          </PageToggleButton>\\n        </MastheadToggle>\\n        <MastheadMain>\\n          <MastheadBrand>\\n            <Brand src={imgBrand} alt=\\\"Patternfly logo\\\" />\\n          </MastheadBrand>\\n        </MastheadMain>\\n      </Masthead>\\n    );\\n    const Sidebar = <PageSidebar nav={PageNav} />;\\n    const pageId = 'main-content-page-layout-default-nav';\\n    const PageSkipToContent = <SkipToContent href={`#${pageId}`}>Skip to content</SkipToContent>;\\n    const PageBreadcrumb = (\\n      <Breadcrumb>\\n        <BreadcrumbItem>Section home</BreadcrumbItem>\\n        <BreadcrumbItem to=\\\"#\\\">Section title</BreadcrumbItem>\\n        <BreadcrumbItem to=\\\"#\\\">Section title</BreadcrumbItem>\\n        <BreadcrumbItem to=\\\"#\\\" isActive>\\n          Section landing\\n        </BreadcrumbItem>\\n      </Breadcrumb>\\n    );\\n\\n    const steps = [\\n      { id: 0, name: 'Information', component: <p>Step 1 content</p> },\\n      {\\n        id: 1,\\n        name: 'Configuration',\\n        steps: [\\n          {\\n            id: 2,\\n            name: 'Substep A',\\n            component: <p>Configuration substep A</p>\\n          },\\n          {\\n            id: 3,\\n            name: 'Substep B',\\n            component: <p>Configuration substep B</p>\\n          }\\n        ],\\n        component: <p>Step 2 content</p>\\n      },\\n      { id: 4, name: 'Additional', component: <p>Step 3 content</p> },\\n      { id: 5, name: 'Review', component: <p>Review step content</p>, nextButtonText: 'Finish' }\\n    ];\\n    const title = 'Basic wizard';\\n\\n    return (\\n      <React.Fragment>\\n        <Page\\n          header={Header}\\n          sidebar={Sidebar}\\n          isManagedSidebar\\n          skipToContent={PageSkipToContent}\\n          breadcrumb={PageBreadcrumb}\\n          mainContainerId={pageId}\\n        >\\n          <PageSection variant={PageSectionVariants.light}>\\n            <TextContent>\\n              <Text component=\\\"h1\\\">Main title</Text>\\n              <Text component=\\\"p\\\">A demo of a wizard in a page.</Text>\\n            </TextContent>\\n          </PageSection>\\n          <PageSection type={PageSectionTypes.wizard} variant={PageSectionVariants.light}>\\n            <Wizard navAriaLabel={`${title} steps`} mainAriaLabel={`${title} content`} steps={steps} />\\n          </PageSection>\\n        </Page>\\n      </React.Fragment>\\n    );\\n  }\\n}\",\n      \"title\": \"In Page\",\n      \"lang\": \"js\",\n      \"isFullscreen\": true\n    }));\n  }\n};\n\nvar Component = function Component() {\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(AutoLinkHeader, {\n    \"id\": \"demos\",\n    \"size\": \"h2\",\n    \"className\": \"ws-title ws-h2\"\n  }, \"Demos\"), React.createElement(pageData.examples[\"In Modal\"]), React.createElement(pageData.examples[\"In Page\"]));\n};\n\nComponent.displayName = 'ComponentsWizardReactDemosDocs';\nComponent.pageData = pageData;\nexport default Component;","map":{"version":3,"names":["React","AutoLinkHeader","Example","Link","PatternflyThemeLink","Brand","Breadcrumb","BreadcrumbItem","Modal","ModalVariant","Nav","NavItem","NavList","Page","PageToggleButton","PageSection","PageSectionTypes","PageSectionVariants","PageSidebar","Progress","SkipToContent","Text","TextContent","Title","Wizard","imgBrand","BarsIcon","srcImportinmodal","srcImportinpage","pageData","liveContext","examples","props","Component","createElement","displayName"],"sources":["/Users/jschuler/Code/patternfly-quickstarts/packages/docs/src/generated/components/wizard/react-demos.js"],"sourcesContent":["import React from 'react';\nimport { AutoLinkHeader, Example, Link as PatternflyThemeLink } from 'theme-patternfly-org/components';\nimport {\nBrand,\nBreadcrumb,\nBreadcrumbItem,\nModal,\nModalVariant,\nNav,\nNavItem,\nNavList,\nPage,\nPageToggleButton,\nPageSection,\nPageSectionTypes,\nPageSectionVariants,\nPageSidebar,\nProgress,\nSkipToContent,\nText,\nTextContent,\nTitle,\nWizard\n} from '@patternfly/react-core';\nimport imgBrand from '../../../../node_modules/@patternfly/react-core/src/demos/Wizard/./imgBrand.svg';\nimport BarsIcon from '@patternfly/react-icons/dist/js/icons/bars-icon';\nimport srcImportinmodal from './react-demos/in-modal.png';\nimport srcImportinpage from './react-demos/in-page.png';\nconst pageData = {\n  \"id\": \"Wizard\",\n  \"section\": \"components\",\n  \"source\": \"react-demos\",\n  \"slug\": \"/components/wizard/react-demos\",\n  \"sourceLink\": \"https://github.com/patternfly/patternfly-react/blob/main/packages/docs/packages/react-core/src/demos/Wizard/WizardDemo.md\",\n  \"fullscreenExamples\": [\n    \"In Modal\",\n    \"In Page\"\n  ]\n};\npageData.liveContext = {\n  Brand,\n  Breadcrumb,\n  BreadcrumbItem,\n  Modal,\n  ModalVariant,\n  Nav,\n  NavItem,\n  NavList,\n  Page,\n  PageToggleButton,\n  PageSection,\n  PageSectionTypes,\n  PageSectionVariants,\n  PageSidebar,\n  Progress,\n  SkipToContent,\n  Text,\n  TextContent,\n  Title,\n  Wizard,\n  imgBrand,\n  BarsIcon\n};\npageData.examples = {\n  'In Modal': props => \n    <Example {...pageData} {...props} thumbnail={srcImportinmodal} {...{\"code\":\"import React from 'react';\\nimport { Modal, ModalVariant, Wizard } from '@patternfly/react-core';\\n\\nclass BasicWizardDemo extends React.Component {\\n  render() {\\n    const steps = [\\n      { id: 0, name: 'Information', component: <p>Step 1 content</p> },\\n      {\\n        id: 1,\\n        name: 'Configuration',\\n        steps: [\\n          {\\n            id: 2,\\n            name: 'Substep A',\\n            component: <p>Configuration substep A</p>\\n          },\\n          {\\n            id: 3,\\n            name: 'Substep B',\\n            component: <p>Configuration substep B</p>\\n          }\\n        ],\\n        component: <p>Step 2 content</p>\\n      },\\n      { id: 4, name: 'Additional', component: <p>Step 3 content</p> },\\n      { id: 5, name: 'Review', component: <p>Review step content</p>, nextButtonText: 'Finish' }\\n    ];\\n    const title = 'Basic wizard';\\n    return (\\n      <Modal\\n        isOpen\\n        variant={ModalVariant.large}\\n        showClose={false}\\n        hasNoBodyWrapper\\n        aria-describedby=\\\"wiz-modal-demo-description\\\"\\n        aria-labelledby=\\\"wiz-modal-demo-title\\\"\\n      >\\n        <Wizard\\n          navAriaLabel={`${title} steps`}\\n          mainAriaLabel={`${title} content`}\\n          titleId=\\\"wiz-modal-demo-title\\\"\\n          descriptionId=\\\"wiz-modal-demo-description\\\"\\n          title=\\\"Simple wizard in modal\\\"\\n          description=\\\"Simple wizard description\\\"\\n          steps={steps}\\n          height={400}\\n        />\\n      </Modal>\\n    );\\n  }\\n}\",\"title\":\"In Modal\",\"lang\":\"js\",\"isFullscreen\":true}}>\n      \n    </Example>,\n  'In Page': props => \n    <Example {...pageData} {...props} thumbnail={srcImportinpage} {...{\"code\":\"import React from 'react';\\nimport {\\n  Brand,\\n  Breadcrumb,\\n  BreadcrumbItem,\\n  Nav,\\n  NavItem,\\n  NavList,\\n  Page,\\n  PageSection,\\n  PageSectionTypes,\\n  PageSectionVariants,\\n  PageSidebar,\\n  Progress,\\n  SkipToContent,\\n  Text,\\n  TextContent,\\n  Title,\\n  Wizard,\\n  Masthead,\\n  PageToggleButton,\\n  MastheadToggle,\\n  MastheadMain,\\n  MastheadBrand\\n} from '@patternfly/react-core';\\nimport imgBrand from './imgBrand.svg';\\nimport BarsIcon from '@patternfly/react-icons/dist/js/icons/bars-icon';\\n\\nclass FullPageWizard extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      activeItem: 0\\n    };\\n    this.onNavSelect = result => {\\n      this.setState({\\n        activeItem: result.itemId\\n      });\\n    };\\n  }\\n  render() {\\n    const { activeItem } = this.state;\\n    const PageNav = (\\n      <Nav onSelect={this.onNavSelect} aria-label=\\\"Nav\\\">\\n        <NavList>\\n          <NavItem itemId={0} isActive={activeItem === 0}>\\n            System Panel\\n          </NavItem>\\n          <NavItem itemId={1} isActive={activeItem === 1}>\\n            Policy\\n          </NavItem>\\n          <NavItem itemId={2} isActive={activeItem === 2}>\\n            Authentication\\n          </NavItem>\\n          <NavItem itemId={3} isActive={activeItem === 3}>\\n            Network Services\\n          </NavItem>\\n          <NavItem itemId={4} isActive={activeItem === 4}>\\n            Server\\n          </NavItem>\\n        </NavList>\\n      </Nav>\\n    );\\n    const Header = (\\n      <Masthead id=\\\"basic\\\">\\n        <MastheadToggle>\\n          <PageToggleButton variant=\\\"plain\\\" aria-label=\\\"Global navigation\\\">\\n            <BarsIcon />\\n          </PageToggleButton>\\n        </MastheadToggle>\\n        <MastheadMain>\\n          <MastheadBrand>\\n            <Brand src={imgBrand} alt=\\\"Patternfly logo\\\" />\\n          </MastheadBrand>\\n        </MastheadMain>\\n      </Masthead>\\n    );\\n    const Sidebar = <PageSidebar nav={PageNav} />;\\n    const pageId = 'main-content-page-layout-default-nav';\\n    const PageSkipToContent = <SkipToContent href={`#${pageId}`}>Skip to content</SkipToContent>;\\n    const PageBreadcrumb = (\\n      <Breadcrumb>\\n        <BreadcrumbItem>Section home</BreadcrumbItem>\\n        <BreadcrumbItem to=\\\"#\\\">Section title</BreadcrumbItem>\\n        <BreadcrumbItem to=\\\"#\\\">Section title</BreadcrumbItem>\\n        <BreadcrumbItem to=\\\"#\\\" isActive>\\n          Section landing\\n        </BreadcrumbItem>\\n      </Breadcrumb>\\n    );\\n\\n    const steps = [\\n      { id: 0, name: 'Information', component: <p>Step 1 content</p> },\\n      {\\n        id: 1,\\n        name: 'Configuration',\\n        steps: [\\n          {\\n            id: 2,\\n            name: 'Substep A',\\n            component: <p>Configuration substep A</p>\\n          },\\n          {\\n            id: 3,\\n            name: 'Substep B',\\n            component: <p>Configuration substep B</p>\\n          }\\n        ],\\n        component: <p>Step 2 content</p>\\n      },\\n      { id: 4, name: 'Additional', component: <p>Step 3 content</p> },\\n      { id: 5, name: 'Review', component: <p>Review step content</p>, nextButtonText: 'Finish' }\\n    ];\\n    const title = 'Basic wizard';\\n\\n    return (\\n      <React.Fragment>\\n        <Page\\n          header={Header}\\n          sidebar={Sidebar}\\n          isManagedSidebar\\n          skipToContent={PageSkipToContent}\\n          breadcrumb={PageBreadcrumb}\\n          mainContainerId={pageId}\\n        >\\n          <PageSection variant={PageSectionVariants.light}>\\n            <TextContent>\\n              <Text component=\\\"h1\\\">Main title</Text>\\n              <Text component=\\\"p\\\">A demo of a wizard in a page.</Text>\\n            </TextContent>\\n          </PageSection>\\n          <PageSection type={PageSectionTypes.wizard} variant={PageSectionVariants.light}>\\n            <Wizard navAriaLabel={`${title} steps`} mainAriaLabel={`${title} content`} steps={steps} />\\n          </PageSection>\\n        </Page>\\n      </React.Fragment>\\n    );\\n  }\\n}\",\"title\":\"In Page\",\"lang\":\"js\",\"isFullscreen\":true}}>\n      \n    </Example>\n};\n\nconst Component = () => (\n  <React.Fragment>\n    <AutoLinkHeader {...{\"id\":\"demos\",\"size\":\"h2\",\"className\":\"ws-title ws-h2\"}}>\n      {`Demos`}\n    </AutoLinkHeader>\n    {React.createElement(pageData.examples[\"In Modal\"])}\n    {React.createElement(pageData.examples[\"In Page\"])}\n  </React.Fragment>\n);\nComponent.displayName = 'ComponentsWizardReactDemosDocs';\nComponent.pageData = pageData;\n\nexport default Component;\n"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,EAAyBC,OAAzB,EAAkCC,IAAI,IAAIC,mBAA1C,QAAqE,iCAArE;AACA,SACAC,KADA,EAEAC,UAFA,EAGAC,cAHA,EAIAC,KAJA,EAKAC,YALA,EAMAC,GANA,EAOAC,OAPA,EAQAC,OARA,EASAC,IATA,EAUAC,gBAVA,EAWAC,WAXA,EAYAC,gBAZA,EAaAC,mBAbA,EAcAC,WAdA,EAeAC,QAfA,EAgBAC,aAhBA,EAiBAC,IAjBA,EAkBAC,WAlBA,EAmBAC,KAnBA,EAoBAC,MApBA,QAqBO,wBArBP;AAsBA,OAAOC,QAAP,MAAqB,iFAArB;AACA,OAAOC,QAAP,MAAqB,iDAArB;AACA,OAAOC,gBAAP,MAA6B,4BAA7B;AACA,OAAOC,eAAP,MAA4B,2BAA5B;AACA,IAAMC,QAAQ,GAAG;EACf,MAAM,QADS;EAEf,WAAW,YAFI;EAGf,UAAU,aAHK;EAIf,QAAQ,gCAJO;EAKf,cAAc,2HALC;EAMf,sBAAsB,CACpB,UADoB,EAEpB,SAFoB;AANP,CAAjB;AAWAA,QAAQ,CAACC,WAAT,GAAuB;EACrBzB,KAAK,EAALA,KADqB;EAErBC,UAAU,EAAVA,UAFqB;EAGrBC,cAAc,EAAdA,cAHqB;EAIrBC,KAAK,EAALA,KAJqB;EAKrBC,YAAY,EAAZA,YALqB;EAMrBC,GAAG,EAAHA,GANqB;EAOrBC,OAAO,EAAPA,OAPqB;EAQrBC,OAAO,EAAPA,OARqB;EASrBC,IAAI,EAAJA,IATqB;EAUrBC,gBAAgB,EAAhBA,gBAVqB;EAWrBC,WAAW,EAAXA,WAXqB;EAYrBC,gBAAgB,EAAhBA,gBAZqB;EAarBC,mBAAmB,EAAnBA,mBAbqB;EAcrBC,WAAW,EAAXA,WAdqB;EAerBC,QAAQ,EAARA,QAfqB;EAgBrBC,aAAa,EAAbA,aAhBqB;EAiBrBC,IAAI,EAAJA,IAjBqB;EAkBrBC,WAAW,EAAXA,WAlBqB;EAmBrBC,KAAK,EAALA,KAnBqB;EAoBrBC,MAAM,EAANA,MApBqB;EAqBrBC,QAAQ,EAARA,QArBqB;EAsBrBC,QAAQ,EAARA;AAtBqB,CAAvB;AAwBAG,QAAQ,CAACE,QAAT,GAAoB;EAClB,YAAY,iBAAAC,KAAK;IAAA,oBACf,oBAAC,OAAD,eAAaH,QAAb,EAA2BG,KAA3B;MAAkC,SAAS,EAAEL,gBAA7C;MAAoE,QAAO,o/CAA3E;MAAgkD,SAAQ,UAAxkD;MAAmlD,QAAO,IAA1lD;MAA+lD,gBAAe;IAA9mD,GADe;EAAA,CADC;EAKlB,WAAW,gBAAAK,KAAK;IAAA,oBACd,oBAAC,OAAD,eAAaH,QAAb,EAA2BG,KAA3B;MAAkC,SAAS,EAAEJ,eAA7C;MAAmE,QAAO,m9HAA1E;MAA8hI,SAAQ,SAAtiI;MAAgjI,QAAO,IAAvjI;MAA4jI,gBAAe;IAA3kI,GADc;EAAA;AALE,CAApB;;AAWA,IAAMK,SAAS,GAAG,SAAZA,SAAY;EAAA,oBAChB,oBAAC,KAAD,CAAO,QAAP,qBACE,oBAAC,cAAD;IAAqB,MAAK,OAA1B;IAAkC,QAAO,IAAzC;IAA8C,aAAY;EAA1D,WADF,EAIGjC,KAAK,CAACkC,aAAN,CAAoBL,QAAQ,CAACE,QAAT,CAAkB,UAAlB,CAApB,CAJH,EAKG/B,KAAK,CAACkC,aAAN,CAAoBL,QAAQ,CAACE,QAAT,CAAkB,SAAlB,CAApB,CALH,CADgB;AAAA,CAAlB;;AASAE,SAAS,CAACE,WAAV,GAAwB,gCAAxB;AACAF,SAAS,CAACJ,QAAV,GAAqBA,QAArB;AAEA,eAAeI,SAAf"},"metadata":{},"sourceType":"module"}