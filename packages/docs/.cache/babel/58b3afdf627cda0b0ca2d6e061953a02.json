{"ast":null,"code":"function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport { AutoLinkHeader, Example, Link as PatternflyThemeLink } from 'theme-patternfly-org/components';\nvar pageData = {\n  \"id\": \"Badge\",\n  \"section\": \"components\",\n  \"source\": \"react\",\n  \"slug\": \"/components/badge/react\",\n  \"sourceLink\": \"https://github.com/patternfly/patternfly-react/blob/main/packages/docs/packages/react-core/src/components/Badge/examples/Badge.md\",\n  \"propComponents\": [{\n    \"name\": \"Badge\",\n    \"description\": \"\",\n    \"props\": [{\n      \"name\": \"children\",\n      \"type\": \"React.ReactNode\",\n      \"description\": \"content rendered inside the Badge\",\n      \"defaultValue\": \"''\"\n    }, {\n      \"name\": \"className\",\n      \"type\": \"string\",\n      \"description\": \"additional classes added to the Badge\",\n      \"defaultValue\": \"''\"\n    }, {\n      \"name\": \"isRead\",\n      \"type\": \"boolean\",\n      \"description\": \"Adds styling to the badge to indicate it has been read\",\n      \"defaultValue\": \"false\"\n    }]\n  }],\n  \"cssPrefix\": [\"pf-c-badge\"],\n  \"examples\": [\"Read\", \"Unread\"]\n};\npageData.examples = {\n  'Read': function Read(props) {\n    return /*#__PURE__*/React.createElement(Example, _extends({}, pageData, props, {\n      \"code\": \"import React from 'react';\\nimport { Badge } from '@patternfly/react-core';\\n\\nexport const BadgeRead: React.FunctionComponent = () => (\\n  <React.Fragment>\\n    <Badge key={1} isRead>\\n      7\\n    </Badge>{' '}\\n    <Badge key={2} isRead>\\n      24\\n    </Badge>{' '}\\n    <Badge key={3} isRead>\\n      240\\n    </Badge>{' '}\\n    <Badge key={4} isRead>\\n      999+\\n    </Badge>\\n  </React.Fragment>\\n);\\n\",\n      \"title\": \"Read\",\n      \"lang\": \"ts\"\n    }));\n  },\n  'Unread': function Unread(props) {\n    return /*#__PURE__*/React.createElement(Example, _extends({}, pageData, props, {\n      \"code\": \"import React from 'react';\\nimport { Badge } from '@patternfly/react-core';\\n\\nexport const BadgeUnread: React.FunctionComponent = () => (\\n  <React.Fragment>\\n    <Badge key={1}>7</Badge> <Badge key={2}>24</Badge> <Badge key={3}>240</Badge> <Badge key={4}>999+</Badge>\\n  </React.Fragment>\\n);\\n\",\n      \"title\": \"Unread\",\n      \"lang\": \"ts\"\n    }));\n  }\n};\n\nvar Component = function Component() {\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(AutoLinkHeader, {\n    \"id\": \"examples\",\n    \"size\": \"h2\",\n    \"className\": \"ws-title ws-h2\"\n  }, \"Examples\"), React.createElement(pageData.examples[\"Read\"]), React.createElement(pageData.examples[\"Unread\"]));\n};\n\nComponent.displayName = 'ComponentsBadgeReactDocs';\nComponent.pageData = pageData;\nexport default Component;","map":{"version":3,"names":["React","AutoLinkHeader","Example","Link","PatternflyThemeLink","pageData","examples","props","Component","createElement","displayName"],"sources":["/Users/jschuler/Code/patternfly-quickstarts/packages/docs/src/generated/components/badge/react.js"],"sourcesContent":["import React from 'react';\nimport { AutoLinkHeader, Example, Link as PatternflyThemeLink } from 'theme-patternfly-org/components';\n\nconst pageData = {\n  \"id\": \"Badge\",\n  \"section\": \"components\",\n  \"source\": \"react\",\n  \"slug\": \"/components/badge/react\",\n  \"sourceLink\": \"https://github.com/patternfly/patternfly-react/blob/main/packages/docs/packages/react-core/src/components/Badge/examples/Badge.md\",\n  \"propComponents\": [\n    {\n      \"name\": \"Badge\",\n      \"description\": \"\",\n      \"props\": [\n        {\n          \"name\": \"children\",\n          \"type\": \"React.ReactNode\",\n          \"description\": \"content rendered inside the Badge\",\n          \"defaultValue\": \"''\"\n        },\n        {\n          \"name\": \"className\",\n          \"type\": \"string\",\n          \"description\": \"additional classes added to the Badge\",\n          \"defaultValue\": \"''\"\n        },\n        {\n          \"name\": \"isRead\",\n          \"type\": \"boolean\",\n          \"description\": \"Adds styling to the badge to indicate it has been read\",\n          \"defaultValue\": \"false\"\n        }\n      ]\n    }\n  ],\n  \"cssPrefix\": [\n    \"pf-c-badge\"\n  ],\n  \"examples\": [\n    \"Read\",\n    \"Unread\"\n  ]\n};\npageData.examples = {\n  'Read': props => \n    <Example {...pageData} {...props} {...{\"code\":\"import React from 'react';\\nimport { Badge } from '@patternfly/react-core';\\n\\nexport const BadgeRead: React.FunctionComponent = () => (\\n  <React.Fragment>\\n    <Badge key={1} isRead>\\n      7\\n    </Badge>{' '}\\n    <Badge key={2} isRead>\\n      24\\n    </Badge>{' '}\\n    <Badge key={3} isRead>\\n      240\\n    </Badge>{' '}\\n    <Badge key={4} isRead>\\n      999+\\n    </Badge>\\n  </React.Fragment>\\n);\\n\",\"title\":\"Read\",\"lang\":\"ts\"}}>\n      \n    </Example>,\n  'Unread': props => \n    <Example {...pageData} {...props} {...{\"code\":\"import React from 'react';\\nimport { Badge } from '@patternfly/react-core';\\n\\nexport const BadgeUnread: React.FunctionComponent = () => (\\n  <React.Fragment>\\n    <Badge key={1}>7</Badge> <Badge key={2}>24</Badge> <Badge key={3}>240</Badge> <Badge key={4}>999+</Badge>\\n  </React.Fragment>\\n);\\n\",\"title\":\"Unread\",\"lang\":\"ts\"}}>\n      \n    </Example>\n};\n\nconst Component = () => (\n  <React.Fragment>\n    <AutoLinkHeader {...{\"id\":\"examples\",\"size\":\"h2\",\"className\":\"ws-title ws-h2\"}}>\n      {`Examples`}\n    </AutoLinkHeader>\n    {React.createElement(pageData.examples[\"Read\"])}\n    {React.createElement(pageData.examples[\"Unread\"])}\n  </React.Fragment>\n);\nComponent.displayName = 'ComponentsBadgeReactDocs';\nComponent.pageData = pageData;\n\nexport default Component;\n"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,EAAyBC,OAAzB,EAAkCC,IAAI,IAAIC,mBAA1C,QAAqE,iCAArE;AAEA,IAAMC,QAAQ,GAAG;EACf,MAAM,OADS;EAEf,WAAW,YAFI;EAGf,UAAU,OAHK;EAIf,QAAQ,yBAJO;EAKf,cAAc,mIALC;EAMf,kBAAkB,CAChB;IACE,QAAQ,OADV;IAEE,eAAe,EAFjB;IAGE,SAAS,CACP;MACE,QAAQ,UADV;MAEE,QAAQ,iBAFV;MAGE,eAAe,mCAHjB;MAIE,gBAAgB;IAJlB,CADO,EAOP;MACE,QAAQ,WADV;MAEE,QAAQ,QAFV;MAGE,eAAe,uCAHjB;MAIE,gBAAgB;IAJlB,CAPO,EAaP;MACE,QAAQ,QADV;MAEE,QAAQ,SAFV;MAGE,eAAe,wDAHjB;MAIE,gBAAgB;IAJlB,CAbO;EAHX,CADgB,CANH;EAgCf,aAAa,CACX,YADW,CAhCE;EAmCf,YAAY,CACV,MADU,EAEV,QAFU;AAnCG,CAAjB;AAwCAA,QAAQ,CAACC,QAAT,GAAoB;EAClB,QAAQ,cAAAC,KAAK;IAAA,oBACX,oBAAC,OAAD,eAAaF,QAAb,EAA2BE,KAA3B;MAAuC,QAAO,0ZAA9C;MAAyc,SAAQ,MAAjd;MAAwd,QAAO;IAA/d,GADW;EAAA,CADK;EAKlB,UAAU,gBAAAA,KAAK;IAAA,oBACb,oBAAC,OAAD,eAAaF,QAAb,EAA2BE,KAA3B;MAAuC,QAAO,0SAA9C;MAAyV,SAAQ,QAAjW;MAA0W,QAAO;IAAjX,GADa;EAAA;AALG,CAApB;;AAWA,IAAMC,SAAS,GAAG,SAAZA,SAAY;EAAA,oBAChB,oBAAC,KAAD,CAAO,QAAP,qBACE,oBAAC,cAAD;IAAqB,MAAK,UAA1B;IAAqC,QAAO,IAA5C;IAAiD,aAAY;EAA7D,cADF,EAIGR,KAAK,CAACS,aAAN,CAAoBJ,QAAQ,CAACC,QAAT,CAAkB,MAAlB,CAApB,CAJH,EAKGN,KAAK,CAACS,aAAN,CAAoBJ,QAAQ,CAACC,QAAT,CAAkB,QAAlB,CAApB,CALH,CADgB;AAAA,CAAlB;;AASAE,SAAS,CAACE,WAAV,GAAwB,0BAAxB;AACAF,SAAS,CAACH,QAAV,GAAqBA,QAArB;AAEA,eAAeG,SAAf"},"metadata":{},"sourceType":"module"}