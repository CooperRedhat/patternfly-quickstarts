{"ast":null,"code":"function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport { AutoLinkHeader, Example, Link as PatternflyThemeLink } from 'theme-patternfly-org/components';\nvar pageData = {\n  \"id\": \"Skeleton\",\n  \"section\": \"components\",\n  \"source\": \"react\",\n  \"slug\": \"/components/skeleton/react\",\n  \"sourceLink\": \"https://github.com/patternfly/patternfly-react/blob/main/packages/docs/packages/react-core/src/components/Skeleton/examples/Skeleton.md\",\n  \"propComponents\": [{\n    \"name\": \"Skeleton\",\n    \"description\": \"\",\n    \"props\": [{\n      \"name\": \"className\",\n      \"type\": \"string\",\n      \"description\": \"Additional classes added to the Skeleton\"\n    }, {\n      \"name\": \"fontSize\",\n      \"type\": \"'sm' | 'md' | 'lg' | 'xl' | '2xl' | '3xl' | '4xl'\",\n      \"description\": \"The font size height of the Skeleton\"\n    }, {\n      \"name\": \"height\",\n      \"type\": \"string\",\n      \"description\": \"The height of the Skeleton. Must specify pixels or percentage.\"\n    }, {\n      \"name\": \"screenreaderText\",\n      \"type\": \"string\",\n      \"description\": \"Text read just to screen reader users\"\n    }, {\n      \"name\": \"shape\",\n      \"type\": \"'circle' | 'square'\",\n      \"description\": \"The shape of the Skeleton\"\n    }, {\n      \"name\": \"width\",\n      \"type\": \"string\",\n      \"description\": \"The width of the Skeleton. Must specify pixels or percentage.\"\n    }]\n  }],\n  \"cssPrefix\": [\"pf-c-skeleton\"],\n  \"examples\": [\"Default\", \"Percentage widths\", \"Percentage heights\", \"Text modifiers\", \"Shapes\"]\n};\npageData.examples = {\n  'Default': function Default(props) {\n    return /*#__PURE__*/React.createElement(Example, _extends({}, pageData, props, {\n      \"code\": \"import React from 'react';\\nimport { Skeleton } from '@patternfly/react-core';\\n\\nconst Default = () => <Skeleton screenreaderText=\\\"Loading contents\\\" />;\",\n      \"title\": \"Default\",\n      \"lang\": \"js\"\n    }));\n  },\n  'Percentage widths': function PercentageWidths(props) {\n    return /*#__PURE__*/React.createElement(Example, _extends({}, pageData, props, {\n      \"code\": \"import React from 'react';\\nimport { Skeleton } from '@patternfly/react-core';\\n\\nconst PercentageWidths = () => (\\n  <React.Fragment>\\n    <Skeleton width=\\\"25%\\\" screenreaderText=\\\"Loading contents\\\" />\\n    <br />\\n    <Skeleton width=\\\"33%\\\" />\\n    <br />\\n    <Skeleton width=\\\"50%\\\" />\\n    <br />\\n    <Skeleton width=\\\"66%\\\" />\\n    <br />\\n    <Skeleton width=\\\"75%\\\" />\\n    <br />\\n    <Skeleton />\\n  </React.Fragment>\\n)\",\n      \"title\": \"Percentage widths\",\n      \"lang\": \"js\"\n    }));\n  },\n  'Percentage heights': function PercentageHeights(props) {\n    return /*#__PURE__*/React.createElement(Example, _extends({}, pageData, props, {\n      \"code\": \"import React from 'react';\\nimport { Skeleton } from '@patternfly/react-core';\\n\\nconst PercentageHeights = () => (\\n  <div style={{ height: '400px', display: 'flex', alignItems: 'flex-end', justifyContent: 'space-between' }}>\\n    <Skeleton height=\\\"25%\\\" width=\\\"15%\\\" screenreaderText=\\\"Loading contents\\\" />\\n    <Skeleton height=\\\"33%\\\" width=\\\"15%\\\" />\\n    <Skeleton height=\\\"50%\\\" width=\\\"15%\\\" />\\n    <Skeleton height=\\\"66%\\\" width=\\\"15%\\\" />\\n    <Skeleton height=\\\"75%\\\" width=\\\"15%\\\" />\\n    <Skeleton height=\\\"100%\\\" width=\\\"15%\\\" />\\n  </div>\\n)\",\n      \"title\": \"Percentage heights\",\n      \"lang\": \"js\"\n    }));\n  },\n  'Text modifiers': function TextModifiers(props) {\n    return /*#__PURE__*/React.createElement(Example, _extends({}, pageData, props, {\n      \"code\": \"import React from 'react';\\nimport { Skeleton } from '@patternfly/react-core';\\n\\nconst TextModifiers = () => (\\n  <React.Fragment>\\n    --pf-global--FontSize--4xl\\n    <Skeleton fontSize=\\\"4xl\\\" screenreaderText=\\\"Loading font size 4xl\\\" />\\n    <br />\\n    --pf-global--FontSize--3xl\\n    <Skeleton fontSize=\\\"3xl\\\" screenreaderText=\\\"Loading font size 3xl\\\" />\\n    <br />\\n    --pf-global--FontSize--2xl\\n    <Skeleton fontSize=\\\"2xl\\\" screenreaderText=\\\"Loading font size 2xl\\\" />\\n    <br />\\n    --pf-global--FontSize--xl\\n    <Skeleton fontSize=\\\"xl\\\" screenreaderText=\\\"Loading font size xl\\\" />\\n    <br />\\n    --pf-global--FontSize--lg\\n    <Skeleton fontSize=\\\"lg\\\" screenreaderText=\\\"Loading font size lg\\\" />\\n    <br />\\n    --pf-global--FontSize--md\\n    <Skeleton fontSize=\\\"md\\\" screenreaderText=\\\"Loading font size md\\\" />\\n    <br />\\n    --pf-global--FontSize--sm\\n    <Skeleton fontSize=\\\"sm\\\" screenreaderText=\\\"Loading font size sm\\\" />\\n  </React.Fragment>\\n)\",\n      \"title\": \"Text modifiers\",\n      \"lang\": \"js\"\n    }));\n  },\n  'Shapes': function Shapes(props) {\n    return /*#__PURE__*/React.createElement(Example, _extends({}, pageData, props, {\n      \"code\": \"import React from 'react';\\nimport { Skeleton } from '@patternfly/react-core';\\n\\nconst Shapes = () => (\\n  <React.Fragment>\\n    Small circle\\n    <Skeleton shape=\\\"circle\\\" width=\\\"15%\\\" screenreaderText=\\\"Loading small circle contents\\\" />\\n    <br />\\n    Medium circle\\n    <Skeleton shape=\\\"circle\\\" width=\\\"30%\\\" screenreaderText=\\\"Loading medium circle contents\\\" />\\n    <br />\\n    Large circle\\n    <Skeleton shape=\\\"circle\\\" width=\\\"50%\\\" screenreaderText=\\\"Loading large circle contents\\\" />\\n    <br />\\n    Small square\\n    <Skeleton shape=\\\"square\\\" width=\\\"15%\\\" screenreaderText=\\\"Loading small square contents\\\" />\\n    <br />\\n    Medium square\\n    <Skeleton shape=\\\"square\\\" width=\\\"30%\\\" screenreaderText=\\\"Loading medium square contents\\\" />\\n    <br />\\n    Large square\\n    <Skeleton shape=\\\"square\\\" width=\\\"50%\\\" screenreaderText=\\\"Loading large square contents\\\" />\\n    <br />\\n    Small rectangle\\n    <div style={{ height: '200px' }}>\\n      <Skeleton height=\\\"50%\\\" width=\\\"50%\\\" screenreaderText=\\\"Loading small rectangle contents\\\" />\\n    </div>\\n    <br />\\n    Medium rectangle\\n    <div style={{ height: '200px' }}>\\n      <Skeleton height=\\\"75%\\\" width=\\\"75%\\\" screenreaderText=\\\"Loading medium rectangle contents\\\" />\\n    </div>\\n    <br />\\n    Large rectangle\\n    <div style={{ height: '200px' }}>\\n      <Skeleton height=\\\"100%\\\" screenreaderText=\\\"Loading large rectangle contents\\\" />\\n    </div>\\n  </React.Fragment>\\n)\",\n      \"title\": \"Shapes\",\n      \"lang\": \"js\"\n    }));\n  }\n};\n\nvar Component = function Component() {\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(AutoLinkHeader, {\n    \"id\": \"examples\",\n    \"size\": \"h2\",\n    \"className\": \"ws-title ws-h2\"\n  }, \"Examples\"), React.createElement(pageData.examples[\"Default\"]), React.createElement(pageData.examples[\"Percentage widths\"]), React.createElement(pageData.examples[\"Percentage heights\"]), React.createElement(pageData.examples[\"Text modifiers\"]), React.createElement(pageData.examples[\"Shapes\"]));\n};\n\nComponent.displayName = 'ComponentsSkeletonReactDocs';\nComponent.pageData = pageData;\nexport default Component;","map":{"version":3,"names":["React","AutoLinkHeader","Example","Link","PatternflyThemeLink","pageData","examples","props","Component","createElement","displayName"],"sources":["/Users/jschuler/Code/patternfly-quickstarts/packages/docs/src/generated/components/skeleton/react.js"],"sourcesContent":["import React from 'react';\nimport { AutoLinkHeader, Example, Link as PatternflyThemeLink } from 'theme-patternfly-org/components';\n\nconst pageData = {\n  \"id\": \"Skeleton\",\n  \"section\": \"components\",\n  \"source\": \"react\",\n  \"slug\": \"/components/skeleton/react\",\n  \"sourceLink\": \"https://github.com/patternfly/patternfly-react/blob/main/packages/docs/packages/react-core/src/components/Skeleton/examples/Skeleton.md\",\n  \"propComponents\": [\n    {\n      \"name\": \"Skeleton\",\n      \"description\": \"\",\n      \"props\": [\n        {\n          \"name\": \"className\",\n          \"type\": \"string\",\n          \"description\": \"Additional classes added to the Skeleton\"\n        },\n        {\n          \"name\": \"fontSize\",\n          \"type\": \"'sm' | 'md' | 'lg' | 'xl' | '2xl' | '3xl' | '4xl'\",\n          \"description\": \"The font size height of the Skeleton\"\n        },\n        {\n          \"name\": \"height\",\n          \"type\": \"string\",\n          \"description\": \"The height of the Skeleton. Must specify pixels or percentage.\"\n        },\n        {\n          \"name\": \"screenreaderText\",\n          \"type\": \"string\",\n          \"description\": \"Text read just to screen reader users\"\n        },\n        {\n          \"name\": \"shape\",\n          \"type\": \"'circle' | 'square'\",\n          \"description\": \"The shape of the Skeleton\"\n        },\n        {\n          \"name\": \"width\",\n          \"type\": \"string\",\n          \"description\": \"The width of the Skeleton. Must specify pixels or percentage.\"\n        }\n      ]\n    }\n  ],\n  \"cssPrefix\": [\n    \"pf-c-skeleton\"\n  ],\n  \"examples\": [\n    \"Default\",\n    \"Percentage widths\",\n    \"Percentage heights\",\n    \"Text modifiers\",\n    \"Shapes\"\n  ]\n};\npageData.examples = {\n  'Default': props => \n    <Example {...pageData} {...props} {...{\"code\":\"import React from 'react';\\nimport { Skeleton } from '@patternfly/react-core';\\n\\nconst Default = () => <Skeleton screenreaderText=\\\"Loading contents\\\" />;\",\"title\":\"Default\",\"lang\":\"js\"}}>\n      \n    </Example>,\n  'Percentage widths': props => \n    <Example {...pageData} {...props} {...{\"code\":\"import React from 'react';\\nimport { Skeleton } from '@patternfly/react-core';\\n\\nconst PercentageWidths = () => (\\n  <React.Fragment>\\n    <Skeleton width=\\\"25%\\\" screenreaderText=\\\"Loading contents\\\" />\\n    <br />\\n    <Skeleton width=\\\"33%\\\" />\\n    <br />\\n    <Skeleton width=\\\"50%\\\" />\\n    <br />\\n    <Skeleton width=\\\"66%\\\" />\\n    <br />\\n    <Skeleton width=\\\"75%\\\" />\\n    <br />\\n    <Skeleton />\\n  </React.Fragment>\\n)\",\"title\":\"Percentage widths\",\"lang\":\"js\"}}>\n      \n    </Example>,\n  'Percentage heights': props => \n    <Example {...pageData} {...props} {...{\"code\":\"import React from 'react';\\nimport { Skeleton } from '@patternfly/react-core';\\n\\nconst PercentageHeights = () => (\\n  <div style={{ height: '400px', display: 'flex', alignItems: 'flex-end', justifyContent: 'space-between' }}>\\n    <Skeleton height=\\\"25%\\\" width=\\\"15%\\\" screenreaderText=\\\"Loading contents\\\" />\\n    <Skeleton height=\\\"33%\\\" width=\\\"15%\\\" />\\n    <Skeleton height=\\\"50%\\\" width=\\\"15%\\\" />\\n    <Skeleton height=\\\"66%\\\" width=\\\"15%\\\" />\\n    <Skeleton height=\\\"75%\\\" width=\\\"15%\\\" />\\n    <Skeleton height=\\\"100%\\\" width=\\\"15%\\\" />\\n  </div>\\n)\",\"title\":\"Percentage heights\",\"lang\":\"js\"}}>\n      \n    </Example>,\n  'Text modifiers': props => \n    <Example {...pageData} {...props} {...{\"code\":\"import React from 'react';\\nimport { Skeleton } from '@patternfly/react-core';\\n\\nconst TextModifiers = () => (\\n  <React.Fragment>\\n    --pf-global--FontSize--4xl\\n    <Skeleton fontSize=\\\"4xl\\\" screenreaderText=\\\"Loading font size 4xl\\\" />\\n    <br />\\n    --pf-global--FontSize--3xl\\n    <Skeleton fontSize=\\\"3xl\\\" screenreaderText=\\\"Loading font size 3xl\\\" />\\n    <br />\\n    --pf-global--FontSize--2xl\\n    <Skeleton fontSize=\\\"2xl\\\" screenreaderText=\\\"Loading font size 2xl\\\" />\\n    <br />\\n    --pf-global--FontSize--xl\\n    <Skeleton fontSize=\\\"xl\\\" screenreaderText=\\\"Loading font size xl\\\" />\\n    <br />\\n    --pf-global--FontSize--lg\\n    <Skeleton fontSize=\\\"lg\\\" screenreaderText=\\\"Loading font size lg\\\" />\\n    <br />\\n    --pf-global--FontSize--md\\n    <Skeleton fontSize=\\\"md\\\" screenreaderText=\\\"Loading font size md\\\" />\\n    <br />\\n    --pf-global--FontSize--sm\\n    <Skeleton fontSize=\\\"sm\\\" screenreaderText=\\\"Loading font size sm\\\" />\\n  </React.Fragment>\\n)\",\"title\":\"Text modifiers\",\"lang\":\"js\"}}>\n      \n    </Example>,\n  'Shapes': props => \n    <Example {...pageData} {...props} {...{\"code\":\"import React from 'react';\\nimport { Skeleton } from '@patternfly/react-core';\\n\\nconst Shapes = () => (\\n  <React.Fragment>\\n    Small circle\\n    <Skeleton shape=\\\"circle\\\" width=\\\"15%\\\" screenreaderText=\\\"Loading small circle contents\\\" />\\n    <br />\\n    Medium circle\\n    <Skeleton shape=\\\"circle\\\" width=\\\"30%\\\" screenreaderText=\\\"Loading medium circle contents\\\" />\\n    <br />\\n    Large circle\\n    <Skeleton shape=\\\"circle\\\" width=\\\"50%\\\" screenreaderText=\\\"Loading large circle contents\\\" />\\n    <br />\\n    Small square\\n    <Skeleton shape=\\\"square\\\" width=\\\"15%\\\" screenreaderText=\\\"Loading small square contents\\\" />\\n    <br />\\n    Medium square\\n    <Skeleton shape=\\\"square\\\" width=\\\"30%\\\" screenreaderText=\\\"Loading medium square contents\\\" />\\n    <br />\\n    Large square\\n    <Skeleton shape=\\\"square\\\" width=\\\"50%\\\" screenreaderText=\\\"Loading large square contents\\\" />\\n    <br />\\n    Small rectangle\\n    <div style={{ height: '200px' }}>\\n      <Skeleton height=\\\"50%\\\" width=\\\"50%\\\" screenreaderText=\\\"Loading small rectangle contents\\\" />\\n    </div>\\n    <br />\\n    Medium rectangle\\n    <div style={{ height: '200px' }}>\\n      <Skeleton height=\\\"75%\\\" width=\\\"75%\\\" screenreaderText=\\\"Loading medium rectangle contents\\\" />\\n    </div>\\n    <br />\\n    Large rectangle\\n    <div style={{ height: '200px' }}>\\n      <Skeleton height=\\\"100%\\\" screenreaderText=\\\"Loading large rectangle contents\\\" />\\n    </div>\\n  </React.Fragment>\\n)\",\"title\":\"Shapes\",\"lang\":\"js\"}}>\n      \n    </Example>\n};\n\nconst Component = () => (\n  <React.Fragment>\n    <AutoLinkHeader {...{\"id\":\"examples\",\"size\":\"h2\",\"className\":\"ws-title ws-h2\"}}>\n      {`Examples`}\n    </AutoLinkHeader>\n    {React.createElement(pageData.examples[\"Default\"])}\n    {React.createElement(pageData.examples[\"Percentage widths\"])}\n    {React.createElement(pageData.examples[\"Percentage heights\"])}\n    {React.createElement(pageData.examples[\"Text modifiers\"])}\n    {React.createElement(pageData.examples[\"Shapes\"])}\n  </React.Fragment>\n);\nComponent.displayName = 'ComponentsSkeletonReactDocs';\nComponent.pageData = pageData;\n\nexport default Component;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}