{"ast":null,"code":"function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport { AutoLinkHeader, Example, Link as PatternflyThemeLink } from 'theme-patternfly-org/components';\nimport AlignLeftIcon from '@patternfly/react-icons/dist/esm/icons/align-left-icon';\nimport AlignCenterIcon from '@patternfly/react-icons/dist/esm/icons/align-center-icon';\nimport AlignRightIcon from '@patternfly/react-icons/dist/esm/icons/align-right-icon';\nvar pageData = {\n  \"id\": \"Overflow menu\",\n  \"section\": \"components\",\n  \"source\": \"react\",\n  \"slug\": \"/components/overflow-menu/react\",\n  \"sourceLink\": \"https://github.com/patternfly/patternfly-react/blob/main/packages/docs/packages/react-core/src/components/OverflowMenu/examples/OverflowMenu.md\",\n  \"propComponents\": [{\n    \"name\": \"OverflowMenu\",\n    \"description\": \"\",\n    \"props\": [{\n      \"name\": \"breakpoint\",\n      \"type\": \"'md' | 'lg' | 'xl' | '2xl'\",\n      \"description\": \"Indicates breakpoint at which to switch between horizontal menu and vertical dropdown\",\n      \"required\": true\n    }, {\n      \"name\": \"children\",\n      \"type\": \"any\",\n      \"description\": \"Any elements that can be rendered in the menu\"\n    }, {\n      \"name\": \"className\",\n      \"type\": \"string\",\n      \"description\": \"Additional classes added to the OverflowMenu.\"\n    }]\n  }, {\n    \"name\": \"OverflowMenuContent\",\n    \"description\": \"\",\n    \"props\": [{\n      \"name\": \"children\",\n      \"type\": \"any\",\n      \"description\": \"Any elements that can be rendered in the menu\"\n    }, {\n      \"name\": \"className\",\n      \"type\": \"string\",\n      \"description\": \"Additional classes added to the OverflowMenuContent\"\n    }, {\n      \"name\": \"isPersistent\",\n      \"type\": \"boolean\",\n      \"description\": \"Modifies the overflow menu content visibility\"\n    }]\n  }, {\n    \"name\": \"OverflowMenuControl\",\n    \"description\": \"\",\n    \"props\": [{\n      \"name\": \"children\",\n      \"type\": \"any\",\n      \"description\": \"Any elements that can be rendered in the menu\"\n    }, {\n      \"name\": \"className\",\n      \"type\": \"string\",\n      \"description\": \"Additional classes added to the OverflowMenuControl\"\n    }, {\n      \"name\": \"hasAdditionalOptions\",\n      \"type\": \"boolean\",\n      \"description\": \"Triggers the overflow dropdown to persist at all viewport sizes\"\n    }]\n  }, {\n    \"name\": \"OverflowMenuDropdownItem\",\n    \"description\": \"\",\n    \"props\": [{\n      \"name\": \"index\",\n      \"type\": \"number\",\n      \"description\": \"Indicates the index of the list item\"\n    }, {\n      \"name\": \"isShared\",\n      \"type\": \"boolean\",\n      \"description\": \"Indicates when a dropdown item shows and hides the corresponding list item\",\n      \"defaultValue\": \"false\"\n    }]\n  }, {\n    \"name\": \"OverflowMenuGroup\",\n    \"description\": \"\",\n    \"props\": [{\n      \"name\": \"children\",\n      \"type\": \"any\",\n      \"description\": \"Any elements that can be rendered in the menu\"\n    }, {\n      \"name\": \"className\",\n      \"type\": \"string\",\n      \"description\": \"Additional classes added to the OverflowMenuGroup\"\n    }, {\n      \"name\": \"groupType\",\n      \"type\": \"'button' | 'icon'\",\n      \"description\": \"Indicates a button or icon group\"\n    }, {\n      \"name\": \"isPersistent\",\n      \"type\": \"boolean\",\n      \"description\": \"Modifies the overflow menu group visibility\",\n      \"defaultValue\": \"false\"\n    }]\n  }, {\n    \"name\": \"OverflowMenuItem\",\n    \"description\": \"\",\n    \"props\": [{\n      \"name\": \"children\",\n      \"type\": \"any\",\n      \"description\": \"Any elements that can be rendered in the menu\"\n    }, {\n      \"name\": \"className\",\n      \"type\": \"string\",\n      \"description\": \"Additional classes added to the OverflowMenuItem\"\n    }, {\n      \"name\": \"isPersistent\",\n      \"type\": \"boolean\",\n      \"description\": \"Modifies the overflow menu item visibility\",\n      \"defaultValue\": \"false\"\n    }]\n  }],\n  \"cssPrefix\": [\"pf-c-overflow-menu\"],\n  \"examples\": [\"Simple (responsive)\", \"Group types\", \"Multiple groups\", \"Persistent\"]\n};\npageData.liveContext = {\n  AlignLeftIcon: AlignLeftIcon,\n  AlignCenterIcon: AlignCenterIcon,\n  AlignRightIcon: AlignRightIcon\n};\npageData.examples = {\n  'Simple (responsive)': function SimpleResponsive(props) {\n    return /*#__PURE__*/React.createElement(Example, _extends({}, pageData, props, {\n      \"code\": \"import React from 'react';\\nimport { OverflowMenu, OverflowMenuControl, OverflowMenuContent, OverflowMenuGroup, OverflowMenuItem, OverflowMenuDropdownItem } from '@patternfly/react-core';\\nimport { Dropdown, KebabToggle } from '@patternfly/react-core';\\n\\nclass SimpleOverflowMenu extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      isOpen: false\\n    };\\n    this.onToggle = isOpen => {\\n      this.setState({\\n        isOpen\\n      });\\n    };\\n    this.onSelect = event => {\\n      this.setState({\\n        isOpen: !this.state.isOpen\\n      });\\n    };\\n  }\\n\\n  render() {\\n    const { isOpen } = this.state;\\n    const dropdownItems = [\\n      <OverflowMenuDropdownItem key=\\\"item1\\\" isShared>Item 1</OverflowMenuDropdownItem>,\\n      <OverflowMenuDropdownItem key=\\\"item2\\\" isShared>Item 2</OverflowMenuDropdownItem>,\\n      <OverflowMenuDropdownItem key=\\\"item3\\\" isShared>Item 3</OverflowMenuDropdownItem>,\\n      <OverflowMenuDropdownItem key=\\\"item4\\\" isShared>Item 4</OverflowMenuDropdownItem>,\\n      <OverflowMenuDropdownItem key=\\\"item5\\\" isShared>Item 5</OverflowMenuDropdownItem>\\n    ]\\n    return (\\n      <OverflowMenu breakpoint=\\\"lg\\\">\\n        <OverflowMenuContent>\\n          <OverflowMenuItem>Item</OverflowMenuItem>\\n          <OverflowMenuItem>Item</OverflowMenuItem>\\n          <OverflowMenuGroup>\\n            <OverflowMenuItem>Item</OverflowMenuItem>\\n            <OverflowMenuItem>Item</OverflowMenuItem>\\n            <OverflowMenuItem>Item</OverflowMenuItem>\\n          </OverflowMenuGroup>\\n        </OverflowMenuContent>\\n        <OverflowMenuControl>\\n          <Dropdown\\n            onSelect={this.onSelect}\\n            toggle={<KebabToggle onToggle={this.onToggle} />}\\n            isOpen={isOpen}\\n            isPlain\\n            dropdownItems={dropdownItems}\\n          />\\n        </OverflowMenuControl>\\n      </OverflowMenu>\\n    )\\n  }\\n}\",\n      \"title\": \"Simple (responsive)\",\n      \"lang\": \"js\"\n    }));\n  },\n  'Group types': function GroupTypes(props) {\n    return /*#__PURE__*/React.createElement(Example, _extends({}, pageData, props, {\n      \"code\": \"import React from 'react';\\nimport { OverflowMenu, OverflowMenuControl, OverflowMenuContent, OverflowMenuGroup, OverflowMenuItem, OverflowMenuDropdownItem } from '@patternfly/react-core';\\nimport { Dropdown, KebabToggle, Button, ButtonVariant } from '@patternfly/react-core';\\nimport AlignLeftIcon from '@patternfly/react-icons/dist/esm/icons/align-left-icon';\\nimport AlignCenterIcon from '@patternfly/react-icons/dist/esm/icons/align-center-icon';\\nimport AlignRightIcon from '@patternfly/react-icons/dist/esm/icons/align-right-icon';\\n\\nclass OverflowMenuGroupTypes extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      isOpen: false\\n    };\\n    this.onToggle = isOpen => {\\n      this.setState({\\n        isOpen\\n      });\\n    };\\n    this.onSelect = event => {\\n      this.setState({\\n        isOpen: !this.state.isOpen\\n      });\\n    };\\n  }\\n\\n  render() {\\n    const { isOpen } = this.state;\\n    const dropdownItems = [\\n      <OverflowMenuDropdownItem key=\\\"item1\\\" isShared>Item 1</OverflowMenuDropdownItem>,\\n      <OverflowMenuDropdownItem key=\\\"item2\\\" isShared>Item 2</OverflowMenuDropdownItem>,\\n      <OverflowMenuDropdownItem key=\\\"item3\\\" isShared>Item 3</OverflowMenuDropdownItem>,\\n      <OverflowMenuDropdownItem key=\\\"primary\\\" isShared>Primary</OverflowMenuDropdownItem>,\\n      <OverflowMenuDropdownItem key=\\\"secondary\\\" isShared>Secondary</OverflowMenuDropdownItem>,\\n      <OverflowMenuDropdownItem key=\\\"tertiary\\\" isShared>Tertiary</OverflowMenuDropdownItem>,\\n      <OverflowMenuDropdownItem key=\\\"action1\\\" isShared>Action 1</OverflowMenuDropdownItem>,\\n      <OverflowMenuDropdownItem key=\\\"action2\\\" isShared>Action 2</OverflowMenuDropdownItem>,\\n      <OverflowMenuDropdownItem key=\\\"action3\\\" isShared>Action 3</OverflowMenuDropdownItem>,\\n    ];\\n    return (\\n      <OverflowMenu breakpoint=\\\"lg\\\">\\n        <OverflowMenuContent>\\n          <OverflowMenuGroup>\\n            <OverflowMenuItem>Item</OverflowMenuItem>\\n            <OverflowMenuItem>Item</OverflowMenuItem>\\n            <OverflowMenuItem>Item</OverflowMenuItem>\\n          </OverflowMenuGroup>\\n          <OverflowMenuGroup groupType=\\\"button\\\">\\n            <OverflowMenuItem>\\n              <Button variant={ButtonVariant.primary}>Primary</Button>\\n            </OverflowMenuItem>\\n            <OverflowMenuItem>\\n              <Button variant={ButtonVariant.secondary}>Secondary</Button>\\n            </OverflowMenuItem>\\n            <OverflowMenuItem>\\n              <Button variant={ButtonVariant.tertiary}>Tertiary</Button>\\n            </OverflowMenuItem>\\n          </OverflowMenuGroup>\\n          <OverflowMenuGroup groupType=\\\"icon\\\">\\n            <OverflowMenuItem>\\n              <Button variant={ButtonVariant.plain} aria-label=\\\"Align left\\\">\\n                <AlignLeftIcon />\\n              </Button>\\n            </OverflowMenuItem>\\n            <OverflowMenuItem>\\n              <Button variant={ButtonVariant.plain} aria-label=\\\"Align center\\\">\\n                <AlignCenterIcon />\\n              </Button>\\n            </OverflowMenuItem>\\n            <OverflowMenuItem>\\n              <Button variant={ButtonVariant.plain} aria-label=\\\"Align right\\\">\\n                <AlignRightIcon />\\n              </Button>\\n            </OverflowMenuItem>\\n          </OverflowMenuGroup>\\n        </OverflowMenuContent>\\n        <OverflowMenuControl>\\n          <Dropdown\\n            onSelect={this.onSelect}\\n            toggle={<KebabToggle onToggle={this.onToggle} />}\\n            isOpen={isOpen}\\n            isPlain\\n            dropdownItems={dropdownItems}\\n          />\\n        </OverflowMenuControl>\\n      </OverflowMenu>\\n    )\\n  }\\n}\",\n      \"title\": \"Group types\",\n      \"lang\": \"js\"\n    }));\n  },\n  'Multiple groups': function MultipleGroups(props) {\n    return /*#__PURE__*/React.createElement(Example, _extends({}, pageData, props, {\n      \"code\": \"import React from 'react';\\nimport { OverflowMenu, OverflowMenuControl, OverflowMenuContent, OverflowMenuGroup, OverflowMenuItem, OverflowMenuDropdownItem } from '@patternfly/react-core';\\nimport { Dropdown, KebabToggle, Button, ButtonVariant } from '@patternfly/react-core';\\nimport AlignLeftIcon from '@patternfly/react-icons/dist/esm/icons/align-left-icon';\\nimport AlignCenterIcon from '@patternfly/react-icons/dist/esm/icons/align-center-icon';\\nimport AlignRightIcon from '@patternfly/react-icons/dist/esm/icons/align-right-icon';\\n\\nclass OverflowMenuAdditionalOptions extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      isOpen: false\\n    };\\n    this.onToggle = isOpen => {\\n      this.setState({\\n        isOpen\\n      });\\n    };\\n    this.onSelect = event => {\\n      this.setState({\\n        isOpen: !this.state.isOpen\\n      });\\n    };\\n  }\\n\\n  render() {\\n    const { isOpen } = this.state;\\n    const dropdownItems = [\\n      <OverflowMenuDropdownItem key=\\\"1\\\" isShared>Primary</OverflowMenuDropdownItem>,\\n      <OverflowMenuDropdownItem key=\\\"2\\\" isShared>Secondary</OverflowMenuDropdownItem>,\\n      <OverflowMenuDropdownItem key=\\\"3\\\" isShared>Tertiary</OverflowMenuDropdownItem>,\\n      <OverflowMenuDropdownItem key=\\\"4\\\" isShared>Action 4</OverflowMenuDropdownItem>,\\n      <OverflowMenuDropdownItem key=\\\"5\\\" isShared>Action 5</OverflowMenuDropdownItem>,\\n      <OverflowMenuDropdownItem key=\\\"6\\\" isShared>Action 6</OverflowMenuDropdownItem>,\\n      <OverflowMenuDropdownItem key=\\\"7\\\">Action 7</OverflowMenuDropdownItem>,\\n    ];\\n    return (\\n      <OverflowMenu breakpoint=\\\"lg\\\">\\n        <OverflowMenuContent>\\n          <OverflowMenuGroup groupType=\\\"button\\\">\\n            <OverflowMenuItem>\\n              <Button variant={ButtonVariant.primary}>Primary</Button>\\n            </OverflowMenuItem>\\n            <OverflowMenuItem>\\n              <Button variant={ButtonVariant.secondary}>Secondary</Button>\\n            </OverflowMenuItem>\\n            <OverflowMenuItem>\\n              <Button variant={ButtonVariant.tertiary}>Tertiary</Button>\\n            </OverflowMenuItem>\\n          </OverflowMenuGroup>\\n          <OverflowMenuGroup groupType=\\\"icon\\\">\\n            <OverflowMenuItem>\\n              <Button variant={ButtonVariant.plain} aria-label=\\\"Align left\\\">\\n                <AlignLeftIcon />\\n              </Button>\\n            </OverflowMenuItem>\\n            <OverflowMenuItem>\\n              <Button variant={ButtonVariant.plain} aria-label=\\\"Align center\\\">\\n                <AlignCenterIcon />\\n              </Button>\\n            </OverflowMenuItem>\\n            <OverflowMenuItem>\\n              <Button variant={ButtonVariant.plain} aria-label=\\\"Align right\\\">\\n                <AlignRightIcon />\\n              </Button>\\n            </OverflowMenuItem>\\n          </OverflowMenuGroup>\\n        </OverflowMenuContent>\\n        <OverflowMenuControl hasAdditionalOptions>\\n          <Dropdown\\n            onSelect={this.onSelect}\\n            toggle={<KebabToggle onToggle={this.onToggle} />}\\n            isOpen={isOpen}\\n            isPlain\\n            dropdownItems={dropdownItems}\\n          />\\n        </OverflowMenuControl>\\n      </OverflowMenu>\\n    )\\n  }\\n}\",\n      \"title\": \"Multiple groups\",\n      \"lang\": \"js\"\n    }));\n  },\n  'Persistent': function Persistent(props) {\n    return /*#__PURE__*/React.createElement(Example, _extends({}, pageData, props, {\n      \"code\": \"import React from 'react';\\nimport { OverflowMenu, OverflowMenuControl, OverflowMenuContent, OverflowMenuGroup, OverflowMenuItem, OverflowMenuDropdownItem } from '@patternfly/react-core';\\nimport { Dropdown, KebabToggle, Button, ButtonVariant } from '@patternfly/react-core';\\n\\nclass OverflowMenuPersist extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      isOpen: false\\n    };\\n    this.onToggle = isOpen => {\\n      this.setState({\\n        isOpen\\n      });\\n    };\\n    this.onSelect = event => {\\n      this.setState({\\n        isOpen: !this.state.isOpen\\n      });\\n    };\\n  }\\n\\n  render() {\\n    const { isOpen } = this.state;\\n    const dropdownItems = [\\n      <OverflowMenuDropdownItem key=\\\"secondary\\\" isShared>Secondary</OverflowMenuDropdownItem>,\\n      <OverflowMenuDropdownItem key=\\\"tertiary\\\" isShared>Tertiary</OverflowMenuDropdownItem>,\\n      <OverflowMenuDropdownItem key=\\\"action\\\">Action 4</OverflowMenuDropdownItem>\\n    ];\\n    return (\\n      <OverflowMenu breakpoint=\\\"lg\\\">\\n        <OverflowMenuContent isPersistent>\\n          <OverflowMenuGroup groupType=\\\"button\\\" isPersistent>\\n            <OverflowMenuItem isPersistent>\\n              <Button variant={ButtonVariant.primary}>Primary</Button>\\n            </OverflowMenuItem>\\n            <OverflowMenuItem>\\n              <Button variant={ButtonVariant.secondary}>Secondary</Button>\\n            </OverflowMenuItem>\\n            <OverflowMenuItem>\\n              <Button variant={ButtonVariant.tertiary}>Tertiary</Button>\\n            </OverflowMenuItem>\\n          </OverflowMenuGroup>\\n        </OverflowMenuContent>\\n        <OverflowMenuControl hasAdditionalOptions>\\n          <Dropdown\\n            onSelect={this.onSelect}\\n            toggle={<KebabToggle onToggle={this.onToggle} />}\\n            isOpen={isOpen}\\n            isPlain\\n            dropdownItems={dropdownItems}\\n          />\\n        </OverflowMenuControl>\\n      </OverflowMenu>\\n    )\\n  }\\n}\",\n      \"title\": \"Persistent\",\n      \"lang\": \"js\"\n    }));\n  }\n};\n\nvar Component = function Component() {\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(AutoLinkHeader, {\n    \"id\": \"examples\",\n    \"size\": \"h2\",\n    \"className\": \"ws-title ws-h2\"\n  }, \"Examples\"), React.createElement(pageData.examples[\"Simple (responsive)\"]), React.createElement(pageData.examples[\"Group types\"]), React.createElement(pageData.examples[\"Multiple groups\"]), React.createElement(pageData.examples[\"Persistent\"]));\n};\n\nComponent.displayName = 'ComponentsOverflowMenuReactDocs';\nComponent.pageData = pageData;\nexport default Component;","map":{"version":3,"names":["React","AutoLinkHeader","Example","Link","PatternflyThemeLink","AlignLeftIcon","AlignCenterIcon","AlignRightIcon","pageData","liveContext","examples","props","Component","createElement","displayName"],"sources":["/Users/jschuler/Code/patternfly-quickstarts/packages/docs/src/generated/components/overflow-menu/react.js"],"sourcesContent":["import React from 'react';\nimport { AutoLinkHeader, Example, Link as PatternflyThemeLink } from 'theme-patternfly-org/components';\nimport AlignLeftIcon from '@patternfly/react-icons/dist/esm/icons/align-left-icon';\nimport AlignCenterIcon from '@patternfly/react-icons/dist/esm/icons/align-center-icon';\nimport AlignRightIcon from '@patternfly/react-icons/dist/esm/icons/align-right-icon';\nconst pageData = {\n  \"id\": \"Overflow menu\",\n  \"section\": \"components\",\n  \"source\": \"react\",\n  \"slug\": \"/components/overflow-menu/react\",\n  \"sourceLink\": \"https://github.com/patternfly/patternfly-react/blob/main/packages/docs/packages/react-core/src/components/OverflowMenu/examples/OverflowMenu.md\",\n  \"propComponents\": [\n    {\n      \"name\": \"OverflowMenu\",\n      \"description\": \"\",\n      \"props\": [\n        {\n          \"name\": \"breakpoint\",\n          \"type\": \"'md' | 'lg' | 'xl' | '2xl'\",\n          \"description\": \"Indicates breakpoint at which to switch between horizontal menu and vertical dropdown\",\n          \"required\": true\n        },\n        {\n          \"name\": \"children\",\n          \"type\": \"any\",\n          \"description\": \"Any elements that can be rendered in the menu\"\n        },\n        {\n          \"name\": \"className\",\n          \"type\": \"string\",\n          \"description\": \"Additional classes added to the OverflowMenu.\"\n        }\n      ]\n    },\n    {\n      \"name\": \"OverflowMenuContent\",\n      \"description\": \"\",\n      \"props\": [\n        {\n          \"name\": \"children\",\n          \"type\": \"any\",\n          \"description\": \"Any elements that can be rendered in the menu\"\n        },\n        {\n          \"name\": \"className\",\n          \"type\": \"string\",\n          \"description\": \"Additional classes added to the OverflowMenuContent\"\n        },\n        {\n          \"name\": \"isPersistent\",\n          \"type\": \"boolean\",\n          \"description\": \"Modifies the overflow menu content visibility\"\n        }\n      ]\n    },\n    {\n      \"name\": \"OverflowMenuControl\",\n      \"description\": \"\",\n      \"props\": [\n        {\n          \"name\": \"children\",\n          \"type\": \"any\",\n          \"description\": \"Any elements that can be rendered in the menu\"\n        },\n        {\n          \"name\": \"className\",\n          \"type\": \"string\",\n          \"description\": \"Additional classes added to the OverflowMenuControl\"\n        },\n        {\n          \"name\": \"hasAdditionalOptions\",\n          \"type\": \"boolean\",\n          \"description\": \"Triggers the overflow dropdown to persist at all viewport sizes\"\n        }\n      ]\n    },\n    {\n      \"name\": \"OverflowMenuDropdownItem\",\n      \"description\": \"\",\n      \"props\": [\n        {\n          \"name\": \"index\",\n          \"type\": \"number\",\n          \"description\": \"Indicates the index of the list item\"\n        },\n        {\n          \"name\": \"isShared\",\n          \"type\": \"boolean\",\n          \"description\": \"Indicates when a dropdown item shows and hides the corresponding list item\",\n          \"defaultValue\": \"false\"\n        }\n      ]\n    },\n    {\n      \"name\": \"OverflowMenuGroup\",\n      \"description\": \"\",\n      \"props\": [\n        {\n          \"name\": \"children\",\n          \"type\": \"any\",\n          \"description\": \"Any elements that can be rendered in the menu\"\n        },\n        {\n          \"name\": \"className\",\n          \"type\": \"string\",\n          \"description\": \"Additional classes added to the OverflowMenuGroup\"\n        },\n        {\n          \"name\": \"groupType\",\n          \"type\": \"'button' | 'icon'\",\n          \"description\": \"Indicates a button or icon group\"\n        },\n        {\n          \"name\": \"isPersistent\",\n          \"type\": \"boolean\",\n          \"description\": \"Modifies the overflow menu group visibility\",\n          \"defaultValue\": \"false\"\n        }\n      ]\n    },\n    {\n      \"name\": \"OverflowMenuItem\",\n      \"description\": \"\",\n      \"props\": [\n        {\n          \"name\": \"children\",\n          \"type\": \"any\",\n          \"description\": \"Any elements that can be rendered in the menu\"\n        },\n        {\n          \"name\": \"className\",\n          \"type\": \"string\",\n          \"description\": \"Additional classes added to the OverflowMenuItem\"\n        },\n        {\n          \"name\": \"isPersistent\",\n          \"type\": \"boolean\",\n          \"description\": \"Modifies the overflow menu item visibility\",\n          \"defaultValue\": \"false\"\n        }\n      ]\n    }\n  ],\n  \"cssPrefix\": [\n    \"pf-c-overflow-menu\"\n  ],\n  \"examples\": [\n    \"Simple (responsive)\",\n    \"Group types\",\n    \"Multiple groups\",\n    \"Persistent\"\n  ]\n};\npageData.liveContext = {\n  AlignLeftIcon,\n  AlignCenterIcon,\n  AlignRightIcon\n};\npageData.examples = {\n  'Simple (responsive)': props => \n    <Example {...pageData} {...props} {...{\"code\":\"import React from 'react';\\nimport { OverflowMenu, OverflowMenuControl, OverflowMenuContent, OverflowMenuGroup, OverflowMenuItem, OverflowMenuDropdownItem } from '@patternfly/react-core';\\nimport { Dropdown, KebabToggle } from '@patternfly/react-core';\\n\\nclass SimpleOverflowMenu extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      isOpen: false\\n    };\\n    this.onToggle = isOpen => {\\n      this.setState({\\n        isOpen\\n      });\\n    };\\n    this.onSelect = event => {\\n      this.setState({\\n        isOpen: !this.state.isOpen\\n      });\\n    };\\n  }\\n\\n  render() {\\n    const { isOpen } = this.state;\\n    const dropdownItems = [\\n      <OverflowMenuDropdownItem key=\\\"item1\\\" isShared>Item 1</OverflowMenuDropdownItem>,\\n      <OverflowMenuDropdownItem key=\\\"item2\\\" isShared>Item 2</OverflowMenuDropdownItem>,\\n      <OverflowMenuDropdownItem key=\\\"item3\\\" isShared>Item 3</OverflowMenuDropdownItem>,\\n      <OverflowMenuDropdownItem key=\\\"item4\\\" isShared>Item 4</OverflowMenuDropdownItem>,\\n      <OverflowMenuDropdownItem key=\\\"item5\\\" isShared>Item 5</OverflowMenuDropdownItem>\\n    ]\\n    return (\\n      <OverflowMenu breakpoint=\\\"lg\\\">\\n        <OverflowMenuContent>\\n          <OverflowMenuItem>Item</OverflowMenuItem>\\n          <OverflowMenuItem>Item</OverflowMenuItem>\\n          <OverflowMenuGroup>\\n            <OverflowMenuItem>Item</OverflowMenuItem>\\n            <OverflowMenuItem>Item</OverflowMenuItem>\\n            <OverflowMenuItem>Item</OverflowMenuItem>\\n          </OverflowMenuGroup>\\n        </OverflowMenuContent>\\n        <OverflowMenuControl>\\n          <Dropdown\\n            onSelect={this.onSelect}\\n            toggle={<KebabToggle onToggle={this.onToggle} />}\\n            isOpen={isOpen}\\n            isPlain\\n            dropdownItems={dropdownItems}\\n          />\\n        </OverflowMenuControl>\\n      </OverflowMenu>\\n    )\\n  }\\n}\",\"title\":\"Simple (responsive)\",\"lang\":\"js\"}}>\n      \n    </Example>,\n  'Group types': props => \n    <Example {...pageData} {...props} {...{\"code\":\"import React from 'react';\\nimport { OverflowMenu, OverflowMenuControl, OverflowMenuContent, OverflowMenuGroup, OverflowMenuItem, OverflowMenuDropdownItem } from '@patternfly/react-core';\\nimport { Dropdown, KebabToggle, Button, ButtonVariant } from '@patternfly/react-core';\\nimport AlignLeftIcon from '@patternfly/react-icons/dist/esm/icons/align-left-icon';\\nimport AlignCenterIcon from '@patternfly/react-icons/dist/esm/icons/align-center-icon';\\nimport AlignRightIcon from '@patternfly/react-icons/dist/esm/icons/align-right-icon';\\n\\nclass OverflowMenuGroupTypes extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      isOpen: false\\n    };\\n    this.onToggle = isOpen => {\\n      this.setState({\\n        isOpen\\n      });\\n    };\\n    this.onSelect = event => {\\n      this.setState({\\n        isOpen: !this.state.isOpen\\n      });\\n    };\\n  }\\n\\n  render() {\\n    const { isOpen } = this.state;\\n    const dropdownItems = [\\n      <OverflowMenuDropdownItem key=\\\"item1\\\" isShared>Item 1</OverflowMenuDropdownItem>,\\n      <OverflowMenuDropdownItem key=\\\"item2\\\" isShared>Item 2</OverflowMenuDropdownItem>,\\n      <OverflowMenuDropdownItem key=\\\"item3\\\" isShared>Item 3</OverflowMenuDropdownItem>,\\n      <OverflowMenuDropdownItem key=\\\"primary\\\" isShared>Primary</OverflowMenuDropdownItem>,\\n      <OverflowMenuDropdownItem key=\\\"secondary\\\" isShared>Secondary</OverflowMenuDropdownItem>,\\n      <OverflowMenuDropdownItem key=\\\"tertiary\\\" isShared>Tertiary</OverflowMenuDropdownItem>,\\n      <OverflowMenuDropdownItem key=\\\"action1\\\" isShared>Action 1</OverflowMenuDropdownItem>,\\n      <OverflowMenuDropdownItem key=\\\"action2\\\" isShared>Action 2</OverflowMenuDropdownItem>,\\n      <OverflowMenuDropdownItem key=\\\"action3\\\" isShared>Action 3</OverflowMenuDropdownItem>,\\n    ];\\n    return (\\n      <OverflowMenu breakpoint=\\\"lg\\\">\\n        <OverflowMenuContent>\\n          <OverflowMenuGroup>\\n            <OverflowMenuItem>Item</OverflowMenuItem>\\n            <OverflowMenuItem>Item</OverflowMenuItem>\\n            <OverflowMenuItem>Item</OverflowMenuItem>\\n          </OverflowMenuGroup>\\n          <OverflowMenuGroup groupType=\\\"button\\\">\\n            <OverflowMenuItem>\\n              <Button variant={ButtonVariant.primary}>Primary</Button>\\n            </OverflowMenuItem>\\n            <OverflowMenuItem>\\n              <Button variant={ButtonVariant.secondary}>Secondary</Button>\\n            </OverflowMenuItem>\\n            <OverflowMenuItem>\\n              <Button variant={ButtonVariant.tertiary}>Tertiary</Button>\\n            </OverflowMenuItem>\\n          </OverflowMenuGroup>\\n          <OverflowMenuGroup groupType=\\\"icon\\\">\\n            <OverflowMenuItem>\\n              <Button variant={ButtonVariant.plain} aria-label=\\\"Align left\\\">\\n                <AlignLeftIcon />\\n              </Button>\\n            </OverflowMenuItem>\\n            <OverflowMenuItem>\\n              <Button variant={ButtonVariant.plain} aria-label=\\\"Align center\\\">\\n                <AlignCenterIcon />\\n              </Button>\\n            </OverflowMenuItem>\\n            <OverflowMenuItem>\\n              <Button variant={ButtonVariant.plain} aria-label=\\\"Align right\\\">\\n                <AlignRightIcon />\\n              </Button>\\n            </OverflowMenuItem>\\n          </OverflowMenuGroup>\\n        </OverflowMenuContent>\\n        <OverflowMenuControl>\\n          <Dropdown\\n            onSelect={this.onSelect}\\n            toggle={<KebabToggle onToggle={this.onToggle} />}\\n            isOpen={isOpen}\\n            isPlain\\n            dropdownItems={dropdownItems}\\n          />\\n        </OverflowMenuControl>\\n      </OverflowMenu>\\n    )\\n  }\\n}\",\"title\":\"Group types\",\"lang\":\"js\"}}>\n      \n    </Example>,\n  'Multiple groups': props => \n    <Example {...pageData} {...props} {...{\"code\":\"import React from 'react';\\nimport { OverflowMenu, OverflowMenuControl, OverflowMenuContent, OverflowMenuGroup, OverflowMenuItem, OverflowMenuDropdownItem } from '@patternfly/react-core';\\nimport { Dropdown, KebabToggle, Button, ButtonVariant } from '@patternfly/react-core';\\nimport AlignLeftIcon from '@patternfly/react-icons/dist/esm/icons/align-left-icon';\\nimport AlignCenterIcon from '@patternfly/react-icons/dist/esm/icons/align-center-icon';\\nimport AlignRightIcon from '@patternfly/react-icons/dist/esm/icons/align-right-icon';\\n\\nclass OverflowMenuAdditionalOptions extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      isOpen: false\\n    };\\n    this.onToggle = isOpen => {\\n      this.setState({\\n        isOpen\\n      });\\n    };\\n    this.onSelect = event => {\\n      this.setState({\\n        isOpen: !this.state.isOpen\\n      });\\n    };\\n  }\\n\\n  render() {\\n    const { isOpen } = this.state;\\n    const dropdownItems = [\\n      <OverflowMenuDropdownItem key=\\\"1\\\" isShared>Primary</OverflowMenuDropdownItem>,\\n      <OverflowMenuDropdownItem key=\\\"2\\\" isShared>Secondary</OverflowMenuDropdownItem>,\\n      <OverflowMenuDropdownItem key=\\\"3\\\" isShared>Tertiary</OverflowMenuDropdownItem>,\\n      <OverflowMenuDropdownItem key=\\\"4\\\" isShared>Action 4</OverflowMenuDropdownItem>,\\n      <OverflowMenuDropdownItem key=\\\"5\\\" isShared>Action 5</OverflowMenuDropdownItem>,\\n      <OverflowMenuDropdownItem key=\\\"6\\\" isShared>Action 6</OverflowMenuDropdownItem>,\\n      <OverflowMenuDropdownItem key=\\\"7\\\">Action 7</OverflowMenuDropdownItem>,\\n    ];\\n    return (\\n      <OverflowMenu breakpoint=\\\"lg\\\">\\n        <OverflowMenuContent>\\n          <OverflowMenuGroup groupType=\\\"button\\\">\\n            <OverflowMenuItem>\\n              <Button variant={ButtonVariant.primary}>Primary</Button>\\n            </OverflowMenuItem>\\n            <OverflowMenuItem>\\n              <Button variant={ButtonVariant.secondary}>Secondary</Button>\\n            </OverflowMenuItem>\\n            <OverflowMenuItem>\\n              <Button variant={ButtonVariant.tertiary}>Tertiary</Button>\\n            </OverflowMenuItem>\\n          </OverflowMenuGroup>\\n          <OverflowMenuGroup groupType=\\\"icon\\\">\\n            <OverflowMenuItem>\\n              <Button variant={ButtonVariant.plain} aria-label=\\\"Align left\\\">\\n                <AlignLeftIcon />\\n              </Button>\\n            </OverflowMenuItem>\\n            <OverflowMenuItem>\\n              <Button variant={ButtonVariant.plain} aria-label=\\\"Align center\\\">\\n                <AlignCenterIcon />\\n              </Button>\\n            </OverflowMenuItem>\\n            <OverflowMenuItem>\\n              <Button variant={ButtonVariant.plain} aria-label=\\\"Align right\\\">\\n                <AlignRightIcon />\\n              </Button>\\n            </OverflowMenuItem>\\n          </OverflowMenuGroup>\\n        </OverflowMenuContent>\\n        <OverflowMenuControl hasAdditionalOptions>\\n          <Dropdown\\n            onSelect={this.onSelect}\\n            toggle={<KebabToggle onToggle={this.onToggle} />}\\n            isOpen={isOpen}\\n            isPlain\\n            dropdownItems={dropdownItems}\\n          />\\n        </OverflowMenuControl>\\n      </OverflowMenu>\\n    )\\n  }\\n}\",\"title\":\"Multiple groups\",\"lang\":\"js\"}}>\n      \n    </Example>,\n  'Persistent': props => \n    <Example {...pageData} {...props} {...{\"code\":\"import React from 'react';\\nimport { OverflowMenu, OverflowMenuControl, OverflowMenuContent, OverflowMenuGroup, OverflowMenuItem, OverflowMenuDropdownItem } from '@patternfly/react-core';\\nimport { Dropdown, KebabToggle, Button, ButtonVariant } from '@patternfly/react-core';\\n\\nclass OverflowMenuPersist extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      isOpen: false\\n    };\\n    this.onToggle = isOpen => {\\n      this.setState({\\n        isOpen\\n      });\\n    };\\n    this.onSelect = event => {\\n      this.setState({\\n        isOpen: !this.state.isOpen\\n      });\\n    };\\n  }\\n\\n  render() {\\n    const { isOpen } = this.state;\\n    const dropdownItems = [\\n      <OverflowMenuDropdownItem key=\\\"secondary\\\" isShared>Secondary</OverflowMenuDropdownItem>,\\n      <OverflowMenuDropdownItem key=\\\"tertiary\\\" isShared>Tertiary</OverflowMenuDropdownItem>,\\n      <OverflowMenuDropdownItem key=\\\"action\\\">Action 4</OverflowMenuDropdownItem>\\n    ];\\n    return (\\n      <OverflowMenu breakpoint=\\\"lg\\\">\\n        <OverflowMenuContent isPersistent>\\n          <OverflowMenuGroup groupType=\\\"button\\\" isPersistent>\\n            <OverflowMenuItem isPersistent>\\n              <Button variant={ButtonVariant.primary}>Primary</Button>\\n            </OverflowMenuItem>\\n            <OverflowMenuItem>\\n              <Button variant={ButtonVariant.secondary}>Secondary</Button>\\n            </OverflowMenuItem>\\n            <OverflowMenuItem>\\n              <Button variant={ButtonVariant.tertiary}>Tertiary</Button>\\n            </OverflowMenuItem>\\n          </OverflowMenuGroup>\\n        </OverflowMenuContent>\\n        <OverflowMenuControl hasAdditionalOptions>\\n          <Dropdown\\n            onSelect={this.onSelect}\\n            toggle={<KebabToggle onToggle={this.onToggle} />}\\n            isOpen={isOpen}\\n            isPlain\\n            dropdownItems={dropdownItems}\\n          />\\n        </OverflowMenuControl>\\n      </OverflowMenu>\\n    )\\n  }\\n}\",\"title\":\"Persistent\",\"lang\":\"js\"}}>\n      \n    </Example>\n};\n\nconst Component = () => (\n  <React.Fragment>\n    <AutoLinkHeader {...{\"id\":\"examples\",\"size\":\"h2\",\"className\":\"ws-title ws-h2\"}}>\n      {`Examples`}\n    </AutoLinkHeader>\n    {React.createElement(pageData.examples[\"Simple (responsive)\"])}\n    {React.createElement(pageData.examples[\"Group types\"])}\n    {React.createElement(pageData.examples[\"Multiple groups\"])}\n    {React.createElement(pageData.examples[\"Persistent\"])}\n  </React.Fragment>\n);\nComponent.displayName = 'ComponentsOverflowMenuReactDocs';\nComponent.pageData = pageData;\n\nexport default Component;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}