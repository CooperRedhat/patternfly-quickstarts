{"ast":null,"code":"function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport { AutoLinkHeader, Example, Link as PatternflyThemeLink } from 'theme-patternfly-org/components';\nimport srcImportsticky from './react/sticky.png';\nvar pageData = {\n  \"id\": \"Pagination\",\n  \"section\": \"components\",\n  \"source\": \"react\",\n  \"slug\": \"/components/pagination/react\",\n  \"sourceLink\": \"https://github.com/patternfly/patternfly-react/blob/main/packages/docs/packages/react-core/src/components/Pagination/examples/Pagination.md\",\n  \"propComponents\": [{\n    \"name\": \"Pagination\",\n    \"description\": \"\",\n    \"props\": [{\n      \"name\": \"children\",\n      \"type\": \"React.ReactNode\",\n      \"description\": \"What should be rendered inside\",\n      \"defaultValue\": \"null\"\n    }, {\n      \"name\": \"className\",\n      \"type\": \"string\",\n      \"description\": \"Additional classes for the container.\",\n      \"defaultValue\": \"''\"\n    }, {\n      \"name\": \"defaultToFullPage\",\n      \"type\": \"boolean\",\n      \"description\": \"Indicate whether to show last full page of results when user selects perPage value greater than remaining rows\",\n      \"defaultValue\": \"false\"\n    }, {\n      \"name\": \"dropDirection\",\n      \"type\": \"'up' | 'down'\",\n      \"description\": \"Direction of dropdown context menu.\"\n    }, {\n      \"name\": \"firstPage\",\n      \"type\": \"number\",\n      \"description\": \"Page we start at.\",\n      \"defaultValue\": \"1\"\n    }, {\n      \"name\": \"isCompact\",\n      \"type\": \"boolean\",\n      \"description\": \"Flag indicating if pagination is compact\",\n      \"defaultValue\": \"false\"\n    }, {\n      \"name\": \"isDisabled\",\n      \"type\": \"boolean\",\n      \"description\": \"Flag indicating if pagination is disabled\",\n      \"defaultValue\": \"false\"\n    }, {\n      \"name\": \"isStatic\",\n      \"type\": \"boolean\",\n      \"description\": \"Flag indicating if pagination should not be sticky on mobile\"\n    }, {\n      \"name\": \"isSticky\",\n      \"type\": \"boolean\",\n      \"description\": \"Flag indicating if pagination should stick to its position (based on variant)\",\n      \"defaultValue\": \"false\"\n    }, {\n      \"name\": \"itemCount\",\n      \"type\": \"number\",\n      \"description\": \"Total number of items.\"\n    }, {\n      \"name\": \"itemsEnd\",\n      \"type\": \"number\",\n      \"description\": \"Last index of items on current page.\",\n      \"defaultValue\": \"null\"\n    }, {\n      \"name\": \"itemsStart\",\n      \"type\": \"number\",\n      \"description\": \"First index of items on current page.\",\n      \"defaultValue\": \"null\"\n    }, {\n      \"name\": \"offset\",\n      \"type\": \"number\",\n      \"description\": \"Start index of rows to display, used in place of providing page\",\n      \"defaultValue\": \"0\"\n    }, {\n      \"name\": \"onFirstClick\",\n      \"type\": \"(event: React.SyntheticEvent<HTMLButtonElement>, page: number) => void\",\n      \"description\": \"Function called when user clicks on navigate to first page.\",\n      \"defaultValue\": \"() => undefined\"\n    }, {\n      \"name\": \"onLastClick\",\n      \"type\": \"(event: React.SyntheticEvent<HTMLButtonElement>, page: number) => void\",\n      \"description\": \"Function called when user clicks on navigate to last page.\",\n      \"defaultValue\": \"() => undefined\"\n    }, {\n      \"name\": \"onNextClick\",\n      \"type\": \"(event: React.SyntheticEvent<HTMLButtonElement>, page: number) => void\",\n      \"description\": \"Function called when user clicks on navigate to next page.\",\n      \"defaultValue\": \"() => undefined\"\n    }, {\n      \"name\": \"onPageInput\",\n      \"type\": \"(event: React.SyntheticEvent<HTMLButtonElement>, page: number) => void\",\n      \"description\": \"Function called when user inputs page number.\",\n      \"defaultValue\": \"() => undefined\"\n    }, {\n      \"name\": \"onPerPageSelect\",\n      \"type\": \"(\\n  _evt: React.MouseEvent | React.KeyboardEvent | MouseEvent,\\n  newPerPage: number,\\n  newPage: number,\\n  startIdx?: number,\\n  endIdx?: number\\n) => void\",\n      \"description\": \"Function called when user selects number of items per page.\",\n      \"defaultValue\": \"() => undefined\"\n    }, {\n      \"name\": \"onPreviousClick\",\n      \"type\": \"(event: React.SyntheticEvent<HTMLButtonElement>, page: number) => void\",\n      \"description\": \"Function called when user clicks on navigate to previous page.\",\n      \"defaultValue\": \"() => undefined\"\n    }, {\n      \"name\": \"onSetPage\",\n      \"type\": \"(\\n  _evt: React.MouseEvent | React.KeyboardEvent | MouseEvent,\\n  newPage: number,\\n  perPage?: number,\\n  startIdx?: number,\\n  endIdx?: number\\n) => void\",\n      \"description\": \"Function called when user sets page.\",\n      \"defaultValue\": \"() => undefined\"\n    }, {\n      \"name\": \"ouiaSafe\",\n      \"type\": \"No type info\",\n      \"defaultValue\": \"true\"\n    }, {\n      \"name\": \"page\",\n      \"type\": \"number\",\n      \"description\": \"Current page number.\",\n      \"defaultValue\": \"0\"\n    }, {\n      \"name\": \"perPage\",\n      \"type\": \"number\",\n      \"description\": \"Number of items per page.\",\n      \"defaultValue\": \"defaultPerPageOptions[0].value\"\n    }, {\n      \"name\": \"perPageComponent\",\n      \"type\": \"'div' | 'button'\",\n      \"description\": \"Component to be used for wrapping the toggle contents. Use 'button' when you want\\nall of the toggle text to be clickable.\",\n      \"defaultValue\": \"'div'\"\n    }, {\n      \"name\": \"perPageOptions\",\n      \"type\": \"PerPageOptions[]\",\n      \"description\": \"Array of the number of items per page  options.\",\n      \"defaultValue\": \"[\\n  {\\n    title: '10',\\n    value: 10\\n  },\\n  {\\n    title: '20',\\n    value: 20\\n  },\\n  {\\n    title: '50',\\n    value: 50\\n  },\\n  {\\n    title: '100',\\n    value: 100\\n  }\\n]\"\n    }, {\n      \"name\": \"titles\",\n      \"type\": \"PaginationTitles\",\n      \"description\": \"Object with titles to display in pagination.\",\n      \"defaultValue\": \"{\\n  items: '',\\n  page: '',\\n  pages: '',\\n  itemsPerPage: 'Items per page',\\n  perPageSuffix: 'per page',\\n  toFirstPage: 'Go to first page',\\n  toPreviousPage: 'Go to previous page',\\n  toLastPage: 'Go to last page',\\n  toNextPage: 'Go to next page',\\n  optionsToggle: '',\\n  currPage: 'Current page',\\n  paginationTitle: 'Pagination',\\n  ofWord: 'of'\\n}\"\n    }, {\n      \"name\": \"toggleTemplate\",\n      \"type\": \"((props: ToggleTemplateProps) => React.ReactElement) | string\",\n      \"description\": \"This will be shown in pagination toggle span. You can use firstIndex, lastIndex, itemCount, itemsTitle, ofWord props.\"\n    }, {\n      \"name\": \"variant\",\n      \"type\": \"'top' | 'bottom' | PaginationVariant\",\n      \"description\": \"Position where pagination is rendered.\",\n      \"defaultValue\": \"PaginationVariant.top\"\n    }, {\n      \"name\": \"widgetId\",\n      \"type\": \"string\",\n      \"description\": \"ID to ideintify widget on page.\",\n      \"defaultValue\": \"'pagination-options-menu'\"\n    }]\n  }, {\n    \"name\": \"PaginationTitles\",\n    \"description\": \"\",\n    \"props\": [{\n      \"name\": \"currPage\",\n      \"type\": \"string\",\n      \"description\": \"Accessible label for the input displaying the current page\"\n    }, {\n      \"name\": \"items\",\n      \"type\": \"string\",\n      \"description\": \"The type or title of the items being paginated\"\n    }, {\n      \"name\": \"itemsPerPage\",\n      \"type\": \"string\",\n      \"description\": \"The title of the pagination options menu\"\n    }, {\n      \"name\": \"ofWord\",\n      \"type\": \"string\",\n      \"description\": \"Accessible label for the English word \\\"of\\\"\"\n    }, {\n      \"name\": \"optionsToggle\",\n      \"type\": \"string\",\n      \"description\": \"Accessible label for the options toggle\"\n    }, {\n      \"name\": \"page\",\n      \"type\": \"string\",\n      \"description\": \"The title of a page displayed beside the page number\"\n    }, {\n      \"name\": \"pages\",\n      \"type\": \"string\",\n      \"description\": \"The title of a page displayed beside the page number (plural form)\"\n    }, {\n      \"name\": \"paginationTitle\",\n      \"type\": \"string\",\n      \"description\": \"Accessible label for the pagination component\"\n    }, {\n      \"name\": \"perPageSuffix\",\n      \"type\": \"string\",\n      \"description\": \"The suffix to be displayed after each option on the options menu dropdown\"\n    }, {\n      \"name\": \"toFirstPage\",\n      \"type\": \"string\",\n      \"description\": \"Accessible label for the button which moves to the first page\"\n    }, {\n      \"name\": \"toLastPage\",\n      \"type\": \"string\",\n      \"description\": \"Accessible label for the button which moves to the last page\"\n    }, {\n      \"name\": \"toNextPage\",\n      \"type\": \"string\",\n      \"description\": \"Accessible label for the button which moves to the next page\"\n    }, {\n      \"name\": \"toPreviousPage\",\n      \"type\": \"string\",\n      \"description\": \"Accessible label for the button which moves to the previous page\"\n    }]\n  }, {\n    \"name\": \"PerPageOptions\",\n    \"description\": \"\",\n    \"props\": [{\n      \"name\": \"title\",\n      \"type\": \"string\",\n      \"description\": \"option title\"\n    }, {\n      \"name\": \"value\",\n      \"type\": \"number\",\n      \"description\": \"option value\"\n    }]\n  }, {\n    \"name\": \"ToggleTemplateProps\",\n    \"description\": \"\",\n    \"props\": [{\n      \"name\": \"firstIndex\",\n      \"type\": \"number\",\n      \"description\": \"The first index of the items being paginated\"\n    }, {\n      \"name\": \"itemCount\",\n      \"type\": \"number\",\n      \"description\": \"The total number of items being paginated\"\n    }, {\n      \"name\": \"itemsTitle\",\n      \"type\": \"string\",\n      \"description\": \"The type or title of the items being paginated\"\n    }, {\n      \"name\": \"lastIndex\",\n      \"type\": \"number\",\n      \"description\": \"The last index of the items being paginated\"\n    }, {\n      \"name\": \"ofWord\",\n      \"type\": \"React.ReactNode\",\n      \"description\": \"The word that joins the index and itemCount/itemsTitle\"\n    }]\n  }],\n  \"examples\": [\"Top\", \"Bottom\", \"Indeterminate\", \"Disabled\", \"No items\", \"One page\", \"Compact\"],\n  \"fullscreenExamples\": [\"Sticky\"]\n};\npageData.examples = {\n  'Top': function Top(props) {\n    return /*#__PURE__*/React.createElement(Example, _extends({}, pageData, props, {\n      \"code\": \"import React from 'react';\\nimport { Pagination, PaginationVariant } from '@patternfly/react-core';\\n\\nclass PaginationTop extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      page: 1,\\n      perPage: 20\\n    };\\n\\n    this.onSetPage = (_event, pageNumber) => {\\n      this.setState({\\n        page: pageNumber\\n      });\\n    };\\n\\n    this.onPerPageSelect = (_event, perPage) => {\\n      this.setState({\\n        perPage\\n      });\\n    };\\n  }\\n\\n  render() {\\n    return (\\n      <Pagination\\n        perPageComponent=\\\"button\\\"\\n        itemCount={523}\\n        perPage={this.state.perPage}\\n        page={this.state.page}\\n        onSetPage={this.onSetPage}\\n        widgetId=\\\"pagination-options-menu-top\\\"\\n        onPerPageSelect={this.onPerPageSelect}\\n      />\\n    );\\n  }\\n}\",\n      \"title\": \"Top\",\n      \"lang\": \"js\"\n    }));\n  },\n  'Bottom': function Bottom(props) {\n    return /*#__PURE__*/React.createElement(Example, _extends({}, pageData, props, {\n      \"code\": \"import React from 'react';\\nimport { Pagination, PaginationVariant } from '@patternfly/react-core';\\n\\nclass PaginationBottom extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      page: 1\\n    };\\n    this.onSetPage = (_event, pageNumber) => {\\n      this.setState({\\n        page: pageNumber\\n      });\\n    };\\n    this.onPerPageSelect = (_event, perPage) => {\\n      this.setState({\\n        perPage\\n      });\\n    };\\n  }\\n\\n  render() {\\n    return (\\n      <Pagination\\n        perPageComponent=\\\"button\\\"\\n        itemCount={333}\\n        widgetId=\\\"pagination-options-menu-bottom\\\"\\n        perPage={this.state.perPage}\\n        page={this.state.page}\\n        variant={PaginationVariant.bottom}\\n        onSetPage={this.onSetPage}\\n        onPerPageSelect={this.onPerPageSelect}\\n      />\\n    );\\n  }\\n}\",\n      \"title\": \"Bottom\",\n      \"lang\": \"js\"\n    }));\n  },\n  'Indeterminate': function Indeterminate(props) {\n    return /*#__PURE__*/React.createElement(Example, _extends({}, pageData, props, {\n      \"code\": \"import React from 'react';\\nimport { Pagination } from '@patternfly/react-core';\\n\\nPaginationIndeterminate = () => {\\n  const [page, setPage] = React.useState(1);\\n  const [perPage, setPerPage] = React.useState(20);\\n\\n  const onSetPage = (_event, pageNumber) => setPage(pageNumber);\\n  const onPerPageSelect = (_event, perPage) => setPerPage(perPage);\\n\\n  return (\\n    <Pagination\\n      perPageComponent=\\\"button\\\"\\n      toggleTemplate={({ firstIndex, lastIndex }) => (\\n        <React.Fragment>\\n          <b>\\n            {firstIndex} - {lastIndex}\\n          </b>\\n          of\\n          <b>many</b>\\n        </React.Fragment>\\n      )}\\n      widgetId=\\\"pagination-indeterminate\\\"\\n      perPage={perPage}\\n      page={page}\\n      onSetPage={onSetPage}\\n      onPerPageSelect={onPerPageSelect}\\n    />\\n  );\\n};\",\n      \"title\": \"Indeterminate\",\n      \"lang\": \"js\"\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      \"className\": \"ws-p\"\n    }, \"By not passing \", /*#__PURE__*/React.createElement(\"code\", {\n      \"className\": \"ws-code\"\n    }, \"itemCount\"), \" and passing \", /*#__PURE__*/React.createElement(\"code\", {\n      \"className\": \"ws-code\"\n    }, \"toggleTemplate\"), \" you can customize the toggle with text.\"));\n  },\n  'Disabled': function Disabled(props) {\n    return /*#__PURE__*/React.createElement(Example, _extends({}, pageData, props, {\n      \"code\": \"import React from 'react';\\nimport { Pagination, PaginationVariant } from '@patternfly/react-core';\\n\\nclass PaginationDisabled extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      page: 1,\\n      perPage: 20\\n    };\\n\\n    this.onSetPage = (_event, pageNumber) => {\\n      this.setState({\\n        page: pageNumber\\n      });\\n    };\\n\\n    this.onPerPageSelect = (_event, perPage) => {\\n      this.setState({\\n        perPage\\n      });\\n    };\\n  }\\n\\n  render() {\\n    return (\\n      <Pagination\\n        perPageComponent=\\\"button\\\"\\n        itemCount={523}\\n        perPage={this.state.perPage}\\n        page={this.state.page}\\n        onSetPage={this.onSetPage}\\n        widgetId=\\\"pagination-options-menu-top\\\"\\n        onPerPageSelect={this.onPerPageSelect}\\n        isDisabled\\n      />\\n    );\\n  }\\n}\",\n      \"title\": \"Disabled\",\n      \"lang\": \"js\"\n    }));\n  },\n  'No items': function NoItems(props) {\n    return /*#__PURE__*/React.createElement(Example, _extends({}, pageData, props, {\n      \"code\": \"import React from 'react';\\nimport { Pagination, PaginationVariant } from '@patternfly/react-core';\\n\\nclass PaginationTop extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      page: 1,\\n      perPage: 20\\n    };\\n\\n    this.onSetPage = (_event, pageNumber) => {\\n      this.setState({\\n        page: pageNumber\\n      });\\n    };\\n\\n    this.onPerPageSelect = (_event, perPage) => {\\n      this.setState({\\n        perPage\\n      });\\n    };\\n  }\\n\\n  render() {\\n    return (\\n      <Pagination\\n        perPageComponent=\\\"button\\\"\\n        itemCount={0}\\n        perPage={this.state.perPage}\\n        page={this.state.page}\\n        onSetPage={this.onSetPage}\\n        widgetId=\\\"pagination-options-menu-top\\\"\\n        onPerPageSelect={this.onPerPageSelect}\\n      />\\n    );\\n  }\\n}\",\n      \"title\": \"No items\",\n      \"lang\": \"js\"\n    }));\n  },\n  'One page': function OnePage(props) {\n    return /*#__PURE__*/React.createElement(Example, _extends({}, pageData, props, {\n      \"code\": \"import React from 'react';\\nimport { Pagination, PaginationVariant } from '@patternfly/react-core';\\n\\nclass PaginationTop extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      page: 1,\\n      perPage: 20\\n    };\\n\\n    this.onSetPage = (_event, pageNumber) => {\\n      this.setState({\\n        page: pageNumber\\n      });\\n    };\\n\\n    this.onPerPageSelect = (_event, perPage) => {\\n      this.setState({\\n        perPage\\n      });\\n    };\\n  }\\n\\n  render() {\\n    return (\\n      <Pagination\\n        perPageComponent=\\\"button\\\"\\n        itemCount={15}\\n        perPage={this.state.perPage}\\n        page={this.state.page}\\n        onSetPage={this.onSetPage}\\n        widgetId=\\\"pagination-options-menu-top\\\"\\n        onPerPageSelect={this.onPerPageSelect}\\n      />\\n    );\\n  }\\n}\",\n      \"title\": \"One page\",\n      \"lang\": \"js\"\n    }));\n  },\n  'Compact': function Compact(props) {\n    return /*#__PURE__*/React.createElement(Example, _extends({}, pageData, props, {\n      \"code\": \"import React from 'react';\\nimport { Pagination, PaginationVariant } from '@patternfly/react-core';\\n\\nclass PaginationTop extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      page: 1,\\n      perPage: 20\\n    };\\n\\n    this.onSetPage = (_event, pageNumber) => {\\n      this.setState({\\n        page: pageNumber\\n      });\\n    };\\n\\n    this.onPerPageSelect = (_event, perPage) => {\\n      this.setState({\\n        perPage\\n      });\\n    };\\n  }\\n\\n  render() {\\n    return (\\n      <Pagination\\n        perPageComponent=\\\"button\\\"\\n        itemCount={523}\\n        perPage={this.state.perPage}\\n        page={this.state.page}\\n        onSetPage={this.onSetPage}\\n        widgetId=\\\"pagination-options-menu-top\\\"\\n        onPerPageSelect={this.onPerPageSelect}\\n        isCompact\\n      />\\n    );\\n  }\\n}\",\n      \"title\": \"Compact\",\n      \"lang\": \"js\"\n    }));\n  },\n  'Sticky': function Sticky(props) {\n    return /*#__PURE__*/React.createElement(Example, _extends({}, pageData, props, {\n      thumbnail: srcImportsticky,\n      \"code\": \"import React from 'react';\\nimport { Pagination, PaginationVariant, Gallery, GalleryItem, Card, CardBody } from '@patternfly/react-core';\\n\\nclass PaginationSticky extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      page: 1,\\n      perPage: 20,\\n      isTopSticky: true\\n    };\\n\\n    this.onToggleSticky = () => {\\n      this.setState({\\n        isTopSticky: !this.state.isTopSticky\\n      });\\n    };\\n\\n    this.onSetPage = (_event, pageNumber) => {\\n      this.setState({\\n        page: pageNumber\\n      });\\n    };\\n\\n    this.onPerPageSelect = (_event, perPage) => {\\n      this.setState({\\n        perPage\\n      });\\n    };\\n  }\\n\\n  render() {\\n    return (\\n      <div>\\n        {this.state.isTopSticky && (\\n          <React.Fragment>\\n            <Pagination\\n              perPageComponent=\\\"button\\\"\\n              itemCount={523}\\n              perPage={this.state.perPage}\\n              page={this.state.page}\\n              onSetPage={this.onSetPage}\\n              widgetId=\\\"pagination-options-menu-top\\\"\\n              onPerPageSelect={this.onPerPageSelect}\\n              isSticky\\n            >\\n              <button onClick={this.onToggleSticky}>Toggle to bottom position</button>\\n            </Pagination>\\n            <Gallery hasGutter>\\n              {Array.apply(0, Array(40)).map((x, i) => (\\n                <GalleryItem key={i}>\\n                  <Card>\\n                    <CardBody>This is a card</CardBody>\\n                  </Card>\\n                </GalleryItem>\\n              ))}\\n            </Gallery>\\n          </React.Fragment>\\n        )}\\n        {!this.state.isTopSticky && (\\n          <React.Fragment>\\n            <Gallery hasGutter>\\n              {Array.apply(0, Array(40)).map((x, i) => (\\n                <GalleryItem key={i}>\\n                  <Card>\\n                    <CardBody>This is a card</CardBody>\\n                  </Card>\\n                </GalleryItem>\\n              ))}\\n            </Gallery>\\n            <Pagination\\n              perPageComponent=\\\"button\\\"\\n              itemCount={523}\\n              perPage={this.state.perPage}\\n              page={this.state.page}\\n              onSetPage={this.onSetPage}\\n              widgetId=\\\"pagination-options-menu-top\\\"\\n              onPerPageSelect={this.onPerPageSelect}\\n              isSticky\\n              variant={PaginationVariant.bottom}\\n            >\\n              <button onClick={this.onToggleSticky}>Toggle to top position</button>\\n            </Pagination>\\n          </React.Fragment>\\n        )}\\n      </div>\\n    );\\n  }\\n}\",\n      \"title\": \"Sticky\",\n      \"lang\": \"js\",\n      \"isFullscreen\": true\n    }));\n  }\n};\n\nvar Component = function Component() {\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(AutoLinkHeader, {\n    \"id\": \"examples\",\n    \"size\": \"h2\",\n    \"className\": \"ws-title ws-h2\"\n  }, \"Examples\"), React.createElement(pageData.examples[\"Top\"]), React.createElement(pageData.examples[\"Bottom\"]), React.createElement(pageData.examples[\"Indeterminate\"]), React.createElement(pageData.examples[\"Disabled\"]), React.createElement(pageData.examples[\"No items\"]), React.createElement(pageData.examples[\"One page\"]), React.createElement(pageData.examples[\"Compact\"]), React.createElement(pageData.examples[\"Sticky\"]));\n};\n\nComponent.displayName = 'ComponentsPaginationReactDocs';\nComponent.pageData = pageData;\nexport default Component;","map":{"version":3,"names":["React","AutoLinkHeader","Example","Link","PatternflyThemeLink","srcImportsticky","pageData","examples","props","Component","createElement","displayName"],"sources":["/Users/jschuler/Code/patternfly-quickstarts/packages/docs/src/generated/components/pagination/react.js"],"sourcesContent":["import React from 'react';\nimport { AutoLinkHeader, Example, Link as PatternflyThemeLink } from 'theme-patternfly-org/components';\nimport srcImportsticky from './react/sticky.png';\nconst pageData = {\n  \"id\": \"Pagination\",\n  \"section\": \"components\",\n  \"source\": \"react\",\n  \"slug\": \"/components/pagination/react\",\n  \"sourceLink\": \"https://github.com/patternfly/patternfly-react/blob/main/packages/docs/packages/react-core/src/components/Pagination/examples/Pagination.md\",\n  \"propComponents\": [\n    {\n      \"name\": \"Pagination\",\n      \"description\": \"\",\n      \"props\": [\n        {\n          \"name\": \"children\",\n          \"type\": \"React.ReactNode\",\n          \"description\": \"What should be rendered inside\",\n          \"defaultValue\": \"null\"\n        },\n        {\n          \"name\": \"className\",\n          \"type\": \"string\",\n          \"description\": \"Additional classes for the container.\",\n          \"defaultValue\": \"''\"\n        },\n        {\n          \"name\": \"defaultToFullPage\",\n          \"type\": \"boolean\",\n          \"description\": \"Indicate whether to show last full page of results when user selects perPage value greater than remaining rows\",\n          \"defaultValue\": \"false\"\n        },\n        {\n          \"name\": \"dropDirection\",\n          \"type\": \"'up' | 'down'\",\n          \"description\": \"Direction of dropdown context menu.\"\n        },\n        {\n          \"name\": \"firstPage\",\n          \"type\": \"number\",\n          \"description\": \"Page we start at.\",\n          \"defaultValue\": \"1\"\n        },\n        {\n          \"name\": \"isCompact\",\n          \"type\": \"boolean\",\n          \"description\": \"Flag indicating if pagination is compact\",\n          \"defaultValue\": \"false\"\n        },\n        {\n          \"name\": \"isDisabled\",\n          \"type\": \"boolean\",\n          \"description\": \"Flag indicating if pagination is disabled\",\n          \"defaultValue\": \"false\"\n        },\n        {\n          \"name\": \"isStatic\",\n          \"type\": \"boolean\",\n          \"description\": \"Flag indicating if pagination should not be sticky on mobile\"\n        },\n        {\n          \"name\": \"isSticky\",\n          \"type\": \"boolean\",\n          \"description\": \"Flag indicating if pagination should stick to its position (based on variant)\",\n          \"defaultValue\": \"false\"\n        },\n        {\n          \"name\": \"itemCount\",\n          \"type\": \"number\",\n          \"description\": \"Total number of items.\"\n        },\n        {\n          \"name\": \"itemsEnd\",\n          \"type\": \"number\",\n          \"description\": \"Last index of items on current page.\",\n          \"defaultValue\": \"null\"\n        },\n        {\n          \"name\": \"itemsStart\",\n          \"type\": \"number\",\n          \"description\": \"First index of items on current page.\",\n          \"defaultValue\": \"null\"\n        },\n        {\n          \"name\": \"offset\",\n          \"type\": \"number\",\n          \"description\": \"Start index of rows to display, used in place of providing page\",\n          \"defaultValue\": \"0\"\n        },\n        {\n          \"name\": \"onFirstClick\",\n          \"type\": \"(event: React.SyntheticEvent<HTMLButtonElement>, page: number) => void\",\n          \"description\": \"Function called when user clicks on navigate to first page.\",\n          \"defaultValue\": \"() => undefined\"\n        },\n        {\n          \"name\": \"onLastClick\",\n          \"type\": \"(event: React.SyntheticEvent<HTMLButtonElement>, page: number) => void\",\n          \"description\": \"Function called when user clicks on navigate to last page.\",\n          \"defaultValue\": \"() => undefined\"\n        },\n        {\n          \"name\": \"onNextClick\",\n          \"type\": \"(event: React.SyntheticEvent<HTMLButtonElement>, page: number) => void\",\n          \"description\": \"Function called when user clicks on navigate to next page.\",\n          \"defaultValue\": \"() => undefined\"\n        },\n        {\n          \"name\": \"onPageInput\",\n          \"type\": \"(event: React.SyntheticEvent<HTMLButtonElement>, page: number) => void\",\n          \"description\": \"Function called when user inputs page number.\",\n          \"defaultValue\": \"() => undefined\"\n        },\n        {\n          \"name\": \"onPerPageSelect\",\n          \"type\": \"(\\n  _evt: React.MouseEvent | React.KeyboardEvent | MouseEvent,\\n  newPerPage: number,\\n  newPage: number,\\n  startIdx?: number,\\n  endIdx?: number\\n) => void\",\n          \"description\": \"Function called when user selects number of items per page.\",\n          \"defaultValue\": \"() => undefined\"\n        },\n        {\n          \"name\": \"onPreviousClick\",\n          \"type\": \"(event: React.SyntheticEvent<HTMLButtonElement>, page: number) => void\",\n          \"description\": \"Function called when user clicks on navigate to previous page.\",\n          \"defaultValue\": \"() => undefined\"\n        },\n        {\n          \"name\": \"onSetPage\",\n          \"type\": \"(\\n  _evt: React.MouseEvent | React.KeyboardEvent | MouseEvent,\\n  newPage: number,\\n  perPage?: number,\\n  startIdx?: number,\\n  endIdx?: number\\n) => void\",\n          \"description\": \"Function called when user sets page.\",\n          \"defaultValue\": \"() => undefined\"\n        },\n        {\n          \"name\": \"ouiaSafe\",\n          \"type\": \"No type info\",\n          \"defaultValue\": \"true\"\n        },\n        {\n          \"name\": \"page\",\n          \"type\": \"number\",\n          \"description\": \"Current page number.\",\n          \"defaultValue\": \"0\"\n        },\n        {\n          \"name\": \"perPage\",\n          \"type\": \"number\",\n          \"description\": \"Number of items per page.\",\n          \"defaultValue\": \"defaultPerPageOptions[0].value\"\n        },\n        {\n          \"name\": \"perPageComponent\",\n          \"type\": \"'div' | 'button'\",\n          \"description\": \"Component to be used for wrapping the toggle contents. Use 'button' when you want\\nall of the toggle text to be clickable.\",\n          \"defaultValue\": \"'div'\"\n        },\n        {\n          \"name\": \"perPageOptions\",\n          \"type\": \"PerPageOptions[]\",\n          \"description\": \"Array of the number of items per page  options.\",\n          \"defaultValue\": \"[\\n  {\\n    title: '10',\\n    value: 10\\n  },\\n  {\\n    title: '20',\\n    value: 20\\n  },\\n  {\\n    title: '50',\\n    value: 50\\n  },\\n  {\\n    title: '100',\\n    value: 100\\n  }\\n]\"\n        },\n        {\n          \"name\": \"titles\",\n          \"type\": \"PaginationTitles\",\n          \"description\": \"Object with titles to display in pagination.\",\n          \"defaultValue\": \"{\\n  items: '',\\n  page: '',\\n  pages: '',\\n  itemsPerPage: 'Items per page',\\n  perPageSuffix: 'per page',\\n  toFirstPage: 'Go to first page',\\n  toPreviousPage: 'Go to previous page',\\n  toLastPage: 'Go to last page',\\n  toNextPage: 'Go to next page',\\n  optionsToggle: '',\\n  currPage: 'Current page',\\n  paginationTitle: 'Pagination',\\n  ofWord: 'of'\\n}\"\n        },\n        {\n          \"name\": \"toggleTemplate\",\n          \"type\": \"((props: ToggleTemplateProps) => React.ReactElement) | string\",\n          \"description\": \"This will be shown in pagination toggle span. You can use firstIndex, lastIndex, itemCount, itemsTitle, ofWord props.\"\n        },\n        {\n          \"name\": \"variant\",\n          \"type\": \"'top' | 'bottom' | PaginationVariant\",\n          \"description\": \"Position where pagination is rendered.\",\n          \"defaultValue\": \"PaginationVariant.top\"\n        },\n        {\n          \"name\": \"widgetId\",\n          \"type\": \"string\",\n          \"description\": \"ID to ideintify widget on page.\",\n          \"defaultValue\": \"'pagination-options-menu'\"\n        }\n      ]\n    },\n    {\n      \"name\": \"PaginationTitles\",\n      \"description\": \"\",\n      \"props\": [\n        {\n          \"name\": \"currPage\",\n          \"type\": \"string\",\n          \"description\": \"Accessible label for the input displaying the current page\"\n        },\n        {\n          \"name\": \"items\",\n          \"type\": \"string\",\n          \"description\": \"The type or title of the items being paginated\"\n        },\n        {\n          \"name\": \"itemsPerPage\",\n          \"type\": \"string\",\n          \"description\": \"The title of the pagination options menu\"\n        },\n        {\n          \"name\": \"ofWord\",\n          \"type\": \"string\",\n          \"description\": \"Accessible label for the English word \\\"of\\\"\"\n        },\n        {\n          \"name\": \"optionsToggle\",\n          \"type\": \"string\",\n          \"description\": \"Accessible label for the options toggle\"\n        },\n        {\n          \"name\": \"page\",\n          \"type\": \"string\",\n          \"description\": \"The title of a page displayed beside the page number\"\n        },\n        {\n          \"name\": \"pages\",\n          \"type\": \"string\",\n          \"description\": \"The title of a page displayed beside the page number (plural form)\"\n        },\n        {\n          \"name\": \"paginationTitle\",\n          \"type\": \"string\",\n          \"description\": \"Accessible label for the pagination component\"\n        },\n        {\n          \"name\": \"perPageSuffix\",\n          \"type\": \"string\",\n          \"description\": \"The suffix to be displayed after each option on the options menu dropdown\"\n        },\n        {\n          \"name\": \"toFirstPage\",\n          \"type\": \"string\",\n          \"description\": \"Accessible label for the button which moves to the first page\"\n        },\n        {\n          \"name\": \"toLastPage\",\n          \"type\": \"string\",\n          \"description\": \"Accessible label for the button which moves to the last page\"\n        },\n        {\n          \"name\": \"toNextPage\",\n          \"type\": \"string\",\n          \"description\": \"Accessible label for the button which moves to the next page\"\n        },\n        {\n          \"name\": \"toPreviousPage\",\n          \"type\": \"string\",\n          \"description\": \"Accessible label for the button which moves to the previous page\"\n        }\n      ]\n    },\n    {\n      \"name\": \"PerPageOptions\",\n      \"description\": \"\",\n      \"props\": [\n        {\n          \"name\": \"title\",\n          \"type\": \"string\",\n          \"description\": \"option title\"\n        },\n        {\n          \"name\": \"value\",\n          \"type\": \"number\",\n          \"description\": \"option value\"\n        }\n      ]\n    },\n    {\n      \"name\": \"ToggleTemplateProps\",\n      \"description\": \"\",\n      \"props\": [\n        {\n          \"name\": \"firstIndex\",\n          \"type\": \"number\",\n          \"description\": \"The first index of the items being paginated\"\n        },\n        {\n          \"name\": \"itemCount\",\n          \"type\": \"number\",\n          \"description\": \"The total number of items being paginated\"\n        },\n        {\n          \"name\": \"itemsTitle\",\n          \"type\": \"string\",\n          \"description\": \"The type or title of the items being paginated\"\n        },\n        {\n          \"name\": \"lastIndex\",\n          \"type\": \"number\",\n          \"description\": \"The last index of the items being paginated\"\n        },\n        {\n          \"name\": \"ofWord\",\n          \"type\": \"React.ReactNode\",\n          \"description\": \"The word that joins the index and itemCount/itemsTitle\"\n        }\n      ]\n    }\n  ],\n  \"examples\": [\n    \"Top\",\n    \"Bottom\",\n    \"Indeterminate\",\n    \"Disabled\",\n    \"No items\",\n    \"One page\",\n    \"Compact\"\n  ],\n  \"fullscreenExamples\": [\n    \"Sticky\"\n  ]\n};\npageData.examples = {\n  'Top': props => \n    <Example {...pageData} {...props} {...{\"code\":\"import React from 'react';\\nimport { Pagination, PaginationVariant } from '@patternfly/react-core';\\n\\nclass PaginationTop extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      page: 1,\\n      perPage: 20\\n    };\\n\\n    this.onSetPage = (_event, pageNumber) => {\\n      this.setState({\\n        page: pageNumber\\n      });\\n    };\\n\\n    this.onPerPageSelect = (_event, perPage) => {\\n      this.setState({\\n        perPage\\n      });\\n    };\\n  }\\n\\n  render() {\\n    return (\\n      <Pagination\\n        perPageComponent=\\\"button\\\"\\n        itemCount={523}\\n        perPage={this.state.perPage}\\n        page={this.state.page}\\n        onSetPage={this.onSetPage}\\n        widgetId=\\\"pagination-options-menu-top\\\"\\n        onPerPageSelect={this.onPerPageSelect}\\n      />\\n    );\\n  }\\n}\",\"title\":\"Top\",\"lang\":\"js\"}}>\n      \n    </Example>,\n  'Bottom': props => \n    <Example {...pageData} {...props} {...{\"code\":\"import React from 'react';\\nimport { Pagination, PaginationVariant } from '@patternfly/react-core';\\n\\nclass PaginationBottom extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      page: 1\\n    };\\n    this.onSetPage = (_event, pageNumber) => {\\n      this.setState({\\n        page: pageNumber\\n      });\\n    };\\n    this.onPerPageSelect = (_event, perPage) => {\\n      this.setState({\\n        perPage\\n      });\\n    };\\n  }\\n\\n  render() {\\n    return (\\n      <Pagination\\n        perPageComponent=\\\"button\\\"\\n        itemCount={333}\\n        widgetId=\\\"pagination-options-menu-bottom\\\"\\n        perPage={this.state.perPage}\\n        page={this.state.page}\\n        variant={PaginationVariant.bottom}\\n        onSetPage={this.onSetPage}\\n        onPerPageSelect={this.onPerPageSelect}\\n      />\\n    );\\n  }\\n}\",\"title\":\"Bottom\",\"lang\":\"js\"}}>\n      \n    </Example>,\n  'Indeterminate': props => \n    <Example {...pageData} {...props} {...{\"code\":\"import React from 'react';\\nimport { Pagination } from '@patternfly/react-core';\\n\\nPaginationIndeterminate = () => {\\n  const [page, setPage] = React.useState(1);\\n  const [perPage, setPerPage] = React.useState(20);\\n\\n  const onSetPage = (_event, pageNumber) => setPage(pageNumber);\\n  const onPerPageSelect = (_event, perPage) => setPerPage(perPage);\\n\\n  return (\\n    <Pagination\\n      perPageComponent=\\\"button\\\"\\n      toggleTemplate={({ firstIndex, lastIndex }) => (\\n        <React.Fragment>\\n          <b>\\n            {firstIndex} - {lastIndex}\\n          </b>\\n          of\\n          <b>many</b>\\n        </React.Fragment>\\n      )}\\n      widgetId=\\\"pagination-indeterminate\\\"\\n      perPage={perPage}\\n      page={page}\\n      onSetPage={onSetPage}\\n      onPerPageSelect={onPerPageSelect}\\n    />\\n  );\\n};\",\"title\":\"Indeterminate\",\"lang\":\"js\"}}>\n      \n      <p {...{\"className\":\"ws-p\"}}>\n        {`By not passing `}\n        \n        <code {...{\"className\":\"ws-code\"}}>\n          {`itemCount`}\n        </code>\n        {` and passing `}\n        \n        <code {...{\"className\":\"ws-code\"}}>\n          {`toggleTemplate`}\n        </code>\n        {` you can customize the toggle with text.`}\n      </p>\n    </Example>,\n  'Disabled': props => \n    <Example {...pageData} {...props} {...{\"code\":\"import React from 'react';\\nimport { Pagination, PaginationVariant } from '@patternfly/react-core';\\n\\nclass PaginationDisabled extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      page: 1,\\n      perPage: 20\\n    };\\n\\n    this.onSetPage = (_event, pageNumber) => {\\n      this.setState({\\n        page: pageNumber\\n      });\\n    };\\n\\n    this.onPerPageSelect = (_event, perPage) => {\\n      this.setState({\\n        perPage\\n      });\\n    };\\n  }\\n\\n  render() {\\n    return (\\n      <Pagination\\n        perPageComponent=\\\"button\\\"\\n        itemCount={523}\\n        perPage={this.state.perPage}\\n        page={this.state.page}\\n        onSetPage={this.onSetPage}\\n        widgetId=\\\"pagination-options-menu-top\\\"\\n        onPerPageSelect={this.onPerPageSelect}\\n        isDisabled\\n      />\\n    );\\n  }\\n}\",\"title\":\"Disabled\",\"lang\":\"js\"}}>\n      \n    </Example>,\n  'No items': props => \n    <Example {...pageData} {...props} {...{\"code\":\"import React from 'react';\\nimport { Pagination, PaginationVariant } from '@patternfly/react-core';\\n\\nclass PaginationTop extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      page: 1,\\n      perPage: 20\\n    };\\n\\n    this.onSetPage = (_event, pageNumber) => {\\n      this.setState({\\n        page: pageNumber\\n      });\\n    };\\n\\n    this.onPerPageSelect = (_event, perPage) => {\\n      this.setState({\\n        perPage\\n      });\\n    };\\n  }\\n\\n  render() {\\n    return (\\n      <Pagination\\n        perPageComponent=\\\"button\\\"\\n        itemCount={0}\\n        perPage={this.state.perPage}\\n        page={this.state.page}\\n        onSetPage={this.onSetPage}\\n        widgetId=\\\"pagination-options-menu-top\\\"\\n        onPerPageSelect={this.onPerPageSelect}\\n      />\\n    );\\n  }\\n}\",\"title\":\"No items\",\"lang\":\"js\"}}>\n      \n    </Example>,\n  'One page': props => \n    <Example {...pageData} {...props} {...{\"code\":\"import React from 'react';\\nimport { Pagination, PaginationVariant } from '@patternfly/react-core';\\n\\nclass PaginationTop extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      page: 1,\\n      perPage: 20\\n    };\\n\\n    this.onSetPage = (_event, pageNumber) => {\\n      this.setState({\\n        page: pageNumber\\n      });\\n    };\\n\\n    this.onPerPageSelect = (_event, perPage) => {\\n      this.setState({\\n        perPage\\n      });\\n    };\\n  }\\n\\n  render() {\\n    return (\\n      <Pagination\\n        perPageComponent=\\\"button\\\"\\n        itemCount={15}\\n        perPage={this.state.perPage}\\n        page={this.state.page}\\n        onSetPage={this.onSetPage}\\n        widgetId=\\\"pagination-options-menu-top\\\"\\n        onPerPageSelect={this.onPerPageSelect}\\n      />\\n    );\\n  }\\n}\",\"title\":\"One page\",\"lang\":\"js\"}}>\n      \n    </Example>,\n  'Compact': props => \n    <Example {...pageData} {...props} {...{\"code\":\"import React from 'react';\\nimport { Pagination, PaginationVariant } from '@patternfly/react-core';\\n\\nclass PaginationTop extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      page: 1,\\n      perPage: 20\\n    };\\n\\n    this.onSetPage = (_event, pageNumber) => {\\n      this.setState({\\n        page: pageNumber\\n      });\\n    };\\n\\n    this.onPerPageSelect = (_event, perPage) => {\\n      this.setState({\\n        perPage\\n      });\\n    };\\n  }\\n\\n  render() {\\n    return (\\n      <Pagination\\n        perPageComponent=\\\"button\\\"\\n        itemCount={523}\\n        perPage={this.state.perPage}\\n        page={this.state.page}\\n        onSetPage={this.onSetPage}\\n        widgetId=\\\"pagination-options-menu-top\\\"\\n        onPerPageSelect={this.onPerPageSelect}\\n        isCompact\\n      />\\n    );\\n  }\\n}\",\"title\":\"Compact\",\"lang\":\"js\"}}>\n      \n    </Example>,\n  'Sticky': props => \n    <Example {...pageData} {...props} thumbnail={srcImportsticky} {...{\"code\":\"import React from 'react';\\nimport { Pagination, PaginationVariant, Gallery, GalleryItem, Card, CardBody } from '@patternfly/react-core';\\n\\nclass PaginationSticky extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      page: 1,\\n      perPage: 20,\\n      isTopSticky: true\\n    };\\n\\n    this.onToggleSticky = () => {\\n      this.setState({\\n        isTopSticky: !this.state.isTopSticky\\n      });\\n    };\\n\\n    this.onSetPage = (_event, pageNumber) => {\\n      this.setState({\\n        page: pageNumber\\n      });\\n    };\\n\\n    this.onPerPageSelect = (_event, perPage) => {\\n      this.setState({\\n        perPage\\n      });\\n    };\\n  }\\n\\n  render() {\\n    return (\\n      <div>\\n        {this.state.isTopSticky && (\\n          <React.Fragment>\\n            <Pagination\\n              perPageComponent=\\\"button\\\"\\n              itemCount={523}\\n              perPage={this.state.perPage}\\n              page={this.state.page}\\n              onSetPage={this.onSetPage}\\n              widgetId=\\\"pagination-options-menu-top\\\"\\n              onPerPageSelect={this.onPerPageSelect}\\n              isSticky\\n            >\\n              <button onClick={this.onToggleSticky}>Toggle to bottom position</button>\\n            </Pagination>\\n            <Gallery hasGutter>\\n              {Array.apply(0, Array(40)).map((x, i) => (\\n                <GalleryItem key={i}>\\n                  <Card>\\n                    <CardBody>This is a card</CardBody>\\n                  </Card>\\n                </GalleryItem>\\n              ))}\\n            </Gallery>\\n          </React.Fragment>\\n        )}\\n        {!this.state.isTopSticky && (\\n          <React.Fragment>\\n            <Gallery hasGutter>\\n              {Array.apply(0, Array(40)).map((x, i) => (\\n                <GalleryItem key={i}>\\n                  <Card>\\n                    <CardBody>This is a card</CardBody>\\n                  </Card>\\n                </GalleryItem>\\n              ))}\\n            </Gallery>\\n            <Pagination\\n              perPageComponent=\\\"button\\\"\\n              itemCount={523}\\n              perPage={this.state.perPage}\\n              page={this.state.page}\\n              onSetPage={this.onSetPage}\\n              widgetId=\\\"pagination-options-menu-top\\\"\\n              onPerPageSelect={this.onPerPageSelect}\\n              isSticky\\n              variant={PaginationVariant.bottom}\\n            >\\n              <button onClick={this.onToggleSticky}>Toggle to top position</button>\\n            </Pagination>\\n          </React.Fragment>\\n        )}\\n      </div>\\n    );\\n  }\\n}\",\"title\":\"Sticky\",\"lang\":\"js\",\"isFullscreen\":true}}>\n      \n    </Example>\n};\n\nconst Component = () => (\n  <React.Fragment>\n    <AutoLinkHeader {...{\"id\":\"examples\",\"size\":\"h2\",\"className\":\"ws-title ws-h2\"}}>\n      {`Examples`}\n    </AutoLinkHeader>\n    {React.createElement(pageData.examples[\"Top\"])}\n    {React.createElement(pageData.examples[\"Bottom\"])}\n    {React.createElement(pageData.examples[\"Indeterminate\"])}\n    {React.createElement(pageData.examples[\"Disabled\"])}\n    {React.createElement(pageData.examples[\"No items\"])}\n    {React.createElement(pageData.examples[\"One page\"])}\n    {React.createElement(pageData.examples[\"Compact\"])}\n    {React.createElement(pageData.examples[\"Sticky\"])}\n  </React.Fragment>\n);\nComponent.displayName = 'ComponentsPaginationReactDocs';\nComponent.pageData = pageData;\n\nexport default Component;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}