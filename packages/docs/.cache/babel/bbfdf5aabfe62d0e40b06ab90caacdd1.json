{"ast":null,"code":"function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport { AutoLinkHeader, Example, Link as PatternflyThemeLink } from 'theme-patternfly-org/components';\nimport '../../../../node_modules/@patternfly/react-core/src/components/MenuToggle/examples/./MenuToggle.css';\nimport CogIcon from '@patternfly/react-icons/dist/esm/icons/cog-icon';\nimport EllipsisVIcon from '@patternfly/react-icons/dist/esm/icons/ellipsis-v-icon';\nimport imgAvatar from '@patternfly/react-core/src/components/Avatar/examples/avatarImg.svg';\nvar pageData = {\n  \"id\": \"Menu toggle\",\n  \"section\": \"components\",\n  \"source\": \"react\",\n  \"slug\": \"/components/menu-toggle/react\",\n  \"sourceLink\": \"https://github.com/patternfly/patternfly-react/blob/main/packages/docs/packages/react-core/src/components/MenuToggle/examples/MenuToggle.md\",\n  \"propComponents\": [{\n    \"name\": \"MenuToggle\",\n    \"description\": \"\",\n    \"props\": [{\n      \"name\": \"badge\",\n      \"type\": \"BadgeProps | React.ReactNode\",\n      \"description\": \"Optional badge rendered inside the toggle, after the children content\"\n    }, {\n      \"name\": \"children\",\n      \"type\": \"React.ReactNode\",\n      \"description\": \"Content rendered inside the toggle\"\n    }, {\n      \"name\": \"className\",\n      \"type\": \"string\",\n      \"description\": \"Additional classes added to the toggle\"\n    }, {\n      \"name\": \"icon\",\n      \"type\": \"React.ReactNode\",\n      \"description\": \"Optional icon rendered inside the toggle, before the children content\"\n    }, {\n      \"name\": \"innerRef\",\n      \"type\": \"React.Ref<HTMLButtonElement>\",\n      \"description\": \"Forwarded ref\"\n    }, {\n      \"name\": \"isDisabled\",\n      \"type\": \"boolean\",\n      \"description\": \"Flag indicating the toggle is disabled\"\n    }, {\n      \"name\": \"isExpanded\",\n      \"type\": \"boolean\",\n      \"description\": \"Flag indicating the toggle has expanded styling\"\n    }, {\n      \"name\": \"isFullHeight\",\n      \"type\": \"boolean\",\n      \"description\": \"Flag indicating the toggle is full height\"\n    }, {\n      \"name\": \"isFullWidth\",\n      \"type\": \"boolean\",\n      \"description\": \"Flag indicating the toggle takes up the full width of its parent\"\n    }, {\n      \"name\": \"variant\",\n      \"type\": \"'default' | 'plain' | 'primary' | 'plainText' | 'secondary'\",\n      \"description\": \"Variant styles of the menu toggle\"\n    }]\n  }],\n  \"beta\": true,\n  \"cssPrefix\": [\"pf-c-menu-toggle\"],\n  \"examples\": [\"Collapsed\", \"Expanded\", \"Disabled\", \"Count\", \"Primary\", \"Secondary\", \"Plain\", \"Plain with text\", \"With icon/image and text\", \"With avatar and text\", \"Full height\", \"Full width\"]\n};\npageData.liveContext = {\n  CogIcon: CogIcon,\n  EllipsisVIcon: EllipsisVIcon,\n  imgAvatar: imgAvatar\n};\npageData.examples = {\n  'Collapsed': function Collapsed(props) {\n    return /*#__PURE__*/React.createElement(Example, _extends({}, pageData, props, {\n      \"code\": \"import React from 'react';\\nimport { MenuToggle } from '@patternfly/react-core';\\n\\nconst Collapsed = () => <MenuToggle>Collapsed</MenuToggle>\",\n      \"title\": \"Collapsed\",\n      \"lang\": \"ts\"\n    }));\n  },\n  'Expanded': function Expanded(props) {\n    return /*#__PURE__*/React.createElement(Example, _extends({}, pageData, props, {\n      \"code\": \"import React from 'react';\\nimport { MenuToggle } from '@patternfly/react-core';\\n\\nconst Expanded = () => <MenuToggle isExpanded>Expanded</MenuToggle>;\",\n      \"title\": \"Expanded\",\n      \"lang\": \"ts\"\n    }));\n  },\n  'Disabled': function Disabled(props) {\n    return /*#__PURE__*/React.createElement(Example, _extends({}, pageData, props, {\n      \"code\": \"import React from 'react';\\nimport { MenuToggle } from '@patternfly/react-core';\\n\\nconst Disabled = () => <MenuToggle isDisabled>Disabled</MenuToggle>\",\n      \"title\": \"Disabled\",\n      \"lang\": \"ts\"\n    }));\n  },\n  'Count': function Count(props) {\n    return /*#__PURE__*/React.createElement(Example, _extends({}, pageData, props, {\n      \"code\": \"import React from 'react';\\nimport { MenuToggle, Badge } from '@patternfly/react-core';\\n\\nconst Count = () => <MenuToggle badge={<Badge>4 selected</Badge>}>Count</MenuToggle>\",\n      \"title\": \"Count\",\n      \"lang\": \"ts\"\n    }));\n  },\n  'Primary': function Primary(props) {\n    return /*#__PURE__*/React.createElement(Example, _extends({}, pageData, props, {\n      \"code\": \"import React from 'react';\\nimport { MenuToggle } from '@patternfly/react-core';\\nimport CogIcon from '@patternfly/react-icons/dist/esm/icons/cog-icon';\\n\\nconst Primary = () => (\\n  <React.Fragment>\\n    <MenuToggle variant=\\\"primary\\\">Collapsed</MenuToggle>{' '}\\n    <MenuToggle variant=\\\"primary\\\" icon={<CogIcon />}>\\n      Icon\\n    </MenuToggle>{' '}\\n    <MenuToggle variant=\\\"primary\\\" isExpanded>\\n      Expanded\\n    </MenuToggle>{' '}\\n    <MenuToggle variant=\\\"primary\\\" isDisabled>\\n      Disabled\\n    </MenuToggle>\\n  </React.Fragment>\\n)\",\n      \"title\": \"Primary\",\n      \"lang\": \"ts\"\n    }));\n  },\n  'Secondary': function Secondary(props) {\n    return /*#__PURE__*/React.createElement(Example, _extends({}, pageData, props, {\n      \"code\": \"import React from 'react';\\nimport { MenuToggle } from '@patternfly/react-core';\\nimport CogIcon from '@patternfly/react-icons/dist/esm/icons/cog-icon';\\n\\nconst Secondary = () => (\\n  <React.Fragment>\\n    <MenuToggle variant=\\\"secondary\\\">Collapsed</MenuToggle>{' '}\\n      <MenuToggle variant=\\\"secondary\\\" icon={<CogIcon />}>\\n      Icon\\n    </MenuToggle>{' '}\\n    <MenuToggle variant=\\\"secondary\\\" isExpanded>\\n      Expanded\\n    </MenuToggle>{' '}\\n    <MenuToggle variant=\\\"secondary\\\" isDisabled>\\n      Disabled\\n    </MenuToggle>\\n  </React.Fragment>\\n)\",\n      \"title\": \"Secondary\",\n      \"lang\": \"ts\"\n    }));\n  },\n  'Plain': function Plain(props) {\n    return /*#__PURE__*/React.createElement(Example, _extends({}, pageData, props, {\n      \"code\": \"import React from 'react';\\nimport { MenuToggle } from '@patternfly/react-core';\\nimport EllipsisVIcon from '@patternfly/react-icons/dist/esm/icons/ellipsis-v-icon';\\n\\nconst Plain = () => (\\n  <React.Fragment>\\n    <MenuToggle variant=\\\"plain\\\" aria-label=\\\"plain kebab\\\">\\n      <EllipsisVIcon />\\n    </MenuToggle>\\n    <MenuToggle variant=\\\"plain\\\" isExpanded aria-label=\\\"plain expanded kebab\\\">\\n      <EllipsisVIcon />\\n    </MenuToggle>\\n    <MenuToggle variant=\\\"plain\\\" isDisabled aria-label=\\\"disabled kebab\\\">\\n      <EllipsisVIcon />\\n    </MenuToggle>\\n  </React.Fragment>\\n)\",\n      \"title\": \"Plain\",\n      \"lang\": \"ts\"\n    }));\n  },\n  'Plain with text': function PlainWithText(props) {\n    return /*#__PURE__*/React.createElement(Example, _extends({}, pageData, props, {\n      \"code\": \"import React from 'react';\\nimport { MenuToggle } from '@patternfly/react-core';\\n\\nconst PlainWithText = () => (\\n  <React.Fragment>\\n    <MenuToggle variant=\\\"plainText\\\" isDisabled aria-label=\\\"Disabled plain menu toggle\\\">\\n      Disabled\\n    </MenuToggle>\\n    &nbsp;\\n    <MenuToggle variant=\\\"plainText\\\" aria-label=\\\"Plain menu toggle\\\">\\n      Custom text\\n    </MenuToggle>\\n    <MenuToggle variant=\\\"plainText\\\" isExpanded aria-label=\\\"Expanded plain menu toggle\\\">\\n      Custom text (expanded)\\n    </MenuToggle>\\n  </React.Fragment>\\n)\",\n      \"title\": \"Plain with text\",\n      \"lang\": \"ts\"\n    }));\n  },\n  'With icon/image and text': function WithIconImageAndText(props) {\n    return /*#__PURE__*/React.createElement(Example, _extends({}, pageData, props, {\n      \"code\": \"import React from 'react';\\nimport { MenuToggle, Avatar } from '@patternfly/react-core';\\nimport CogIcon from '@patternfly/react-icons/dist/esm/icons/cog-icon';\\n\\nconst WithIconimageAndText = () => (\\n  <React.Fragment>\\n    <MenuToggle icon={<CogIcon />} variant=\\\"secondary\\\">Icon</MenuToggle>{' '}\\n    <MenuToggle icon={<CogIcon />} variant=\\\"secondary\\\" isDisabled>Icon</MenuToggle>\\n  </React.Fragment>\\n)\",\n      \"title\": \"With icon/image and text\",\n      \"lang\": \"ts\"\n    }));\n  },\n  'With avatar and text': function WithAvatarAndText(props) {\n    return /*#__PURE__*/React.createElement(Example, _extends({}, pageData, props, {\n      \"code\": \"import React from 'react';\\nimport { MenuToggle, Avatar } from '@patternfly/react-core';\\nimport imgAvatar from '@patternfly/react-core/src/components/Avatar/examples/avatarImg.svg';\\n\\nconst WithAvatarAndText = () => (\\n  <React.Fragment>\\n    <MenuToggle icon={<Avatar src={imgAvatar} alt=\\\"avatar\\\" />}>Ned Username</MenuToggle>{' '}\\n    <MenuToggle icon={<Avatar src={imgAvatar} alt=\\\"avatar\\\" />} isExpanded>Ned Username</MenuToggle>{' '}\\n    <MenuToggle icon={<Avatar src={imgAvatar} alt=\\\"avatar\\\" />} isDisabled>Ned Username</MenuToggle>\\n  </React.Fragment>\\n)\",\n      \"title\": \"With avatar and text\",\n      \"lang\": \"ts\"\n    }));\n  },\n  'Full height': function FullHeight(props) {\n    return /*#__PURE__*/React.createElement(Example, _extends({}, pageData, props, {\n      \"code\": \"import React from 'react';\\nimport { MenuToggle } from '@patternfly/react-core';\\n\\nconst FullHeight = () => (\\n  <div style={{ height: \\\"80px\\\" }}>\\n    <MenuToggle isFullHeight aria-label=\\\"Full height menu toggle\\\">\\n      Full height\\n    </MenuToggle>\\n  </div>\\n)\",\n      \"title\": \"Full height\",\n      \"lang\": \"ts\"\n    }));\n  },\n  'Full width': function FullWidth(props) {\n    return /*#__PURE__*/React.createElement(Example, _extends({}, pageData, props, {\n      \"code\": \"import React from 'react';\\nimport { MenuToggle } from '@patternfly/react-core';\\n\\nconst fullWidth: React.FunctionComponent = () => {\\n  return (\\n    <MenuToggle isFullWidth aria-label=\\\"Full width menu toggle\\\" >\\n      Full width \\n    </MenuToggle>\\n  );\\n}\",\n      \"title\": \"Full width\",\n      \"lang\": \"ts\"\n    }));\n  }\n};\n\nvar Component = function Component() {\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(AutoLinkHeader, {\n    \"id\": \"examples\",\n    \"size\": \"h2\",\n    \"className\": \"ws-title ws-h2\"\n  }, \"Examples\"), React.createElement(pageData.examples[\"Collapsed\"]), React.createElement(pageData.examples[\"Expanded\"]), React.createElement(pageData.examples[\"Disabled\"]), React.createElement(pageData.examples[\"Count\"]), React.createElement(pageData.examples[\"Primary\"]), React.createElement(pageData.examples[\"Secondary\"]), React.createElement(pageData.examples[\"Plain\"]), React.createElement(pageData.examples[\"Plain with text\"]), React.createElement(pageData.examples[\"With icon/image and text\"]), React.createElement(pageData.examples[\"With avatar and text\"]), React.createElement(pageData.examples[\"Full height\"]), React.createElement(pageData.examples[\"Full width\"]));\n};\n\nComponent.displayName = 'ComponentsMenuToggleReactDocs';\nComponent.pageData = pageData;\nexport default Component;","map":{"version":3,"names":["React","AutoLinkHeader","Example","Link","PatternflyThemeLink","CogIcon","EllipsisVIcon","imgAvatar","pageData","liveContext","examples","props","Component","createElement","displayName"],"sources":["/Users/jschuler/Code/patternfly-quickstarts/packages/docs/src/generated/components/menu-toggle/react.js"],"sourcesContent":["import React from 'react';\nimport { AutoLinkHeader, Example, Link as PatternflyThemeLink } from 'theme-patternfly-org/components';\nimport '../../../../node_modules/@patternfly/react-core/src/components/MenuToggle/examples/./MenuToggle.css'\nimport CogIcon from '@patternfly/react-icons/dist/esm/icons/cog-icon';\nimport EllipsisVIcon from '@patternfly/react-icons/dist/esm/icons/ellipsis-v-icon';\nimport imgAvatar from '@patternfly/react-core/src/components/Avatar/examples/avatarImg.svg';\nconst pageData = {\n  \"id\": \"Menu toggle\",\n  \"section\": \"components\",\n  \"source\": \"react\",\n  \"slug\": \"/components/menu-toggle/react\",\n  \"sourceLink\": \"https://github.com/patternfly/patternfly-react/blob/main/packages/docs/packages/react-core/src/components/MenuToggle/examples/MenuToggle.md\",\n  \"propComponents\": [\n    {\n      \"name\": \"MenuToggle\",\n      \"description\": \"\",\n      \"props\": [\n        {\n          \"name\": \"badge\",\n          \"type\": \"BadgeProps | React.ReactNode\",\n          \"description\": \"Optional badge rendered inside the toggle, after the children content\"\n        },\n        {\n          \"name\": \"children\",\n          \"type\": \"React.ReactNode\",\n          \"description\": \"Content rendered inside the toggle\"\n        },\n        {\n          \"name\": \"className\",\n          \"type\": \"string\",\n          \"description\": \"Additional classes added to the toggle\"\n        },\n        {\n          \"name\": \"icon\",\n          \"type\": \"React.ReactNode\",\n          \"description\": \"Optional icon rendered inside the toggle, before the children content\"\n        },\n        {\n          \"name\": \"innerRef\",\n          \"type\": \"React.Ref<HTMLButtonElement>\",\n          \"description\": \"Forwarded ref\"\n        },\n        {\n          \"name\": \"isDisabled\",\n          \"type\": \"boolean\",\n          \"description\": \"Flag indicating the toggle is disabled\"\n        },\n        {\n          \"name\": \"isExpanded\",\n          \"type\": \"boolean\",\n          \"description\": \"Flag indicating the toggle has expanded styling\"\n        },\n        {\n          \"name\": \"isFullHeight\",\n          \"type\": \"boolean\",\n          \"description\": \"Flag indicating the toggle is full height\"\n        },\n        {\n          \"name\": \"isFullWidth\",\n          \"type\": \"boolean\",\n          \"description\": \"Flag indicating the toggle takes up the full width of its parent\"\n        },\n        {\n          \"name\": \"variant\",\n          \"type\": \"'default' | 'plain' | 'primary' | 'plainText' | 'secondary'\",\n          \"description\": \"Variant styles of the menu toggle\"\n        }\n      ]\n    }\n  ],\n  \"beta\": true,\n  \"cssPrefix\": [\n    \"pf-c-menu-toggle\"\n  ],\n  \"examples\": [\n    \"Collapsed\",\n    \"Expanded\",\n    \"Disabled\",\n    \"Count\",\n    \"Primary\",\n    \"Secondary\",\n    \"Plain\",\n    \"Plain with text\",\n    \"With icon/image and text\",\n    \"With avatar and text\",\n    \"Full height\",\n    \"Full width\"\n  ]\n};\npageData.liveContext = {\n  CogIcon,\n  EllipsisVIcon,\n  imgAvatar\n};\npageData.examples = {\n  'Collapsed': props => \n    <Example {...pageData} {...props} {...{\"code\":\"import React from 'react';\\nimport { MenuToggle } from '@patternfly/react-core';\\n\\nconst Collapsed = () => <MenuToggle>Collapsed</MenuToggle>\",\"title\":\"Collapsed\",\"lang\":\"ts\"}}>\n      \n    </Example>,\n  'Expanded': props => \n    <Example {...pageData} {...props} {...{\"code\":\"import React from 'react';\\nimport { MenuToggle } from '@patternfly/react-core';\\n\\nconst Expanded = () => <MenuToggle isExpanded>Expanded</MenuToggle>;\",\"title\":\"Expanded\",\"lang\":\"ts\"}}>\n      \n    </Example>,\n  'Disabled': props => \n    <Example {...pageData} {...props} {...{\"code\":\"import React from 'react';\\nimport { MenuToggle } from '@patternfly/react-core';\\n\\nconst Disabled = () => <MenuToggle isDisabled>Disabled</MenuToggle>\",\"title\":\"Disabled\",\"lang\":\"ts\"}}>\n      \n    </Example>,\n  'Count': props => \n    <Example {...pageData} {...props} {...{\"code\":\"import React from 'react';\\nimport { MenuToggle, Badge } from '@patternfly/react-core';\\n\\nconst Count = () => <MenuToggle badge={<Badge>4 selected</Badge>}>Count</MenuToggle>\",\"title\":\"Count\",\"lang\":\"ts\"}}>\n      \n    </Example>,\n  'Primary': props => \n    <Example {...pageData} {...props} {...{\"code\":\"import React from 'react';\\nimport { MenuToggle } from '@patternfly/react-core';\\nimport CogIcon from '@patternfly/react-icons/dist/esm/icons/cog-icon';\\n\\nconst Primary = () => (\\n  <React.Fragment>\\n    <MenuToggle variant=\\\"primary\\\">Collapsed</MenuToggle>{' '}\\n    <MenuToggle variant=\\\"primary\\\" icon={<CogIcon />}>\\n      Icon\\n    </MenuToggle>{' '}\\n    <MenuToggle variant=\\\"primary\\\" isExpanded>\\n      Expanded\\n    </MenuToggle>{' '}\\n    <MenuToggle variant=\\\"primary\\\" isDisabled>\\n      Disabled\\n    </MenuToggle>\\n  </React.Fragment>\\n)\",\"title\":\"Primary\",\"lang\":\"ts\"}}>\n      \n    </Example>,\n  'Secondary': props => \n    <Example {...pageData} {...props} {...{\"code\":\"import React from 'react';\\nimport { MenuToggle } from '@patternfly/react-core';\\nimport CogIcon from '@patternfly/react-icons/dist/esm/icons/cog-icon';\\n\\nconst Secondary = () => (\\n  <React.Fragment>\\n    <MenuToggle variant=\\\"secondary\\\">Collapsed</MenuToggle>{' '}\\n      <MenuToggle variant=\\\"secondary\\\" icon={<CogIcon />}>\\n      Icon\\n    </MenuToggle>{' '}\\n    <MenuToggle variant=\\\"secondary\\\" isExpanded>\\n      Expanded\\n    </MenuToggle>{' '}\\n    <MenuToggle variant=\\\"secondary\\\" isDisabled>\\n      Disabled\\n    </MenuToggle>\\n  </React.Fragment>\\n)\",\"title\":\"Secondary\",\"lang\":\"ts\"}}>\n      \n    </Example>,\n  'Plain': props => \n    <Example {...pageData} {...props} {...{\"code\":\"import React from 'react';\\nimport { MenuToggle } from '@patternfly/react-core';\\nimport EllipsisVIcon from '@patternfly/react-icons/dist/esm/icons/ellipsis-v-icon';\\n\\nconst Plain = () => (\\n  <React.Fragment>\\n    <MenuToggle variant=\\\"plain\\\" aria-label=\\\"plain kebab\\\">\\n      <EllipsisVIcon />\\n    </MenuToggle>\\n    <MenuToggle variant=\\\"plain\\\" isExpanded aria-label=\\\"plain expanded kebab\\\">\\n      <EllipsisVIcon />\\n    </MenuToggle>\\n    <MenuToggle variant=\\\"plain\\\" isDisabled aria-label=\\\"disabled kebab\\\">\\n      <EllipsisVIcon />\\n    </MenuToggle>\\n  </React.Fragment>\\n)\",\"title\":\"Plain\",\"lang\":\"ts\"}}>\n      \n    </Example>,\n  'Plain with text': props => \n    <Example {...pageData} {...props} {...{\"code\":\"import React from 'react';\\nimport { MenuToggle } from '@patternfly/react-core';\\n\\nconst PlainWithText = () => (\\n  <React.Fragment>\\n    <MenuToggle variant=\\\"plainText\\\" isDisabled aria-label=\\\"Disabled plain menu toggle\\\">\\n      Disabled\\n    </MenuToggle>\\n    &nbsp;\\n    <MenuToggle variant=\\\"plainText\\\" aria-label=\\\"Plain menu toggle\\\">\\n      Custom text\\n    </MenuToggle>\\n    <MenuToggle variant=\\\"plainText\\\" isExpanded aria-label=\\\"Expanded plain menu toggle\\\">\\n      Custom text (expanded)\\n    </MenuToggle>\\n  </React.Fragment>\\n)\",\"title\":\"Plain with text\",\"lang\":\"ts\"}}>\n      \n    </Example>,\n  'With icon/image and text': props => \n    <Example {...pageData} {...props} {...{\"code\":\"import React from 'react';\\nimport { MenuToggle, Avatar } from '@patternfly/react-core';\\nimport CogIcon from '@patternfly/react-icons/dist/esm/icons/cog-icon';\\n\\nconst WithIconimageAndText = () => (\\n  <React.Fragment>\\n    <MenuToggle icon={<CogIcon />} variant=\\\"secondary\\\">Icon</MenuToggle>{' '}\\n    <MenuToggle icon={<CogIcon />} variant=\\\"secondary\\\" isDisabled>Icon</MenuToggle>\\n  </React.Fragment>\\n)\",\"title\":\"With icon/image and text\",\"lang\":\"ts\"}}>\n      \n    </Example>,\n  'With avatar and text': props => \n    <Example {...pageData} {...props} {...{\"code\":\"import React from 'react';\\nimport { MenuToggle, Avatar } from '@patternfly/react-core';\\nimport imgAvatar from '@patternfly/react-core/src/components/Avatar/examples/avatarImg.svg';\\n\\nconst WithAvatarAndText = () => (\\n  <React.Fragment>\\n    <MenuToggle icon={<Avatar src={imgAvatar} alt=\\\"avatar\\\" />}>Ned Username</MenuToggle>{' '}\\n    <MenuToggle icon={<Avatar src={imgAvatar} alt=\\\"avatar\\\" />} isExpanded>Ned Username</MenuToggle>{' '}\\n    <MenuToggle icon={<Avatar src={imgAvatar} alt=\\\"avatar\\\" />} isDisabled>Ned Username</MenuToggle>\\n  </React.Fragment>\\n)\",\"title\":\"With avatar and text\",\"lang\":\"ts\"}}>\n      \n    </Example>,\n  'Full height': props => \n    <Example {...pageData} {...props} {...{\"code\":\"import React from 'react';\\nimport { MenuToggle } from '@patternfly/react-core';\\n\\nconst FullHeight = () => (\\n  <div style={{ height: \\\"80px\\\" }}>\\n    <MenuToggle isFullHeight aria-label=\\\"Full height menu toggle\\\">\\n      Full height\\n    </MenuToggle>\\n  </div>\\n)\",\"title\":\"Full height\",\"lang\":\"ts\"}}>\n      \n    </Example>,\n  'Full width': props => \n    <Example {...pageData} {...props} {...{\"code\":\"import React from 'react';\\nimport { MenuToggle } from '@patternfly/react-core';\\n\\nconst fullWidth: React.FunctionComponent = () => {\\n  return (\\n    <MenuToggle isFullWidth aria-label=\\\"Full width menu toggle\\\" >\\n      Full width \\n    </MenuToggle>\\n  );\\n}\",\"title\":\"Full width\",\"lang\":\"ts\"}}>\n      \n    </Example>\n};\n\nconst Component = () => (\n  <React.Fragment>\n    <AutoLinkHeader {...{\"id\":\"examples\",\"size\":\"h2\",\"className\":\"ws-title ws-h2\"}}>\n      {`Examples`}\n    </AutoLinkHeader>\n    {React.createElement(pageData.examples[\"Collapsed\"])}\n    {React.createElement(pageData.examples[\"Expanded\"])}\n    {React.createElement(pageData.examples[\"Disabled\"])}\n    {React.createElement(pageData.examples[\"Count\"])}\n    {React.createElement(pageData.examples[\"Primary\"])}\n    {React.createElement(pageData.examples[\"Secondary\"])}\n    {React.createElement(pageData.examples[\"Plain\"])}\n    {React.createElement(pageData.examples[\"Plain with text\"])}\n    {React.createElement(pageData.examples[\"With icon/image and text\"])}\n    {React.createElement(pageData.examples[\"With avatar and text\"])}\n    {React.createElement(pageData.examples[\"Full height\"])}\n    {React.createElement(pageData.examples[\"Full width\"])}\n  </React.Fragment>\n);\nComponent.displayName = 'ComponentsMenuToggleReactDocs';\nComponent.pageData = pageData;\n\nexport default Component;\n"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,EAAyBC,OAAzB,EAAkCC,IAAI,IAAIC,mBAA1C,QAAqE,iCAArE;AACA,OAAO,qGAAP;AACA,OAAOC,OAAP,MAAoB,iDAApB;AACA,OAAOC,aAAP,MAA0B,wDAA1B;AACA,OAAOC,SAAP,MAAsB,qEAAtB;AACA,IAAMC,QAAQ,GAAG;EACf,MAAM,aADS;EAEf,WAAW,YAFI;EAGf,UAAU,OAHK;EAIf,QAAQ,+BAJO;EAKf,cAAc,6IALC;EAMf,kBAAkB,CAChB;IACE,QAAQ,YADV;IAEE,eAAe,EAFjB;IAGE,SAAS,CACP;MACE,QAAQ,OADV;MAEE,QAAQ,8BAFV;MAGE,eAAe;IAHjB,CADO,EAMP;MACE,QAAQ,UADV;MAEE,QAAQ,iBAFV;MAGE,eAAe;IAHjB,CANO,EAWP;MACE,QAAQ,WADV;MAEE,QAAQ,QAFV;MAGE,eAAe;IAHjB,CAXO,EAgBP;MACE,QAAQ,MADV;MAEE,QAAQ,iBAFV;MAGE,eAAe;IAHjB,CAhBO,EAqBP;MACE,QAAQ,UADV;MAEE,QAAQ,8BAFV;MAGE,eAAe;IAHjB,CArBO,EA0BP;MACE,QAAQ,YADV;MAEE,QAAQ,SAFV;MAGE,eAAe;IAHjB,CA1BO,EA+BP;MACE,QAAQ,YADV;MAEE,QAAQ,SAFV;MAGE,eAAe;IAHjB,CA/BO,EAoCP;MACE,QAAQ,cADV;MAEE,QAAQ,SAFV;MAGE,eAAe;IAHjB,CApCO,EAyCP;MACE,QAAQ,aADV;MAEE,QAAQ,SAFV;MAGE,eAAe;IAHjB,CAzCO,EA8CP;MACE,QAAQ,SADV;MAEE,QAAQ,6DAFV;MAGE,eAAe;IAHjB,CA9CO;EAHX,CADgB,CANH;EAgEf,QAAQ,IAhEO;EAiEf,aAAa,CACX,kBADW,CAjEE;EAoEf,YAAY,CACV,WADU,EAEV,UAFU,EAGV,UAHU,EAIV,OAJU,EAKV,SALU,EAMV,WANU,EAOV,OAPU,EAQV,iBARU,EASV,0BATU,EAUV,sBAVU,EAWV,aAXU,EAYV,YAZU;AApEG,CAAjB;AAmFAA,QAAQ,CAACC,WAAT,GAAuB;EACrBJ,OAAO,EAAPA,OADqB;EAErBC,aAAa,EAAbA,aAFqB;EAGrBC,SAAS,EAATA;AAHqB,CAAvB;AAKAC,QAAQ,CAACE,QAAT,GAAoB;EAClB,aAAa,mBAAAC,KAAK;IAAA,oBAChB,oBAAC,OAAD,eAAaH,QAAb,EAA2BG,KAA3B;MAAuC,QAAO,gJAA9C;MAA+L,SAAQ,WAAvM;MAAmN,QAAO;IAA1N,GADgB;EAAA,CADA;EAKlB,YAAY,kBAAAA,KAAK;IAAA,oBACf,oBAAC,OAAD,eAAaH,QAAb,EAA2BG,KAA3B;MAAuC,QAAO,0JAA9C;MAAyM,SAAQ,UAAjN;MAA4N,QAAO;IAAnO,GADe;EAAA,CALC;EASlB,YAAY,kBAAAA,KAAK;IAAA,oBACf,oBAAC,OAAD,eAAaH,QAAb,EAA2BG,KAA3B;MAAuC,QAAO,yJAA9C;MAAwM,SAAQ,UAAhN;MAA2N,QAAO;IAAlO,GADe;EAAA,CATC;EAalB,SAAS,eAAAA,KAAK;IAAA,oBACZ,oBAAC,OAAD,eAAaH,QAAb,EAA2BG,KAA3B;MAAuC,QAAO,iLAA9C;MAAgO,SAAQ,OAAxO;MAAgP,QAAO;IAAvP,GADY;EAAA,CAbI;EAiBlB,WAAW,iBAAAA,KAAK;IAAA,oBACd,oBAAC,OAAD,eAAaH,QAAb,EAA2BG,KAA3B;MAAuC,QAAO,4iBAA9C;MAA2lB,SAAQ,SAAnmB;MAA6mB,QAAO;IAApnB,GADc;EAAA,CAjBE;EAqBlB,aAAa,mBAAAA,KAAK;IAAA,oBAChB,oBAAC,OAAD,eAAaH,QAAb,EAA2BG,KAA3B;MAAuC,QAAO,wjBAA9C;MAAumB,SAAQ,WAA/mB;MAA2nB,QAAO;IAAloB,GADgB;EAAA,CArBA;EAyBlB,SAAS,eAAAA,KAAK;IAAA,oBACZ,oBAAC,OAAD,eAAaH,QAAb,EAA2BG,KAA3B;MAAuC,QAAO,+kBAA9C;MAA8nB,SAAQ,OAAtoB;MAA8oB,QAAO;IAArpB,GADY;EAAA,CAzBI;EA6BlB,mBAAmB,uBAAAA,KAAK;IAAA,oBACtB,oBAAC,OAAD,eAAaH,QAAb,EAA2BG,KAA3B;MAAuC,QAAO,wiBAA9C;MAAulB,SAAQ,iBAA/lB;MAAinB,QAAO;IAAxnB,GADsB;EAAA,CA7BN;EAiClB,4BAA4B,8BAAAA,KAAK;IAAA,oBAC/B,oBAAC,OAAD,eAAaH,QAAb,EAA2BG,KAA3B;MAAuC,QAAO,8ZAA9C;MAA6c,SAAQ,0BAArd;MAAgf,QAAO;IAAvf,GAD+B;EAAA,CAjCf;EAqClB,wBAAwB,2BAAAA,KAAK;IAAA,oBAC3B,oBAAC,OAAD,eAAaH,QAAb,EAA2BG,KAA3B;MAAuC,QAAO,6jBAA9C;MAA4mB,SAAQ,sBAApnB;MAA2oB,QAAO;IAAlpB,GAD2B;EAAA,CArCX;EAyClB,eAAe,oBAAAA,KAAK;IAAA,oBAClB,oBAAC,OAAD,eAAaH,QAAb,EAA2BG,KAA3B;MAAuC,QAAO,+QAA9C;MAA8T,SAAQ,aAAtU;MAAoV,QAAO;IAA3V,GADkB;EAAA,CAzCF;EA6ClB,cAAc,mBAAAA,KAAK;IAAA,oBACjB,oBAAC,OAAD,eAAaH,QAAb,EAA2BG,KAA3B;MAAuC,QAAO,wQAA9C;MAAuT,SAAQ,YAA/T;MAA4U,QAAO;IAAnV,GADiB;EAAA;AA7CD,CAApB;;AAmDA,IAAMC,SAAS,GAAG,SAAZA,SAAY;EAAA,oBAChB,oBAAC,KAAD,CAAO,QAAP,qBACE,oBAAC,cAAD;IAAqB,MAAK,UAA1B;IAAqC,QAAO,IAA5C;IAAiD,aAAY;EAA7D,cADF,EAIGZ,KAAK,CAACa,aAAN,CAAoBL,QAAQ,CAACE,QAAT,CAAkB,WAAlB,CAApB,CAJH,EAKGV,KAAK,CAACa,aAAN,CAAoBL,QAAQ,CAACE,QAAT,CAAkB,UAAlB,CAApB,CALH,EAMGV,KAAK,CAACa,aAAN,CAAoBL,QAAQ,CAACE,QAAT,CAAkB,UAAlB,CAApB,CANH,EAOGV,KAAK,CAACa,aAAN,CAAoBL,QAAQ,CAACE,QAAT,CAAkB,OAAlB,CAApB,CAPH,EAQGV,KAAK,CAACa,aAAN,CAAoBL,QAAQ,CAACE,QAAT,CAAkB,SAAlB,CAApB,CARH,EASGV,KAAK,CAACa,aAAN,CAAoBL,QAAQ,CAACE,QAAT,CAAkB,WAAlB,CAApB,CATH,EAUGV,KAAK,CAACa,aAAN,CAAoBL,QAAQ,CAACE,QAAT,CAAkB,OAAlB,CAApB,CAVH,EAWGV,KAAK,CAACa,aAAN,CAAoBL,QAAQ,CAACE,QAAT,CAAkB,iBAAlB,CAApB,CAXH,EAYGV,KAAK,CAACa,aAAN,CAAoBL,QAAQ,CAACE,QAAT,CAAkB,0BAAlB,CAApB,CAZH,EAaGV,KAAK,CAACa,aAAN,CAAoBL,QAAQ,CAACE,QAAT,CAAkB,sBAAlB,CAApB,CAbH,EAcGV,KAAK,CAACa,aAAN,CAAoBL,QAAQ,CAACE,QAAT,CAAkB,aAAlB,CAApB,CAdH,EAeGV,KAAK,CAACa,aAAN,CAAoBL,QAAQ,CAACE,QAAT,CAAkB,YAAlB,CAApB,CAfH,CADgB;AAAA,CAAlB;;AAmBAE,SAAS,CAACE,WAAV,GAAwB,+BAAxB;AACAF,SAAS,CAACJ,QAAV,GAAqBA,QAArB;AAEA,eAAeI,SAAf"},"metadata":{},"sourceType":"module"}