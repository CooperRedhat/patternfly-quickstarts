{"ast":null,"code":"function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport { AutoLinkHeader, Example, Link as PatternflyThemeLink } from 'theme-patternfly-org/components';\nimport BarsIcon from '@patternfly/react-icons/dist/js/icons/bars-icon';\nimport { Link } from '@reach/router';\nimport pfIcon from '../../../../node_modules/@patternfly/react-core/src/components/Masthead/examples/./pf-logo-small.svg';\nvar pageData = {\n  \"id\": \"Masthead\",\n  \"section\": \"components\",\n  \"source\": \"react\",\n  \"slug\": \"/components/masthead/react\",\n  \"sourceLink\": \"https://github.com/patternfly/patternfly-react/blob/main/packages/docs/packages/react-core/src/components/Masthead/examples/Masthead.md\",\n  \"propComponents\": [{\n    \"name\": \"Masthead\",\n    \"description\": \"\",\n    \"props\": [{\n      \"name\": \"backgroundColor\",\n      \"type\": \"'dark' | 'light' | 'light200'\",\n      \"description\": \"Background theme color of the masthead\",\n      \"defaultValue\": \"'dark'\"\n    }, {\n      \"name\": \"children\",\n      \"type\": \"React.ReactNode\",\n      \"description\": \"Content rendered inside of the masthead\"\n    }, {\n      \"name\": \"className\",\n      \"type\": \"string\",\n      \"description\": \"Additional classes added to the masthead\"\n    }, {\n      \"name\": \"display\",\n      \"type\": \"{\\n  default?: 'inline' | 'stack';\\n  sm?: 'inline' | 'stack';\\n  md?: 'inline' | 'stack';\\n  lg?: 'inline' | 'stack';\\n  xl?: 'inline' | 'stack';\\n  '2xl'?: 'inline' | 'stack';\\n}\",\n      \"description\": \"Display type at various breakpoints\",\n      \"defaultValue\": \"{\\n  md: 'inline'\\n}\"\n    }, {\n      \"name\": \"inset\",\n      \"type\": \"{\\n  default?: 'insetNone' | 'insetXs' | 'insetSm' | 'insetMd' | 'insetLg' | 'insetXl' | 'inset2xl' | 'inset3xl';\\n  sm?: 'insetNone' | 'insetXs' | 'insetSm' | 'insetMd' | 'insetLg' | 'insetXl' | 'inset2xl' | 'inset3xl';\\n  md?: 'insetNone' | 'insetXs' | 'insetSm' | 'insetMd' | 'insetLg' | 'insetXl' | 'inset2xl' | 'inset3xl';\\n  lg?: 'insetNone' | 'insetXs' | 'insetSm' | 'insetMd' | 'insetLg' | 'insetXl' | 'inset2xl' | 'inset3xl';\\n  xl?: 'insetNone' | 'insetXs' | 'insetSm' | 'insetMd' | 'insetLg' | 'insetXl' | 'inset2xl' | 'inset3xl';\\n  '2xl'?: 'insetNone' | 'insetXs' | 'insetSm' | 'insetMd' | 'insetLg' | 'insetXl' | 'inset2xl' | 'inset3xl';\\n}\",\n      \"description\": \"Insets at various breakpoints\"\n    }]\n  }, {\n    \"name\": \"MastheadToggle\",\n    \"description\": \"\",\n    \"props\": [{\n      \"name\": \"children\",\n      \"type\": \"React.ReactNode\",\n      \"description\": \"Content rendered inside of the masthead toggle.\"\n    }, {\n      \"name\": \"className\",\n      \"type\": \"string\",\n      \"description\": \"Additional classes added to the masthead toggle.\"\n    }]\n  }, {\n    \"name\": \"MastheadMain\",\n    \"description\": \"\",\n    \"props\": [{\n      \"name\": \"children\",\n      \"type\": \"React.ReactNode\",\n      \"description\": \"Content rendered inside of the masthead main block.\"\n    }, {\n      \"name\": \"className\",\n      \"type\": \"string\",\n      \"description\": \"Additional classes added to the masthead main.\"\n    }]\n  }, {\n    \"name\": \"MastheadBrand\",\n    \"description\": \"\",\n    \"props\": [{\n      \"name\": \"children\",\n      \"type\": \"React.ReactNode\",\n      \"description\": \"Content rendered inside of the masthead brand.\"\n    }, {\n      \"name\": \"className\",\n      \"type\": \"string\",\n      \"description\": \"Additional classes added to the masthead brand.\"\n    }, {\n      \"name\": \"component\",\n      \"type\": \"React.ElementType<any> | React.ComponentType<any>\",\n      \"description\": \"Component type of the masthead brand.\",\n      \"defaultValue\": \"'a'\"\n    }]\n  }, {\n    \"name\": \"MastheadContent\",\n    \"description\": \"\",\n    \"props\": [{\n      \"name\": \"children\",\n      \"type\": \"React.ReactNode\",\n      \"description\": \"Content rendered inside of the masthead content block.\"\n    }, {\n      \"name\": \"className\",\n      \"type\": \"string\",\n      \"description\": \"Additional classes added to the masthead content.\"\n    }]\n  }],\n  \"beta\": true,\n  \"cssPrefix\": [\"pf-c-masthead\"],\n  \"examples\": [\"Basic\", \"Basic with mixed content\", \"Display inline\", \"Display stack\", \"Display stack, display inline responsive\", \"Light variant\", \"Light 200 variant\", \"Inset\", \"With icon router link\"]\n};\npageData.liveContext = {\n  BarsIcon: BarsIcon,\n  Link: Link,\n  pfIcon: pfIcon\n};\npageData.examples = {\n  'Basic': function Basic(props) {\n    return /*#__PURE__*/React.createElement(Example, _extends({}, pageData, props, {\n      \"code\": \"import React from 'react';\\nimport { Masthead, MastheadToggle, MastheadMain, MastheadBrand, MastheadContent, Button } from '@patternfly/react-core';\\nimport BarsIcon from '@patternfly/react-icons/dist/js/icons/bars-icon';\\n\\nconst Basic = () => (\\n  <Masthead id=\\\"basic\\\">\\n    <MastheadToggle>\\n      <Button variant=\\\"plain\\\" onClick={() => {}} aria-label=\\\"Global navigation\\\">\\n        <BarsIcon />\\n      </Button>\\n    </MastheadToggle>\\n    <MastheadMain>\\n      <MastheadBrand>Logo</MastheadBrand>\\n    </MastheadMain>\\n    <MastheadContent>\\n      <span>Content</span>\\n    </MastheadContent>\\n  </Masthead>\\n)\",\n      \"title\": \"Basic\",\n      \"lang\": \"ts\"\n    }));\n  },\n  'Basic with mixed content': function BasicWithMixedContent(props) {\n    return /*#__PURE__*/React.createElement(Example, _extends({}, pageData, props, {\n      \"code\": \"import React from 'react';\\nimport {\\n  Masthead,\\n  MastheadToggle,\\n  MastheadMain,\\n  MastheadBrand,\\n  MastheadContent,\\n  Button,\\n  Flex,\\n  FlexItem\\n} from '@patternfly/react-core';\\nimport BarsIcon from '@patternfly/react-icons/dist/js/icons/bars-icon';\\n\\nconst BasicWithMixedContent = () => (\\n  <Masthead id=\\\"basic-mixed\\\">\\n    <MastheadToggle>\\n      <Button variant=\\\"plain\\\" onClick={() => {}} aria-label=\\\"Global navigation\\\">\\n        <BarsIcon />\\n      </Button>\\n    </MastheadToggle>\\n    <MastheadMain>\\n      <MastheadBrand>Logo</MastheadBrand>\\n    </MastheadMain>\\n    <MastheadContent>\\n      <Flex>\\n        <span>Testing text color</span>\\n        <Button>testing</Button>\\n        <FlexItem alignSelf={{ default: 'alignSelfFlexEnd' }}>\\n          <Button>testing</Button>\\n        </FlexItem>\\n      </Flex>\\n    </MastheadContent>\\n  </Masthead>\\n)\",\n      \"title\": \"Basic with mixed content\",\n      \"lang\": \"ts\"\n    }));\n  },\n  'Display inline': function DisplayInline(props) {\n    return /*#__PURE__*/React.createElement(Example, _extends({}, pageData, props, {\n      \"code\": \"import React from 'react';\\nimport { Masthead, MastheadToggle, MastheadMain, MastheadBrand, MastheadContent, Button } from '@patternfly/react-core';\\nimport BarsIcon from '@patternfly/react-icons/dist/js/icons/bars-icon';\\n\\nconst DisplayInline = () => (\\n  <Masthead id=\\\"inline-masthead\\\" display={{ default: 'inline' }}>\\n    <MastheadToggle>\\n      <Button variant=\\\"plain\\\" onClick={() => {}} aria-label=\\\"Global navigation\\\">\\n        <BarsIcon />\\n      </Button>\\n    </MastheadToggle>\\n    <MastheadMain>\\n      <MastheadBrand>Logo</MastheadBrand>\\n    </MastheadMain>\\n    <MastheadContent>\\n      <span>Content</span>\\n    </MastheadContent>\\n  </Masthead>\\n)\",\n      \"title\": \"Display inline\",\n      \"lang\": \"ts\"\n    }));\n  },\n  'Display stack': function DisplayStack(props) {\n    return /*#__PURE__*/React.createElement(Example, _extends({}, pageData, props, {\n      \"code\": \"import React from 'react';\\nimport { Masthead, MastheadToggle, MastheadMain, MastheadBrand, MastheadContent, Button } from '@patternfly/react-core';\\nimport BarsIcon from '@patternfly/react-icons/dist/js/icons/bars-icon';\\n\\nconst DisplayStack = () => (\\n  <Masthead id=\\\"stack-masthead\\\" display={{ default: 'stack' }}>\\n    <MastheadToggle>\\n      <Button variant=\\\"plain\\\" onClick={() => {}} aria-label=\\\"Global navigation\\\">\\n        <BarsIcon />\\n      </Button>\\n    </MastheadToggle>\\n    <MastheadMain>\\n      <MastheadBrand>Logo</MastheadBrand>\\n    </MastheadMain>\\n    <MastheadContent>\\n      <span>Content</span>\\n    </MastheadContent>\\n  </Masthead>\\n)\",\n      \"title\": \"Display stack\",\n      \"lang\": \"ts\"\n    }));\n  },\n  'Display stack, display inline responsive': function DisplayStackDisplayInlineResponsive(props) {\n    return /*#__PURE__*/React.createElement(Example, _extends({}, pageData, props, {\n      \"code\": \"import React from 'react';\\nimport { Masthead, MastheadToggle, MastheadMain, MastheadBrand, MastheadContent, Button } from '@patternfly/react-core';\\nimport BarsIcon from '@patternfly/react-icons/dist/js/icons/bars-icon';\\n\\nconst DisplayStackDisplayInlineResponsive = () => (\\n  <Masthead id=\\\"stack-masthead\\\" display={{ default: 'inline', lg: 'stack', '2xl': 'inline' }}>\\n    <MastheadToggle>\\n      <Button variant=\\\"plain\\\" onClick={() => {}} aria-label=\\\"Global navigation\\\">\\n        <BarsIcon />\\n      </Button>\\n    </MastheadToggle>\\n    <MastheadMain>\\n      <MastheadBrand>Logo</MastheadBrand>\\n    </MastheadMain>\\n    <MastheadContent>\\n      <span>Content</span>\\n    </MastheadContent>\\n  </Masthead>\\n)\",\n      \"title\": \"Display stack, display inline responsive\",\n      \"lang\": \"ts\"\n    }));\n  },\n  'Light variant': function LightVariant(props) {\n    return /*#__PURE__*/React.createElement(Example, _extends({}, pageData, props, {\n      \"code\": \"import React from 'react';\\nimport { Masthead, MastheadToggle, MastheadMain, MastheadBrand, MastheadContent, Button } from '@patternfly/react-core';\\nimport BarsIcon from '@patternfly/react-icons/dist/js/icons/bars-icon';\\n\\nconst LightVariant = () => (\\n  <Masthead id=\\\"light-masthead\\\" backgroundColor=\\\"light\\\">\\n    <MastheadToggle>\\n      <Button variant=\\\"plain\\\" onClick={() => {}} aria-label=\\\"Global navigation\\\">\\n        <BarsIcon />\\n      </Button>\\n    </MastheadToggle>\\n    <MastheadMain>\\n      <MastheadBrand>Logo</MastheadBrand>\\n    </MastheadMain>\\n    <MastheadContent>\\n      <span>Content</span>\\n    </MastheadContent>\\n  </Masthead>\\n)\",\n      \"title\": \"Light variant\",\n      \"lang\": \"ts\"\n    }));\n  },\n  'Light 200 variant': function Light200Variant(props) {\n    return /*#__PURE__*/React.createElement(Example, _extends({}, pageData, props, {\n      \"code\": \"import React from 'react';\\nimport { Masthead, MastheadToggle, MastheadMain, MastheadBrand, MastheadContent, Button } from '@patternfly/react-core';\\nimport BarsIcon from '@patternfly/react-icons/dist/js/icons/bars-icon';\\n\\nconst Light200Variant = () => (\\n  <Masthead id=\\\"light200-masthead\\\" backgroundColor=\\\"light200\\\">\\n    <MastheadToggle>\\n      <Button variant=\\\"plain\\\" onClick={() => {}} aria-label=\\\"Global navigation\\\">\\n        <BarsIcon />\\n      </Button>\\n    </MastheadToggle>\\n    <MastheadMain>\\n      <MastheadBrand>Logo</MastheadBrand>\\n    </MastheadMain>\\n    <MastheadContent>\\n      <span>Content</span>\\n    </MastheadContent>\\n  </Masthead>\\n)\",\n      \"title\": \"Light 200 variant\",\n      \"lang\": \"ts\"\n    }));\n  },\n  'Inset': function Inset(props) {\n    return /*#__PURE__*/React.createElement(Example, _extends({}, pageData, props, {\n      \"code\": \"import React from 'react';\\nimport { Masthead, MastheadToggle, MastheadMain, MastheadBrand, MastheadContent, Button } from '@patternfly/react-core';\\nimport BarsIcon from '@patternfly/react-icons/dist/js/icons/bars-icon';\\n\\nconst Inset = () => (\\n  <Masthead id=\\\"inset-masthead\\\" inset={{ default: 'insetSm' }}>\\n    <MastheadToggle>\\n      <Button variant=\\\"plain\\\" onClick={() => {}} aria-label=\\\"Global navigation\\\">\\n        <BarsIcon />\\n      </Button>\\n    </MastheadToggle>\\n    <MastheadMain>\\n      <MastheadBrand>Logo</MastheadBrand>\\n    </MastheadMain>\\n    <MastheadContent>\\n      <span>Content</span>\\n    </MastheadContent>\\n  </Masthead>\\n)\",\n      \"title\": \"Inset\",\n      \"lang\": \"ts\"\n    }));\n  },\n  'With icon router link': function WithIconRouterLink(props) {\n    return /*#__PURE__*/React.createElement(Example, _extends({}, pageData, props, {\n      \"code\": \"import React from 'react';\\nimport { Masthead, MastheadToggle, MastheadMain, MastheadBrand, MastheadContent, Button } from '@patternfly/react-core';\\nimport BarsIcon from '@patternfly/react-icons/dist/js/icons/bars-icon';\\nimport { Link } from '@reach/router';\\nimport pfIcon from './pf-logo-small.svg';\\n\\nconst WithIconRouterLink = () => (\\n  <Masthead id=\\\"basic\\\">\\n    <MastheadToggle>\\n      <Button variant=\\\"plain\\\" onClick={() => {}} aria-label=\\\"Global navigation\\\">\\n        <BarsIcon />\\n      </Button>\\n    </MastheadToggle>\\n    <MastheadMain>\\n      <MastheadBrand component={props => <Link {...props} to=\\\"#\\\" />}>\\n        <img src={pfIcon} alt=\\\"Patterfly Logo\\\" />\\n      </MastheadBrand>\\n    </MastheadMain>\\n    <MastheadContent>\\n      <span>Content</span>\\n    </MastheadContent>\\n  </Masthead>\\n)\",\n      \"title\": \"With icon router link\",\n      \"lang\": \"ts\"\n    }));\n  }\n};\n\nvar Component = function Component() {\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"p\", {\n    \"className\": \"ws-p\"\n  }, /*#__PURE__*/React.createElement(\"code\", {\n    \"className\": \"ws-code\"\n  }, \"Masthead\"), \" should contain the following components to maintain proper layout and formatting: \", /*#__PURE__*/React.createElement(\"code\", {\n    \"className\": \"ws-code\"\n  }, \"MastheadToggle\"), \", \", /*#__PURE__*/React.createElement(\"code\", {\n    \"className\": \"ws-code\"\n  }, \"MastheadMain\"), \", and \", /*#__PURE__*/React.createElement(\"code\", {\n    \"className\": \"ws-code\"\n  }, \"MastheadContent\"), \".\"), /*#__PURE__*/React.createElement(\"p\", {\n    \"className\": \"ws-p\"\n  }, /*#__PURE__*/React.createElement(\"code\", {\n    \"className\": \"ws-code\"\n  }, \"MastheadMain\"), \" represents the smaller area taken up by a logo, and will typically contain a \", /*#__PURE__*/React.createElement(\"code\", {\n    \"className\": \"ws-code\"\n  }, \"MastheadBrand\"), \". \", /*#__PURE__*/React.createElement(\"code\", {\n    \"className\": \"ws-code\"\n  }, \"MastheadContent\"), \" represents the main portion of the masthead area and will typically contain a \", /*#__PURE__*/React.createElement(\"code\", {\n    \"className\": \"ws-code\"\n  }, \"Toolbar\"), \" or other menu-like content such as \", /*#__PURE__*/React.createElement(\"code\", {\n    \"className\": \"ws-code\"\n  }, \"Dropdown\"), \".\"), /*#__PURE__*/React.createElement(AutoLinkHeader, {\n    \"id\": \"examples\",\n    \"size\": \"h2\",\n    \"className\": \"ws-title ws-h2\"\n  }, \"Examples\"), React.createElement(pageData.examples[\"Basic\"]), React.createElement(pageData.examples[\"Basic with mixed content\"]), React.createElement(pageData.examples[\"Display inline\"]), React.createElement(pageData.examples[\"Display stack\"]), React.createElement(pageData.examples[\"Display stack, display inline responsive\"]), React.createElement(pageData.examples[\"Light variant\"]), React.createElement(pageData.examples[\"Light 200 variant\"]), React.createElement(pageData.examples[\"Inset\"]), React.createElement(pageData.examples[\"With icon router link\"]));\n};\n\nComponent.displayName = 'ComponentsMastheadReactDocs';\nComponent.pageData = pageData;\nexport default Component;","map":{"version":3,"names":["React","AutoLinkHeader","Example","Link","PatternflyThemeLink","BarsIcon","pfIcon","pageData","liveContext","examples","props","Component","createElement","displayName"],"sources":["/Users/jschuler/Code/patternfly-quickstarts/packages/docs/src/generated/components/masthead/react.js"],"sourcesContent":["import React from 'react';\nimport { AutoLinkHeader, Example, Link as PatternflyThemeLink } from 'theme-patternfly-org/components';\nimport BarsIcon from '@patternfly/react-icons/dist/js/icons/bars-icon';\nimport { Link } from '@reach/router';\nimport pfIcon from '../../../../node_modules/@patternfly/react-core/src/components/Masthead/examples/./pf-logo-small.svg';\nconst pageData = {\n  \"id\": \"Masthead\",\n  \"section\": \"components\",\n  \"source\": \"react\",\n  \"slug\": \"/components/masthead/react\",\n  \"sourceLink\": \"https://github.com/patternfly/patternfly-react/blob/main/packages/docs/packages/react-core/src/components/Masthead/examples/Masthead.md\",\n  \"propComponents\": [\n    {\n      \"name\": \"Masthead\",\n      \"description\": \"\",\n      \"props\": [\n        {\n          \"name\": \"backgroundColor\",\n          \"type\": \"'dark' | 'light' | 'light200'\",\n          \"description\": \"Background theme color of the masthead\",\n          \"defaultValue\": \"'dark'\"\n        },\n        {\n          \"name\": \"children\",\n          \"type\": \"React.ReactNode\",\n          \"description\": \"Content rendered inside of the masthead\"\n        },\n        {\n          \"name\": \"className\",\n          \"type\": \"string\",\n          \"description\": \"Additional classes added to the masthead\"\n        },\n        {\n          \"name\": \"display\",\n          \"type\": \"{\\n  default?: 'inline' | 'stack';\\n  sm?: 'inline' | 'stack';\\n  md?: 'inline' | 'stack';\\n  lg?: 'inline' | 'stack';\\n  xl?: 'inline' | 'stack';\\n  '2xl'?: 'inline' | 'stack';\\n}\",\n          \"description\": \"Display type at various breakpoints\",\n          \"defaultValue\": \"{\\n  md: 'inline'\\n}\"\n        },\n        {\n          \"name\": \"inset\",\n          \"type\": \"{\\n  default?: 'insetNone' | 'insetXs' | 'insetSm' | 'insetMd' | 'insetLg' | 'insetXl' | 'inset2xl' | 'inset3xl';\\n  sm?: 'insetNone' | 'insetXs' | 'insetSm' | 'insetMd' | 'insetLg' | 'insetXl' | 'inset2xl' | 'inset3xl';\\n  md?: 'insetNone' | 'insetXs' | 'insetSm' | 'insetMd' | 'insetLg' | 'insetXl' | 'inset2xl' | 'inset3xl';\\n  lg?: 'insetNone' | 'insetXs' | 'insetSm' | 'insetMd' | 'insetLg' | 'insetXl' | 'inset2xl' | 'inset3xl';\\n  xl?: 'insetNone' | 'insetXs' | 'insetSm' | 'insetMd' | 'insetLg' | 'insetXl' | 'inset2xl' | 'inset3xl';\\n  '2xl'?: 'insetNone' | 'insetXs' | 'insetSm' | 'insetMd' | 'insetLg' | 'insetXl' | 'inset2xl' | 'inset3xl';\\n}\",\n          \"description\": \"Insets at various breakpoints\"\n        }\n      ]\n    },\n    {\n      \"name\": \"MastheadToggle\",\n      \"description\": \"\",\n      \"props\": [\n        {\n          \"name\": \"children\",\n          \"type\": \"React.ReactNode\",\n          \"description\": \"Content rendered inside of the masthead toggle.\"\n        },\n        {\n          \"name\": \"className\",\n          \"type\": \"string\",\n          \"description\": \"Additional classes added to the masthead toggle.\"\n        }\n      ]\n    },\n    {\n      \"name\": \"MastheadMain\",\n      \"description\": \"\",\n      \"props\": [\n        {\n          \"name\": \"children\",\n          \"type\": \"React.ReactNode\",\n          \"description\": \"Content rendered inside of the masthead main block.\"\n        },\n        {\n          \"name\": \"className\",\n          \"type\": \"string\",\n          \"description\": \"Additional classes added to the masthead main.\"\n        }\n      ]\n    },\n    {\n      \"name\": \"MastheadBrand\",\n      \"description\": \"\",\n      \"props\": [\n        {\n          \"name\": \"children\",\n          \"type\": \"React.ReactNode\",\n          \"description\": \"Content rendered inside of the masthead brand.\"\n        },\n        {\n          \"name\": \"className\",\n          \"type\": \"string\",\n          \"description\": \"Additional classes added to the masthead brand.\"\n        },\n        {\n          \"name\": \"component\",\n          \"type\": \"React.ElementType<any> | React.ComponentType<any>\",\n          \"description\": \"Component type of the masthead brand.\",\n          \"defaultValue\": \"'a'\"\n        }\n      ]\n    },\n    {\n      \"name\": \"MastheadContent\",\n      \"description\": \"\",\n      \"props\": [\n        {\n          \"name\": \"children\",\n          \"type\": \"React.ReactNode\",\n          \"description\": \"Content rendered inside of the masthead content block.\"\n        },\n        {\n          \"name\": \"className\",\n          \"type\": \"string\",\n          \"description\": \"Additional classes added to the masthead content.\"\n        }\n      ]\n    }\n  ],\n  \"beta\": true,\n  \"cssPrefix\": [\n    \"pf-c-masthead\"\n  ],\n  \"examples\": [\n    \"Basic\",\n    \"Basic with mixed content\",\n    \"Display inline\",\n    \"Display stack\",\n    \"Display stack, display inline responsive\",\n    \"Light variant\",\n    \"Light 200 variant\",\n    \"Inset\",\n    \"With icon router link\"\n  ]\n};\npageData.liveContext = {\n  BarsIcon,\n  Link,\n  pfIcon\n};\npageData.examples = {\n  'Basic': props => \n    <Example {...pageData} {...props} {...{\"code\":\"import React from 'react';\\nimport { Masthead, MastheadToggle, MastheadMain, MastheadBrand, MastheadContent, Button } from '@patternfly/react-core';\\nimport BarsIcon from '@patternfly/react-icons/dist/js/icons/bars-icon';\\n\\nconst Basic = () => (\\n  <Masthead id=\\\"basic\\\">\\n    <MastheadToggle>\\n      <Button variant=\\\"plain\\\" onClick={() => {}} aria-label=\\\"Global navigation\\\">\\n        <BarsIcon />\\n      </Button>\\n    </MastheadToggle>\\n    <MastheadMain>\\n      <MastheadBrand>Logo</MastheadBrand>\\n    </MastheadMain>\\n    <MastheadContent>\\n      <span>Content</span>\\n    </MastheadContent>\\n  </Masthead>\\n)\",\"title\":\"Basic\",\"lang\":\"ts\"}}>\n      \n    </Example>,\n  'Basic with mixed content': props => \n    <Example {...pageData} {...props} {...{\"code\":\"import React from 'react';\\nimport {\\n  Masthead,\\n  MastheadToggle,\\n  MastheadMain,\\n  MastheadBrand,\\n  MastheadContent,\\n  Button,\\n  Flex,\\n  FlexItem\\n} from '@patternfly/react-core';\\nimport BarsIcon from '@patternfly/react-icons/dist/js/icons/bars-icon';\\n\\nconst BasicWithMixedContent = () => (\\n  <Masthead id=\\\"basic-mixed\\\">\\n    <MastheadToggle>\\n      <Button variant=\\\"plain\\\" onClick={() => {}} aria-label=\\\"Global navigation\\\">\\n        <BarsIcon />\\n      </Button>\\n    </MastheadToggle>\\n    <MastheadMain>\\n      <MastheadBrand>Logo</MastheadBrand>\\n    </MastheadMain>\\n    <MastheadContent>\\n      <Flex>\\n        <span>Testing text color</span>\\n        <Button>testing</Button>\\n        <FlexItem alignSelf={{ default: 'alignSelfFlexEnd' }}>\\n          <Button>testing</Button>\\n        </FlexItem>\\n      </Flex>\\n    </MastheadContent>\\n  </Masthead>\\n)\",\"title\":\"Basic with mixed content\",\"lang\":\"ts\"}}>\n      \n    </Example>,\n  'Display inline': props => \n    <Example {...pageData} {...props} {...{\"code\":\"import React from 'react';\\nimport { Masthead, MastheadToggle, MastheadMain, MastheadBrand, MastheadContent, Button } from '@patternfly/react-core';\\nimport BarsIcon from '@patternfly/react-icons/dist/js/icons/bars-icon';\\n\\nconst DisplayInline = () => (\\n  <Masthead id=\\\"inline-masthead\\\" display={{ default: 'inline' }}>\\n    <MastheadToggle>\\n      <Button variant=\\\"plain\\\" onClick={() => {}} aria-label=\\\"Global navigation\\\">\\n        <BarsIcon />\\n      </Button>\\n    </MastheadToggle>\\n    <MastheadMain>\\n      <MastheadBrand>Logo</MastheadBrand>\\n    </MastheadMain>\\n    <MastheadContent>\\n      <span>Content</span>\\n    </MastheadContent>\\n  </Masthead>\\n)\",\"title\":\"Display inline\",\"lang\":\"ts\"}}>\n      \n    </Example>,\n  'Display stack': props => \n    <Example {...pageData} {...props} {...{\"code\":\"import React from 'react';\\nimport { Masthead, MastheadToggle, MastheadMain, MastheadBrand, MastheadContent, Button } from '@patternfly/react-core';\\nimport BarsIcon from '@patternfly/react-icons/dist/js/icons/bars-icon';\\n\\nconst DisplayStack = () => (\\n  <Masthead id=\\\"stack-masthead\\\" display={{ default: 'stack' }}>\\n    <MastheadToggle>\\n      <Button variant=\\\"plain\\\" onClick={() => {}} aria-label=\\\"Global navigation\\\">\\n        <BarsIcon />\\n      </Button>\\n    </MastheadToggle>\\n    <MastheadMain>\\n      <MastheadBrand>Logo</MastheadBrand>\\n    </MastheadMain>\\n    <MastheadContent>\\n      <span>Content</span>\\n    </MastheadContent>\\n  </Masthead>\\n)\",\"title\":\"Display stack\",\"lang\":\"ts\"}}>\n      \n    </Example>,\n  'Display stack, display inline responsive': props => \n    <Example {...pageData} {...props} {...{\"code\":\"import React from 'react';\\nimport { Masthead, MastheadToggle, MastheadMain, MastheadBrand, MastheadContent, Button } from '@patternfly/react-core';\\nimport BarsIcon from '@patternfly/react-icons/dist/js/icons/bars-icon';\\n\\nconst DisplayStackDisplayInlineResponsive = () => (\\n  <Masthead id=\\\"stack-masthead\\\" display={{ default: 'inline', lg: 'stack', '2xl': 'inline' }}>\\n    <MastheadToggle>\\n      <Button variant=\\\"plain\\\" onClick={() => {}} aria-label=\\\"Global navigation\\\">\\n        <BarsIcon />\\n      </Button>\\n    </MastheadToggle>\\n    <MastheadMain>\\n      <MastheadBrand>Logo</MastheadBrand>\\n    </MastheadMain>\\n    <MastheadContent>\\n      <span>Content</span>\\n    </MastheadContent>\\n  </Masthead>\\n)\",\"title\":\"Display stack, display inline responsive\",\"lang\":\"ts\"}}>\n      \n    </Example>,\n  'Light variant': props => \n    <Example {...pageData} {...props} {...{\"code\":\"import React from 'react';\\nimport { Masthead, MastheadToggle, MastheadMain, MastheadBrand, MastheadContent, Button } from '@patternfly/react-core';\\nimport BarsIcon from '@patternfly/react-icons/dist/js/icons/bars-icon';\\n\\nconst LightVariant = () => (\\n  <Masthead id=\\\"light-masthead\\\" backgroundColor=\\\"light\\\">\\n    <MastheadToggle>\\n      <Button variant=\\\"plain\\\" onClick={() => {}} aria-label=\\\"Global navigation\\\">\\n        <BarsIcon />\\n      </Button>\\n    </MastheadToggle>\\n    <MastheadMain>\\n      <MastheadBrand>Logo</MastheadBrand>\\n    </MastheadMain>\\n    <MastheadContent>\\n      <span>Content</span>\\n    </MastheadContent>\\n  </Masthead>\\n)\",\"title\":\"Light variant\",\"lang\":\"ts\"}}>\n      \n    </Example>,\n  'Light 200 variant': props => \n    <Example {...pageData} {...props} {...{\"code\":\"import React from 'react';\\nimport { Masthead, MastheadToggle, MastheadMain, MastheadBrand, MastheadContent, Button } from '@patternfly/react-core';\\nimport BarsIcon from '@patternfly/react-icons/dist/js/icons/bars-icon';\\n\\nconst Light200Variant = () => (\\n  <Masthead id=\\\"light200-masthead\\\" backgroundColor=\\\"light200\\\">\\n    <MastheadToggle>\\n      <Button variant=\\\"plain\\\" onClick={() => {}} aria-label=\\\"Global navigation\\\">\\n        <BarsIcon />\\n      </Button>\\n    </MastheadToggle>\\n    <MastheadMain>\\n      <MastheadBrand>Logo</MastheadBrand>\\n    </MastheadMain>\\n    <MastheadContent>\\n      <span>Content</span>\\n    </MastheadContent>\\n  </Masthead>\\n)\",\"title\":\"Light 200 variant\",\"lang\":\"ts\"}}>\n      \n    </Example>,\n  'Inset': props => \n    <Example {...pageData} {...props} {...{\"code\":\"import React from 'react';\\nimport { Masthead, MastheadToggle, MastheadMain, MastheadBrand, MastheadContent, Button } from '@patternfly/react-core';\\nimport BarsIcon from '@patternfly/react-icons/dist/js/icons/bars-icon';\\n\\nconst Inset = () => (\\n  <Masthead id=\\\"inset-masthead\\\" inset={{ default: 'insetSm' }}>\\n    <MastheadToggle>\\n      <Button variant=\\\"plain\\\" onClick={() => {}} aria-label=\\\"Global navigation\\\">\\n        <BarsIcon />\\n      </Button>\\n    </MastheadToggle>\\n    <MastheadMain>\\n      <MastheadBrand>Logo</MastheadBrand>\\n    </MastheadMain>\\n    <MastheadContent>\\n      <span>Content</span>\\n    </MastheadContent>\\n  </Masthead>\\n)\",\"title\":\"Inset\",\"lang\":\"ts\"}}>\n      \n    </Example>,\n  'With icon router link': props => \n    <Example {...pageData} {...props} {...{\"code\":\"import React from 'react';\\nimport { Masthead, MastheadToggle, MastheadMain, MastheadBrand, MastheadContent, Button } from '@patternfly/react-core';\\nimport BarsIcon from '@patternfly/react-icons/dist/js/icons/bars-icon';\\nimport { Link } from '@reach/router';\\nimport pfIcon from './pf-logo-small.svg';\\n\\nconst WithIconRouterLink = () => (\\n  <Masthead id=\\\"basic\\\">\\n    <MastheadToggle>\\n      <Button variant=\\\"plain\\\" onClick={() => {}} aria-label=\\\"Global navigation\\\">\\n        <BarsIcon />\\n      </Button>\\n    </MastheadToggle>\\n    <MastheadMain>\\n      <MastheadBrand component={props => <Link {...props} to=\\\"#\\\" />}>\\n        <img src={pfIcon} alt=\\\"Patterfly Logo\\\" />\\n      </MastheadBrand>\\n    </MastheadMain>\\n    <MastheadContent>\\n      <span>Content</span>\\n    </MastheadContent>\\n  </Masthead>\\n)\",\"title\":\"With icon router link\",\"lang\":\"ts\"}}>\n      \n    </Example>\n};\n\nconst Component = () => (\n  <React.Fragment>\n    <p {...{\"className\":\"ws-p\"}}>\n      <code {...{\"className\":\"ws-code\"}}>\n        {`Masthead`}\n      </code>\n      {` should contain the following components to maintain proper layout and formatting: `}\n      <code {...{\"className\":\"ws-code\"}}>\n        {`MastheadToggle`}\n      </code>\n      {`, `}\n      <code {...{\"className\":\"ws-code\"}}>\n        {`MastheadMain`}\n      </code>\n      {`, and `}\n      <code {...{\"className\":\"ws-code\"}}>\n        {`MastheadContent`}\n      </code>\n      {`.`}\n    </p>\n    <p {...{\"className\":\"ws-p\"}}>\n      <code {...{\"className\":\"ws-code\"}}>\n        {`MastheadMain`}\n      </code>\n      {` represents the smaller area taken up by a logo, and will typically contain a `}\n      <code {...{\"className\":\"ws-code\"}}>\n        {`MastheadBrand`}\n      </code>\n      {`. `}\n      <code {...{\"className\":\"ws-code\"}}>\n        {`MastheadContent`}\n      </code>\n      {` represents the main portion of the masthead area and will typically contain a `}\n      <code {...{\"className\":\"ws-code\"}}>\n        {`Toolbar`}\n      </code>\n      {` or other menu-like content such as `}\n      <code {...{\"className\":\"ws-code\"}}>\n        {`Dropdown`}\n      </code>\n      {`.`}\n    </p>\n    <AutoLinkHeader {...{\"id\":\"examples\",\"size\":\"h2\",\"className\":\"ws-title ws-h2\"}}>\n      {`Examples`}\n    </AutoLinkHeader>\n    {React.createElement(pageData.examples[\"Basic\"])}\n    {React.createElement(pageData.examples[\"Basic with mixed content\"])}\n    {React.createElement(pageData.examples[\"Display inline\"])}\n    {React.createElement(pageData.examples[\"Display stack\"])}\n    {React.createElement(pageData.examples[\"Display stack, display inline responsive\"])}\n    {React.createElement(pageData.examples[\"Light variant\"])}\n    {React.createElement(pageData.examples[\"Light 200 variant\"])}\n    {React.createElement(pageData.examples[\"Inset\"])}\n    {React.createElement(pageData.examples[\"With icon router link\"])}\n  </React.Fragment>\n);\nComponent.displayName = 'ComponentsMastheadReactDocs';\nComponent.pageData = pageData;\n\nexport default Component;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}