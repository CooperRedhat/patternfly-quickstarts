{"ast":null,"code":"import React from 'react';\nimport { AutoLinkHeader, Example, Link as PatternflyThemeLink } from 'theme-patternfly-org/components';\nvar pageData = {\n  \"id\": \"Chip\",\n  \"section\": \"components\",\n  \"source\": \"accessibility\",\n  \"slug\": \"/components/chip/accessibility\",\n  \"sourceLink\": \"https://github.com/patternfly/patternfly-org/blob/main/packages/docs/src/content/accessibility/chip/chip.md\"\n};\npageData.examples = {};\n\nvar Component = function Component() {\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"p\", {\n    \"className\": \"ws-p\"\n  }, \"A \", /*#__PURE__*/React.createElement(\"strong\", null, \"chip\"), \" is used to communicate a value or a set of attribute-value pairs within workflows that involve filtering a set of objects. A chip contains a text element, and usually also a button that allows the user to remove the chip from a selection. Read-only or draggable chips may not have a button.\"), /*#__PURE__*/React.createElement(\"p\", {\n    \"className\": \"ws-p\"\n  }, /*#__PURE__*/React.createElement(\"strong\", null, \"Keyboard users\"), \" should be able to navigate to the button on a chip, as long as the chip has a button, and remove it from a selection.\"), /*#__PURE__*/React.createElement(\"p\", {\n    \"className\": \"ws-p\"\n  }, /*#__PURE__*/React.createElement(\"strong\", null, \"Screen reader users\"), \" should be able to navigate to the chip and have a screen reader read the chip\\u2019s text, as well as remove the chip from a selection if it has a button.\"), /*#__PURE__*/React.createElement(\"p\", {\n    \"className\": \"ws-p\"\n  }, \"The following attributes have been added for you or are customizable in PatternFly:\"), /*#__PURE__*/React.createElement(\"table\", {\n    \"className\": \"ws-table pf-c-table pf-m-grid-lg pf-m-compact\",\n    \"role\": \"grid\"\n  }, /*#__PURE__*/React.createElement(\"thead\", null, /*#__PURE__*/React.createElement(\"tr\", {\n    \"role\": \"row\"\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    \"className\": \" pf-m-wrap\",\n    \"role\": \"columnheader\",\n    \"scope\": \"col\"\n  }, /*#__PURE__*/React.createElement(\"div\", null, \"Attribute\")), /*#__PURE__*/React.createElement(\"th\", {\n    \"className\": \" pf-m-wrap\",\n    \"role\": \"columnheader\",\n    \"scope\": \"col\"\n  }, /*#__PURE__*/React.createElement(\"div\", null, \"Which HTML element it appears on in markup\")), /*#__PURE__*/React.createElement(\"th\", {\n    \"className\": \" pf-m-wrap\",\n    \"role\": \"columnheader\",\n    \"scope\": \"col\"\n  }, /*#__PURE__*/React.createElement(\"div\", null, \"Reason used\")))), /*#__PURE__*/React.createElement(\"tbody\", {\n    \"role\": \"rowgroup\"\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    \"role\": \"row\"\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    \"role\": \"cell\",\n    \"data-label\": \"Attribute\"\n  }, /*#__PURE__*/React.createElement(\"div\", null, \"aria-label=\\\"\", \"[button label text]\", \"\\\"\")), /*#__PURE__*/React.createElement(\"td\", {\n    \"role\": \"cell\",\n    \"data-label\": \"Which HTML element it appears on in markup\"\n  }, /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(\"code\", {\n    \"className\": \"ws-code\"\n  }, \".pf-c-button\"))), /*#__PURE__*/React.createElement(\"td\", {\n    \"role\": \"cell\",\n    \"data-label\": \"Reason used\"\n  }, /*#__PURE__*/React.createElement(\"div\", null, \"Provides an accessible name for the button when an icon is used instead of text. Required when an icon is used with no supporting text.\"))), /*#__PURE__*/React.createElement(\"tr\", {\n    \"role\": \"row\"\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    \"role\": \"cell\",\n    \"data-label\": \"Attribute\"\n  }, /*#__PURE__*/React.createElement(\"div\", null, \"aria-labelledby=\\\"\", \"[id value of .pf-c-button]\", \"\\\"\")), /*#__PURE__*/React.createElement(\"td\", {\n    \"role\": \"cell\",\n    \"data-label\": \"Which HTML element it appears on in markup\"\n  }, /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(\"code\", {\n    \"className\": \"ws-code\"\n  }, \".pf-c-button\"))), /*#__PURE__*/React.createElement(\"td\", {\n    \"role\": \"cell\",\n    \"data-label\": \"Reason used\"\n  }, /*#__PURE__*/React.createElement(\"div\", null, \"Gives the button an accessible name by referring to the element that provides the position of the button within a list. Required when the button is being removed.\"))), /*#__PURE__*/React.createElement(\"tr\", {\n    \"role\": \"row\"\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    \"role\": \"cell\",\n    \"data-label\": \"Attribute\"\n  }, /*#__PURE__*/React.createElement(\"div\", null, \"aria-hidden=\\\"true\\\"\")), /*#__PURE__*/React.createElement(\"td\", {\n    \"role\": \"cell\",\n    \"data-label\": \"Which HTML element it appears on in markup\"\n  }, /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(\"code\", {\n    \"className\": \"ws-code\"\n  }, \"<i>\"))), /*#__PURE__*/React.createElement(\"td\", {\n    \"role\": \"cell\",\n    \"data-label\": \"Reason used\"\n  }, /*#__PURE__*/React.createElement(\"div\", null, \"Hides the icon from assistive technologies.\"))))));\n};\n\nComponent.displayName = 'ComponentsChipAccessibilityDocs';\nComponent.pageData = pageData;\nexport default Component;","map":{"version":3,"names":["React","AutoLinkHeader","Example","Link","PatternflyThemeLink","pageData","examples","Component","displayName"],"sources":["/Users/jschuler/Code/patternfly-quickstarts/packages/docs/src/generated/components/chip/accessibility.js"],"sourcesContent":["import React from 'react';\nimport { AutoLinkHeader, Example, Link as PatternflyThemeLink } from 'theme-patternfly-org/components';\n\nconst pageData = {\n  \"id\": \"Chip\",\n  \"section\": \"components\",\n  \"source\": \"accessibility\",\n  \"slug\": \"/components/chip/accessibility\",\n  \"sourceLink\": \"https://github.com/patternfly/patternfly-org/blob/main/packages/docs/src/content/accessibility/chip/chip.md\"\n};\npageData.examples = {\n  \n};\n\nconst Component = () => (\n  <React.Fragment>\n    <p {...{\"className\":\"ws-p\"}}>\n      {`A `}\n      <strong>\n        {`chip`}\n      </strong>\n      {` is used to communicate a value or a set of attribute-value pairs within workflows that involve filtering a set of objects. A chip contains a text element, and usually also a button that allows the user to remove the chip from a selection. Read-only or draggable chips may not have a button.`}\n    </p>\n    <p {...{\"className\":\"ws-p\"}}>\n      <strong>\n        {`Keyboard users`}\n      </strong>\n      {` should be able to navigate to the button on a chip, as long as the chip has a button, and remove it from a selection.`}\n    </p>\n    <p {...{\"className\":\"ws-p\"}}>\n      <strong>\n        {`Screen reader users`}\n      </strong>\n      {` should be able to navigate to the chip and have a screen reader read the chipâ€™s text, as well as remove the chip from a selection if it has a button.`}\n    </p>\n    <p {...{\"className\":\"ws-p\"}}>\n      {`The following attributes have been added for you or are customizable in PatternFly:`}\n    </p>\n    <table {...{\"className\":\"ws-table pf-c-table pf-m-grid-lg pf-m-compact\",\"role\":\"grid\"}}>\n      <thead>\n        <tr {...{\"role\":\"row\"}}>\n          <th {...{\"className\":\" pf-m-wrap\",\"role\":\"columnheader\",\"scope\":\"col\"}}>\n            <div>\n              {`Attribute`}\n            </div>\n          </th>\n          <th {...{\"className\":\" pf-m-wrap\",\"role\":\"columnheader\",\"scope\":\"col\"}}>\n            <div>\n              {`Which HTML element it appears on in markup`}\n            </div>\n          </th>\n          <th {...{\"className\":\" pf-m-wrap\",\"role\":\"columnheader\",\"scope\":\"col\"}}>\n            <div>\n              {`Reason used`}\n            </div>\n          </th>\n        </tr>\n      </thead>\n      <tbody {...{\"role\":\"rowgroup\"}}>\n        <tr {...{\"role\":\"row\"}}>\n          <td {...{\"role\":\"cell\",\"data-label\":\"Attribute\"}}>\n            <div>\n              {`aria-label=\"`}\n              {`[button label text]`}\n              {`\"`}\n            </div>\n          </td>\n          <td {...{\"role\":\"cell\",\"data-label\":\"Which HTML element it appears on in markup\"}}>\n            <div>\n              <code {...{\"className\":\"ws-code\"}}>\n                {`.pf-c-button`}\n              </code>\n            </div>\n          </td>\n          <td {...{\"role\":\"cell\",\"data-label\":\"Reason used\"}}>\n            <div>\n              {`Provides an accessible name for the button when an icon is used instead of text. Required when an icon is used with no supporting text.`}\n            </div>\n          </td>\n        </tr>\n        <tr {...{\"role\":\"row\"}}>\n          <td {...{\"role\":\"cell\",\"data-label\":\"Attribute\"}}>\n            <div>\n              {`aria-labelledby=\"`}\n              {`[id value of .pf-c-button]`}\n              {`\"`}\n            </div>\n          </td>\n          <td {...{\"role\":\"cell\",\"data-label\":\"Which HTML element it appears on in markup\"}}>\n            <div>\n              <code {...{\"className\":\"ws-code\"}}>\n                {`.pf-c-button`}\n              </code>\n            </div>\n          </td>\n          <td {...{\"role\":\"cell\",\"data-label\":\"Reason used\"}}>\n            <div>\n              {`Gives the button an accessible name by referring to the element that provides the position of the button within a list. Required when the button is being removed.`}\n            </div>\n          </td>\n        </tr>\n        <tr {...{\"role\":\"row\"}}>\n          <td {...{\"role\":\"cell\",\"data-label\":\"Attribute\"}}>\n            <div>\n              {`aria-hidden=\"true\"`}\n            </div>\n          </td>\n          <td {...{\"role\":\"cell\",\"data-label\":\"Which HTML element it appears on in markup\"}}>\n            <div>\n              <code {...{\"className\":\"ws-code\"}}>\n                {`<i>`}\n              </code>\n            </div>\n          </td>\n          <td {...{\"role\":\"cell\",\"data-label\":\"Reason used\"}}>\n            <div>\n              {`Hides the icon from assistive technologies.`}\n            </div>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </React.Fragment>\n);\nComponent.displayName = 'ComponentsChipAccessibilityDocs';\nComponent.pageData = pageData;\n\nexport default Component;\n"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,EAAyBC,OAAzB,EAAkCC,IAAI,IAAIC,mBAA1C,QAAqE,iCAArE;AAEA,IAAMC,QAAQ,GAAG;EACf,MAAM,MADS;EAEf,WAAW,YAFI;EAGf,UAAU,eAHK;EAIf,QAAQ,gCAJO;EAKf,cAAc;AALC,CAAjB;AAOAA,QAAQ,CAACC,QAAT,GAAoB,EAApB;;AAIA,IAAMC,SAAS,GAAG,SAAZA,SAAY;EAAA,oBAChB,oBAAC,KAAD,CAAO,QAAP,qBACE;IAAQ,aAAY;EAApB,sBAEE,2CAFF,wSADF,eAQE;IAAQ,aAAY;EAApB,gBACE,qDADF,2HARF,eAcE;IAAQ,aAAY;EAApB,gBACE,0DADF,gKAdF,eAoBE;IAAQ,aAAY;EAApB,yFApBF,eAuBE;IAAY,aAAY,+CAAxB;IAAwE,QAAO;EAA/E,gBACE,gDACE;IAAS,QAAO;EAAhB,gBACE;IAAS,aAAY,YAArB;IAAkC,QAAO,cAAzC;IAAwD,SAAQ;EAAhE,gBACE,6CADF,CADF,eAME;IAAS,aAAY,YAArB;IAAkC,QAAO,cAAzC;IAAwD,SAAQ;EAAhE,gBACE,8EADF,CANF,eAWE;IAAS,aAAY,YAArB;IAAkC,QAAO,cAAzC;IAAwD,SAAQ;EAAhE,gBACE,+CADF,CAXF,CADF,CADF,eAoBE;IAAY,QAAO;EAAnB,gBACE;IAAS,QAAO;EAAhB,gBACE;IAAS,QAAO,MAAhB;IAAuB,cAAa;EAApC,gBACE,8EADF,CADF,eAQE;IAAS,QAAO,MAAhB;IAAuB,cAAa;EAApC,gBACE,8CACE;IAAW,aAAY;EAAvB,kBADF,CADF,CARF,eAeE;IAAS,QAAO,MAAhB;IAAuB,cAAa;EAApC,gBACE,2KADF,CAfF,CADF,eAsBE;IAAS,QAAO;EAAhB,gBACE;IAAS,QAAO,MAAhB;IAAuB,cAAa;EAApC,gBACE,0FADF,CADF,eAQE;IAAS,QAAO,MAAhB;IAAuB,cAAa;EAApC,gBACE,8CACE;IAAW,aAAY;EAAvB,kBADF,CADF,CARF,eAeE;IAAS,QAAO,MAAhB;IAAuB,cAAa;EAApC,gBACE,sMADF,CAfF,CAtBF,eA2CE;IAAS,QAAO;EAAhB,gBACE;IAAS,QAAO,MAAhB;IAAuB,cAAa;EAApC,gBACE,wDADF,CADF,eAME;IAAS,QAAO,MAAhB;IAAuB,cAAa;EAApC,gBACE,8CACE;IAAW,aAAY;EAAvB,SADF,CADF,CANF,eAaE;IAAS,QAAO,MAAhB;IAAuB,cAAa;EAApC,gBACE,+EADF,CAbF,CA3CF,CApBF,CAvBF,CADgB;AAAA,CAAlB;;AA8GAA,SAAS,CAACC,WAAV,GAAwB,iCAAxB;AACAD,SAAS,CAACF,QAAV,GAAqBA,QAArB;AAEA,eAAeE,SAAf"},"metadata":{},"sourceType":"module"}