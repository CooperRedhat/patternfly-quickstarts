{"ast":null,"code":"function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport { AutoLinkHeader, Example, Link as PatternflyThemeLink } from 'theme-patternfly-org/components';\nimport '../../../../node_modules/@patternfly/react-core/src/layouts/Split/examples/./split.css';\nvar pageData = {\n  \"id\": \"Split\",\n  \"section\": \"layouts\",\n  \"source\": \"react\",\n  \"slug\": \"/layouts/split/react\",\n  \"sourceLink\": \"https://github.com/patternfly/patternfly-react/blob/main/packages/docs/packages/react-core/src/layouts/Split/examples/Split.md\",\n  \"propComponents\": [{\n    \"name\": \"Split\",\n    \"description\": \"\",\n    \"props\": [{\n      \"name\": \"children\",\n      \"type\": \"React.ReactNode\",\n      \"description\": \"content rendered inside the Split layout\",\n      \"defaultValue\": \"null\"\n    }, {\n      \"name\": \"className\",\n      \"type\": \"string\",\n      \"description\": \"additional classes added to the Split layout\",\n      \"defaultValue\": \"''\"\n    }, {\n      \"name\": \"component\",\n      \"type\": \"React.ReactNode\",\n      \"description\": \"Sets the base component to render. defaults to div\",\n      \"defaultValue\": \"'div'\"\n    }, {\n      \"name\": \"hasGutter\",\n      \"type\": \"boolean\",\n      \"description\": \"Adds space between children.\",\n      \"defaultValue\": \"false\"\n    }, {\n      \"name\": \"isWrappable\",\n      \"type\": \"boolean\",\n      \"description\": \"Allows children to wrap\",\n      \"defaultValue\": \"false\"\n    }]\n  }, {\n    \"name\": \"SplitItem\",\n    \"description\": \"\",\n    \"props\": [{\n      \"name\": \"children\",\n      \"type\": \"React.ReactNode\",\n      \"description\": \"content rendered inside the Split Layout Item\",\n      \"defaultValue\": \"null\"\n    }, {\n      \"name\": \"className\",\n      \"type\": \"string\",\n      \"description\": \"additional classes added to the Split Layout Item\",\n      \"defaultValue\": \"''\"\n    }, {\n      \"name\": \"isFilled\",\n      \"type\": \"boolean\",\n      \"description\": \"Flag indicating if this Split Layout item should fill the available horizontal space.\",\n      \"defaultValue\": \"false\"\n    }]\n  }],\n  \"cssPrefix\": [\"pf-l-split\"],\n  \"examples\": [\"Basic\", \"With gutter\", \"Wrappable\"]\n};\npageData.examples = {\n  'Basic': function Basic(props) {\n    return /*#__PURE__*/React.createElement(Example, _extends({}, pageData, props, {\n      \"code\": \"import React from 'react';\\nimport { Split, SplitItem } from '@patternfly/react-core';\\n\\nconst Basic = () => (\\n  <Split>\\n    <SplitItem>content</SplitItem>\\n    <SplitItem isFilled>pf-m-fill</SplitItem>\\n    <SplitItem>content</SplitItem>\\n  </Split>\\n)\",\n      \"title\": \"Basic\",\n      \"lang\": \"js\"\n    }));\n  },\n  'With gutter': function WithGutter(props) {\n    return /*#__PURE__*/React.createElement(Example, _extends({}, pageData, props, {\n      \"code\": \"import React from 'react';\\nimport { Split, SplitItem } from '@patternfly/react-core';\\n\\nconst WithGutter = () => (\\n  <Split hasGutter>\\n    <SplitItem>content</SplitItem>\\n    <SplitItem isFilled>pf-m-fill</SplitItem>\\n    <SplitItem>content</SplitItem>\\n  </Split>\\n)\",\n      \"title\": \"With gutter\",\n      \"lang\": \"js\"\n    }));\n  },\n  'Wrappable': function Wrappable(props) {\n    return /*#__PURE__*/React.createElement(Example, _extends({}, pageData, props, {\n      \"code\": \"import React from 'react';\\nimport { Split, SplitItem } from '@patternfly/react-core';\\n\\nconst Wrappable = () => (\\n  <Split hasGutter isWrappable>\\n    <SplitItem>content</SplitItem>\\n    <SplitItem>content</SplitItem>\\n    <SplitItem>content</SplitItem>\\n    <SplitItem>content</SplitItem>\\n    <SplitItem>content</SplitItem>\\n    <SplitItem>content</SplitItem>\\n    <SplitItem>content</SplitItem>\\n    <SplitItem>content</SplitItem>\\n    <SplitItem>content</SplitItem>\\n    <SplitItem>content</SplitItem>\\n    <SplitItem>content</SplitItem>\\n    <SplitItem>content</SplitItem>\\n    <SplitItem>content</SplitItem>\\n    <SplitItem>content</SplitItem>\\n  </Split>\\n)\",\n      \"title\": \"Wrappable\",\n      \"lang\": \"js\"\n    }));\n  }\n};\n\nvar Component = function Component() {\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(AutoLinkHeader, {\n    \"id\": \"examples\",\n    \"size\": \"h2\",\n    \"className\": \"ws-title ws-h2\"\n  }, \"Examples\"), React.createElement(pageData.examples[\"Basic\"]), React.createElement(pageData.examples[\"With gutter\"]), React.createElement(pageData.examples[\"Wrappable\"]));\n};\n\nComponent.displayName = 'LayoutsSplitReactDocs';\nComponent.pageData = pageData;\nexport default Component;","map":{"version":3,"names":["React","AutoLinkHeader","Example","Link","PatternflyThemeLink","pageData","examples","props","Component","createElement","displayName"],"sources":["/Users/jschuler/Code/patternfly-quickstarts/packages/docs/src/generated/layouts/split/react.js"],"sourcesContent":["import React from 'react';\nimport { AutoLinkHeader, Example, Link as PatternflyThemeLink } from 'theme-patternfly-org/components';\nimport '../../../../node_modules/@patternfly/react-core/src/layouts/Split/examples/./split.css';\nconst pageData = {\n  \"id\": \"Split\",\n  \"section\": \"layouts\",\n  \"source\": \"react\",\n  \"slug\": \"/layouts/split/react\",\n  \"sourceLink\": \"https://github.com/patternfly/patternfly-react/blob/main/packages/docs/packages/react-core/src/layouts/Split/examples/Split.md\",\n  \"propComponents\": [\n    {\n      \"name\": \"Split\",\n      \"description\": \"\",\n      \"props\": [\n        {\n          \"name\": \"children\",\n          \"type\": \"React.ReactNode\",\n          \"description\": \"content rendered inside the Split layout\",\n          \"defaultValue\": \"null\"\n        },\n        {\n          \"name\": \"className\",\n          \"type\": \"string\",\n          \"description\": \"additional classes added to the Split layout\",\n          \"defaultValue\": \"''\"\n        },\n        {\n          \"name\": \"component\",\n          \"type\": \"React.ReactNode\",\n          \"description\": \"Sets the base component to render. defaults to div\",\n          \"defaultValue\": \"'div'\"\n        },\n        {\n          \"name\": \"hasGutter\",\n          \"type\": \"boolean\",\n          \"description\": \"Adds space between children.\",\n          \"defaultValue\": \"false\"\n        },\n        {\n          \"name\": \"isWrappable\",\n          \"type\": \"boolean\",\n          \"description\": \"Allows children to wrap\",\n          \"defaultValue\": \"false\"\n        }\n      ]\n    },\n    {\n      \"name\": \"SplitItem\",\n      \"description\": \"\",\n      \"props\": [\n        {\n          \"name\": \"children\",\n          \"type\": \"React.ReactNode\",\n          \"description\": \"content rendered inside the Split Layout Item\",\n          \"defaultValue\": \"null\"\n        },\n        {\n          \"name\": \"className\",\n          \"type\": \"string\",\n          \"description\": \"additional classes added to the Split Layout Item\",\n          \"defaultValue\": \"''\"\n        },\n        {\n          \"name\": \"isFilled\",\n          \"type\": \"boolean\",\n          \"description\": \"Flag indicating if this Split Layout item should fill the available horizontal space.\",\n          \"defaultValue\": \"false\"\n        }\n      ]\n    }\n  ],\n  \"cssPrefix\": [\n    \"pf-l-split\"\n  ],\n  \"examples\": [\n    \"Basic\",\n    \"With gutter\",\n    \"Wrappable\"\n  ]\n};\npageData.examples = {\n  'Basic': props => \n    <Example {...pageData} {...props} {...{\"code\":\"import React from 'react';\\nimport { Split, SplitItem } from '@patternfly/react-core';\\n\\nconst Basic = () => (\\n  <Split>\\n    <SplitItem>content</SplitItem>\\n    <SplitItem isFilled>pf-m-fill</SplitItem>\\n    <SplitItem>content</SplitItem>\\n  </Split>\\n)\",\"title\":\"Basic\",\"lang\":\"js\"}}>\n      \n    </Example>,\n  'With gutter': props => \n    <Example {...pageData} {...props} {...{\"code\":\"import React from 'react';\\nimport { Split, SplitItem } from '@patternfly/react-core';\\n\\nconst WithGutter = () => (\\n  <Split hasGutter>\\n    <SplitItem>content</SplitItem>\\n    <SplitItem isFilled>pf-m-fill</SplitItem>\\n    <SplitItem>content</SplitItem>\\n  </Split>\\n)\",\"title\":\"With gutter\",\"lang\":\"js\"}}>\n      \n    </Example>,\n  'Wrappable': props => \n    <Example {...pageData} {...props} {...{\"code\":\"import React from 'react';\\nimport { Split, SplitItem } from '@patternfly/react-core';\\n\\nconst Wrappable = () => (\\n  <Split hasGutter isWrappable>\\n    <SplitItem>content</SplitItem>\\n    <SplitItem>content</SplitItem>\\n    <SplitItem>content</SplitItem>\\n    <SplitItem>content</SplitItem>\\n    <SplitItem>content</SplitItem>\\n    <SplitItem>content</SplitItem>\\n    <SplitItem>content</SplitItem>\\n    <SplitItem>content</SplitItem>\\n    <SplitItem>content</SplitItem>\\n    <SplitItem>content</SplitItem>\\n    <SplitItem>content</SplitItem>\\n    <SplitItem>content</SplitItem>\\n    <SplitItem>content</SplitItem>\\n    <SplitItem>content</SplitItem>\\n  </Split>\\n)\",\"title\":\"Wrappable\",\"lang\":\"js\"}}>\n      \n    </Example>\n};\n\nconst Component = () => (\n  <React.Fragment>\n    <AutoLinkHeader {...{\"id\":\"examples\",\"size\":\"h2\",\"className\":\"ws-title ws-h2\"}}>\n      {`Examples`}\n    </AutoLinkHeader>\n    {React.createElement(pageData.examples[\"Basic\"])}\n    {React.createElement(pageData.examples[\"With gutter\"])}\n    {React.createElement(pageData.examples[\"Wrappable\"])}\n  </React.Fragment>\n);\nComponent.displayName = 'LayoutsSplitReactDocs';\nComponent.pageData = pageData;\n\nexport default Component;\n"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,EAAyBC,OAAzB,EAAkCC,IAAI,IAAIC,mBAA1C,QAAqE,iCAArE;AACA,OAAO,wFAAP;AACA,IAAMC,QAAQ,GAAG;EACf,MAAM,OADS;EAEf,WAAW,SAFI;EAGf,UAAU,OAHK;EAIf,QAAQ,sBAJO;EAKf,cAAc,gIALC;EAMf,kBAAkB,CAChB;IACE,QAAQ,OADV;IAEE,eAAe,EAFjB;IAGE,SAAS,CACP;MACE,QAAQ,UADV;MAEE,QAAQ,iBAFV;MAGE,eAAe,0CAHjB;MAIE,gBAAgB;IAJlB,CADO,EAOP;MACE,QAAQ,WADV;MAEE,QAAQ,QAFV;MAGE,eAAe,8CAHjB;MAIE,gBAAgB;IAJlB,CAPO,EAaP;MACE,QAAQ,WADV;MAEE,QAAQ,iBAFV;MAGE,eAAe,oDAHjB;MAIE,gBAAgB;IAJlB,CAbO,EAmBP;MACE,QAAQ,WADV;MAEE,QAAQ,SAFV;MAGE,eAAe,8BAHjB;MAIE,gBAAgB;IAJlB,CAnBO,EAyBP;MACE,QAAQ,aADV;MAEE,QAAQ,SAFV;MAGE,eAAe,yBAHjB;MAIE,gBAAgB;IAJlB,CAzBO;EAHX,CADgB,EAqChB;IACE,QAAQ,WADV;IAEE,eAAe,EAFjB;IAGE,SAAS,CACP;MACE,QAAQ,UADV;MAEE,QAAQ,iBAFV;MAGE,eAAe,+CAHjB;MAIE,gBAAgB;IAJlB,CADO,EAOP;MACE,QAAQ,WADV;MAEE,QAAQ,QAFV;MAGE,eAAe,mDAHjB;MAIE,gBAAgB;IAJlB,CAPO,EAaP;MACE,QAAQ,UADV;MAEE,QAAQ,SAFV;MAGE,eAAe,uFAHjB;MAIE,gBAAgB;IAJlB,CAbO;EAHX,CArCgB,CANH;EAoEf,aAAa,CACX,YADW,CApEE;EAuEf,YAAY,CACV,OADU,EAEV,aAFU,EAGV,WAHU;AAvEG,CAAjB;AA6EAA,QAAQ,CAACC,QAAT,GAAoB;EAClB,SAAS,eAAAC,KAAK;IAAA,oBACZ,oBAAC,OAAD,eAAaF,QAAb,EAA2BE,KAA3B;MAAuC,QAAO,kQAA9C;MAAiT,SAAQ,OAAzT;MAAiU,QAAO;IAAxU,GADY;EAAA,CADI;EAKlB,eAAe,oBAAAA,KAAK;IAAA,oBAClB,oBAAC,OAAD,eAAaF,QAAb,EAA2BE,KAA3B;MAAuC,QAAO,iRAA9C;MAAgU,SAAQ,aAAxU;MAAsV,QAAO;IAA7V,GADkB;EAAA,CALF;EASlB,aAAa,mBAAAA,KAAK;IAAA,oBAChB,oBAAC,OAAD,eAAaF,QAAb,EAA2BE,KAA3B;MAAuC,QAAO,6pBAA9C;MAA4sB,SAAQ,WAAptB;MAAguB,QAAO;IAAvuB,GADgB;EAAA;AATA,CAApB;;AAeA,IAAMC,SAAS,GAAG,SAAZA,SAAY;EAAA,oBAChB,oBAAC,KAAD,CAAO,QAAP,qBACE,oBAAC,cAAD;IAAqB,MAAK,UAA1B;IAAqC,QAAO,IAA5C;IAAiD,aAAY;EAA7D,cADF,EAIGR,KAAK,CAACS,aAAN,CAAoBJ,QAAQ,CAACC,QAAT,CAAkB,OAAlB,CAApB,CAJH,EAKGN,KAAK,CAACS,aAAN,CAAoBJ,QAAQ,CAACC,QAAT,CAAkB,aAAlB,CAApB,CALH,EAMGN,KAAK,CAACS,aAAN,CAAoBJ,QAAQ,CAACC,QAAT,CAAkB,WAAlB,CAApB,CANH,CADgB;AAAA,CAAlB;;AAUAE,SAAS,CAACE,WAAV,GAAwB,uBAAxB;AACAF,SAAS,CAACH,QAAV,GAAqBA,QAArB;AAEA,eAAeG,SAAf"},"metadata":{},"sourceType":"module"}