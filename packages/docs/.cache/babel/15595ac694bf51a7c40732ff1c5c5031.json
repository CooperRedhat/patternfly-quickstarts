{"ast":null,"code":"import React from 'react';\nimport { AutoLinkHeader, Example, Link as PatternflyThemeLink } from 'theme-patternfly-org/components';\nvar pageData = {\n  \"id\": \"Button\",\n  \"section\": \"components\",\n  \"source\": \"accessibility\",\n  \"slug\": \"/components/button/accessibility\",\n  \"sourceLink\": \"https://github.com/patternfly/patternfly-org/blob/main/packages/docs/src/content/accessibility/button/button.md\"\n};\npageData.examples = {};\n\nvar Component = function Component() {\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"p\", {\n    \"className\": \"ws-p\"\n  }, \"A \", /*#__PURE__*/React.createElement(\"strong\", null, \"button\"), \" is a box area or text that communicates and triggers user actions when clicked or selected. Buttons are interactive elements.\"), /*#__PURE__*/React.createElement(\"p\", {\n    \"className\": \"ws-p\"\n  }, /*#__PURE__*/React.createElement(\"strong\", null, \"Keyboard users\"), \" should be able to focus on the button using \", /*#__PURE__*/React.createElement(\"strong\", null, \"Tab\"), \" to move forward and \", /*#__PURE__*/React.createElement(\"strong\", null, \"Tab + Shift\"), \" to move backwards through interactive elements. They should be able to select a focused button using \", /*#__PURE__*/React.createElement(\"strong\", null, \"Space\"), \" or \", /*#__PURE__*/React.createElement(\"strong\", null, \"Enter\"), \".\"), /*#__PURE__*/React.createElement(\"p\", {\n    \"className\": \"ws-p\"\n  }, /*#__PURE__*/React.createElement(\"strong\", null, \"Screen reader users\"), \" should be able to navigate to the button and it should have text that can be read by a screen reader, or alternative text if it only contains an icon. For alternative text, \", /*#__PURE__*/React.createElement(\"code\", {\n    \"className\": \"ws-code\"\n  }, \"aria-label\"), \" is the most common choice.\"), /*#__PURE__*/React.createElement(AutoLinkHeader, {\n    \"id\": \"accessibility-application\",\n    \"size\": \"h2\",\n    \"className\": \"ws-title ws-h2\"\n  }, \"Accessibility application:\"), /*#__PURE__*/React.createElement(\"ul\", {\n    \"className\": \"ws-ul\"\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    \"className\": \"ws-li\"\n  }, \"A button containing only an icon without supporting text should be labeled with the \", /*#__PURE__*/React.createElement(\"code\", {\n    \"className\": \"ws-code\"\n  }, \"aria-label\"), \" prop.\"), /*#__PURE__*/React.createElement(\"li\", {\n    \"className\": \"ws-li\"\n  }, \"A regular disabled button is not focusable, but an aria-disabled button is. \", /*#__PURE__*/React.createElement(\"code\", {\n    \"className\": \"ws-code\"\n  }, \"isAriaDisabled\"), \" should be used when a disabled button provides interactive elements (like a tooltip).\"), /*#__PURE__*/React.createElement(\"li\", {\n    \"className\": \"ws-li\"\n  }, \"Screen readers may read buttons to users out of context. For example, screen reader users can navigate a page specifically by form controls. So button text should be unique and easily understood on its own. Refer to PatternFly's accessibility guide for more information.\")), /*#__PURE__*/React.createElement(\"p\", {\n    \"className\": \"ws-p\"\n  }, \"The following props can be added or are customizable in PatternFly:\"), /*#__PURE__*/React.createElement(\"table\", {\n    \"className\": \"ws-table pf-c-table pf-m-grid-lg pf-m-compact\",\n    \"role\": \"grid\"\n  }, /*#__PURE__*/React.createElement(\"thead\", null, /*#__PURE__*/React.createElement(\"tr\", {\n    \"role\": \"row\"\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    \"className\": \" pf-m-wrap\",\n    \"role\": \"columnheader\",\n    \"scope\": \"col\"\n  }, /*#__PURE__*/React.createElement(\"div\", null, \"React prop\")), /*#__PURE__*/React.createElement(\"th\", {\n    \"className\": \" pf-m-wrap\",\n    \"role\": \"columnheader\",\n    \"scope\": \"col\"\n  }, /*#__PURE__*/React.createElement(\"div\", null, \"React component that it should be applied to\")), /*#__PURE__*/React.createElement(\"th\", {\n    \"className\": \" pf-m-wrap\",\n    \"role\": \"columnheader\",\n    \"scope\": \"col\"\n  }, /*#__PURE__*/React.createElement(\"div\", null, \"Which HTML element it appears on in markup\")), /*#__PURE__*/React.createElement(\"th\", {\n    \"className\": \" pf-m-wrap\",\n    \"role\": \"columnheader\",\n    \"scope\": \"col\"\n  }, /*#__PURE__*/React.createElement(\"div\", null, \"Reason used\")))), /*#__PURE__*/React.createElement(\"tbody\", {\n    \"role\": \"rowgroup\"\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    \"role\": \"row\"\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    \"role\": \"cell\",\n    \"data-label\": \"React prop\"\n  }, /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(\"code\", {\n    \"className\": \"ws-code\"\n  }, \"aria-label\"))), /*#__PURE__*/React.createElement(\"td\", {\n    \"role\": \"cell\",\n    \"data-label\": \"React component that it should be applied to\"\n  }, /*#__PURE__*/React.createElement(\"div\", null, \"Button\")), /*#__PURE__*/React.createElement(\"td\", {\n    \"role\": \"cell\",\n    \"data-label\": \"Which HTML element it appears on in markup\"\n  }, /*#__PURE__*/React.createElement(\"div\", null, \".pf-c-button.pf-m-plain\")), /*#__PURE__*/React.createElement(\"td\", {\n    \"role\": \"cell\",\n    \"data-label\": \"Reason used\"\n  }, /*#__PURE__*/React.createElement(\"div\", null, \"Adds accessible text to the button if the button doesn\\u2019t contain descriptive text on its own.\"))), /*#__PURE__*/React.createElement(\"tr\", {\n    \"role\": \"row\"\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    \"role\": \"cell\",\n    \"data-label\": \"React prop\"\n  }, /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(\"code\", {\n    \"className\": \"ws-code\"\n  }, \"isAriaDisabled\"))), /*#__PURE__*/React.createElement(\"td\", {\n    \"role\": \"cell\",\n    \"data-label\": \"React component that it should be applied to\"\n  }, /*#__PURE__*/React.createElement(\"div\", null, \"Button\")), /*#__PURE__*/React.createElement(\"td\", {\n    \"role\": \"cell\",\n    \"data-label\": \"Which HTML element it appears on in markup\"\n  }, /*#__PURE__*/React.createElement(\"div\", null, \"button.pf-c-button\")), /*#__PURE__*/React.createElement(\"td\", {\n    \"role\": \"cell\",\n    \"data-label\": \"Reason used\"\n  }, /*#__PURE__*/React.createElement(\"div\", null, \"Adds disabled styling and communicates that the button is disabled using the aria-disabled html attribute\"))))));\n};\n\nComponent.displayName = 'ComponentsButtonAccessibilityDocs';\nComponent.pageData = pageData;\nexport default Component;","map":{"version":3,"names":["React","AutoLinkHeader","Example","Link","PatternflyThemeLink","pageData","examples","Component","displayName"],"sources":["/Users/jschuler/Code/patternfly-quickstarts/packages/docs/src/generated/components/button/accessibility.js"],"sourcesContent":["import React from 'react';\nimport { AutoLinkHeader, Example, Link as PatternflyThemeLink } from 'theme-patternfly-org/components';\n\nconst pageData = {\n  \"id\": \"Button\",\n  \"section\": \"components\",\n  \"source\": \"accessibility\",\n  \"slug\": \"/components/button/accessibility\",\n  \"sourceLink\": \"https://github.com/patternfly/patternfly-org/blob/main/packages/docs/src/content/accessibility/button/button.md\"\n};\npageData.examples = {\n  \n};\n\nconst Component = () => (\n  <React.Fragment>\n    <p {...{\"className\":\"ws-p\"}}>\n      {`A `}\n      <strong>\n        {`button`}\n      </strong>\n      {` is a box area or text that communicates and triggers user actions when clicked or selected. Buttons are interactive elements.`}\n    </p>\n    <p {...{\"className\":\"ws-p\"}}>\n      <strong>\n        {`Keyboard users`}\n      </strong>\n      {` should be able to focus on the button using `}\n      <strong>\n        {`Tab`}\n      </strong>\n      {` to move forward and `}\n      <strong>\n        {`Tab + Shift`}\n      </strong>\n      {` to move backwards through interactive elements. They should be able to select a focused button using `}\n      <strong>\n        {`Space`}\n      </strong>\n      {` or `}\n      <strong>\n        {`Enter`}\n      </strong>\n      {`.`}\n    </p>\n    <p {...{\"className\":\"ws-p\"}}>\n      <strong>\n        {`Screen reader users`}\n      </strong>\n      {` should be able to navigate to the button and it should have text that can be read by a screen reader, or alternative text if it only contains an icon. For alternative text, `}\n      <code {...{\"className\":\"ws-code\"}}>\n        {`aria-label`}\n      </code>\n      {` is the most common choice.`}\n    </p>\n    <AutoLinkHeader {...{\"id\":\"accessibility-application\",\"size\":\"h2\",\"className\":\"ws-title ws-h2\"}}>\n      {`Accessibility application:`}\n    </AutoLinkHeader>\n    <ul {...{\"className\":\"ws-ul\"}}>\n      <li {...{\"className\":\"ws-li\"}}>\n        {`A button containing only an icon without supporting text should be labeled with the `}\n        <code {...{\"className\":\"ws-code\"}}>\n          {`aria-label`}\n        </code>\n        {` prop.`}\n      </li>\n      <li {...{\"className\":\"ws-li\"}}>\n        {`A regular disabled button is not focusable, but an aria-disabled button is. `}\n        <code {...{\"className\":\"ws-code\"}}>\n          {`isAriaDisabled`}\n        </code>\n        {` should be used when a disabled button provides interactive elements (like a tooltip).`}\n      </li>\n      <li {...{\"className\":\"ws-li\"}}>\n        {`Screen readers may read buttons to users out of context. For example, screen reader users can navigate a page specifically by form controls. So button text should be unique and easily understood on its own. Refer to PatternFly's accessibility guide for more information.`}\n      </li>\n    </ul>\n    <p {...{\"className\":\"ws-p\"}}>\n      {`The following props can be added or are customizable in PatternFly:`}\n    </p>\n    <table {...{\"className\":\"ws-table pf-c-table pf-m-grid-lg pf-m-compact\",\"role\":\"grid\"}}>\n      <thead>\n        <tr {...{\"role\":\"row\"}}>\n          <th {...{\"className\":\" pf-m-wrap\",\"role\":\"columnheader\",\"scope\":\"col\"}}>\n            <div>\n              {`React prop`}\n            </div>\n          </th>\n          <th {...{\"className\":\" pf-m-wrap\",\"role\":\"columnheader\",\"scope\":\"col\"}}>\n            <div>\n              {`React component that it should be applied to`}\n            </div>\n          </th>\n          <th {...{\"className\":\" pf-m-wrap\",\"role\":\"columnheader\",\"scope\":\"col\"}}>\n            <div>\n              {`Which HTML element it appears on in markup`}\n            </div>\n          </th>\n          <th {...{\"className\":\" pf-m-wrap\",\"role\":\"columnheader\",\"scope\":\"col\"}}>\n            <div>\n              {`Reason used`}\n            </div>\n          </th>\n        </tr>\n      </thead>\n      <tbody {...{\"role\":\"rowgroup\"}}>\n        <tr {...{\"role\":\"row\"}}>\n          <td {...{\"role\":\"cell\",\"data-label\":\"React prop\"}}>\n            <div>\n              <code {...{\"className\":\"ws-code\"}}>\n                {`aria-label`}\n              </code>\n            </div>\n          </td>\n          <td {...{\"role\":\"cell\",\"data-label\":\"React component that it should be applied to\"}}>\n            <div>\n              {`Button`}\n            </div>\n          </td>\n          <td {...{\"role\":\"cell\",\"data-label\":\"Which HTML element it appears on in markup\"}}>\n            <div>\n              {`.pf-c-button.pf-m-plain`}\n            </div>\n          </td>\n          <td {...{\"role\":\"cell\",\"data-label\":\"Reason used\"}}>\n            <div>\n              {`Adds accessible text to the button if the button doesn’t contain descriptive text on its own.`}\n            </div>\n          </td>\n        </tr>\n        <tr {...{\"role\":\"row\"}}>\n          <td {...{\"role\":\"cell\",\"data-label\":\"React prop\"}}>\n            <div>\n              <code {...{\"className\":\"ws-code\"}}>\n                {`isAriaDisabled`}\n              </code>\n            </div>\n          </td>\n          <td {...{\"role\":\"cell\",\"data-label\":\"React component that it should be applied to\"}}>\n            <div>\n              {`Button`}\n            </div>\n          </td>\n          <td {...{\"role\":\"cell\",\"data-label\":\"Which HTML element it appears on in markup\"}}>\n            <div>\n              {`button.pf-c-button`}\n            </div>\n          </td>\n          <td {...{\"role\":\"cell\",\"data-label\":\"Reason used\"}}>\n            <div>\n              {`Adds disabled styling and communicates that the button is disabled using the aria-disabled html attribute`}\n            </div>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </React.Fragment>\n);\nComponent.displayName = 'ComponentsButtonAccessibilityDocs';\nComponent.pageData = pageData;\n\nexport default Component;\n"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,EAAyBC,OAAzB,EAAkCC,IAAI,IAAIC,mBAA1C,QAAqE,iCAArE;AAEA,IAAMC,QAAQ,GAAG;EACf,MAAM,QADS;EAEf,WAAW,YAFI;EAGf,UAAU,eAHK;EAIf,QAAQ,kCAJO;EAKf,cAAc;AALC,CAAjB;AAOAA,QAAQ,CAACC,QAAT,GAAoB,EAApB;;AAIA,IAAMC,SAAS,GAAG,SAAZA,SAAY;EAAA,oBAChB,oBAAC,KAAD,CAAO,QAAP,qBACE;IAAQ,aAAY;EAApB,sBAEE,6CAFF,mIADF,eAQE;IAAQ,aAAY;EAApB,gBACE,qDADF,gEAKE,0CALF,wCASE,kDATF,yHAaE,4CAbF,uBAiBE,4CAjBF,MARF,eA8BE;IAAQ,aAAY;EAApB,gBACE,0DADF,iMAKE;IAAW,aAAY;EAAvB,gBALF,gCA9BF,eAwCE,oBAAC,cAAD;IAAqB,MAAK,2BAA1B;IAAsD,QAAO,IAA7D;IAAkE,aAAY;EAA9E,gCAxCF,eA2CE;IAAS,aAAY;EAArB,gBACE;IAAS,aAAY;EAArB,wGAEE;IAAW,aAAY;EAAvB,gBAFF,WADF,eAQE;IAAS,aAAY;EAArB,gGAEE;IAAW,aAAY;EAAvB,oBAFF,2FARF,eAeE;IAAS,aAAY;EAArB,oRAfF,CA3CF,eA8DE;IAAQ,aAAY;EAApB,yEA9DF,eAiEE;IAAY,aAAY,+CAAxB;IAAwE,QAAO;EAA/E,gBACE,gDACE;IAAS,QAAO;EAAhB,gBACE;IAAS,aAAY,YAArB;IAAkC,QAAO,cAAzC;IAAwD,SAAQ;EAAhE,gBACE,8CADF,CADF,eAME;IAAS,aAAY,YAArB;IAAkC,QAAO,cAAzC;IAAwD,SAAQ;EAAhE,gBACE,gFADF,CANF,eAWE;IAAS,aAAY,YAArB;IAAkC,QAAO,cAAzC;IAAwD,SAAQ;EAAhE,gBACE,8EADF,CAXF,eAgBE;IAAS,aAAY,YAArB;IAAkC,QAAO,cAAzC;IAAwD,SAAQ;EAAhE,gBACE,+CADF,CAhBF,CADF,CADF,eAyBE;IAAY,QAAO;EAAnB,gBACE;IAAS,QAAO;EAAhB,gBACE;IAAS,QAAO,MAAhB;IAAuB,cAAa;EAApC,gBACE,8CACE;IAAW,aAAY;EAAvB,gBADF,CADF,CADF,eAQE;IAAS,QAAO,MAAhB;IAAuB,cAAa;EAApC,gBACE,0CADF,CARF,eAaE;IAAS,QAAO,MAAhB;IAAuB,cAAa;EAApC,gBACE,2DADF,CAbF,eAkBE;IAAS,QAAO,MAAhB;IAAuB,cAAa;EAApC,gBACE,sIADF,CAlBF,CADF,eAyBE;IAAS,QAAO;EAAhB,gBACE;IAAS,QAAO,MAAhB;IAAuB,cAAa;EAApC,gBACE,8CACE;IAAW,aAAY;EAAvB,oBADF,CADF,CADF,eAQE;IAAS,QAAO,MAAhB;IAAuB,cAAa;EAApC,gBACE,0CADF,CARF,eAaE;IAAS,QAAO,MAAhB;IAAuB,cAAa;EAApC,gBACE,sDADF,CAbF,eAkBE;IAAS,QAAO,MAAhB;IAAuB,cAAa;EAApC,gBACE,6IADF,CAlBF,CAzBF,CAzBF,CAjEF,CADgB;AAAA,CAAlB;;AAgJAA,SAAS,CAACC,WAAV,GAAwB,mCAAxB;AACAD,SAAS,CAACF,QAAV,GAAqBA,QAArB;AAEA,eAAeE,SAAf"},"metadata":{},"sourceType":"module"}