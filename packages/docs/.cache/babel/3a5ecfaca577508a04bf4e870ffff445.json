{"ast":null,"code":"function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport { AutoLinkHeader, Example, Link as PatternflyThemeLink } from 'theme-patternfly-org/components';\nvar pageData = {\n  \"id\": \"Progress\",\n  \"section\": \"components\",\n  \"source\": \"react\",\n  \"slug\": \"/components/progress/react\",\n  \"sourceLink\": \"https://github.com/patternfly/patternfly-react/blob/main/packages/docs/packages/react-core/src/components/Progress/examples/Progress.md\",\n  \"propComponents\": [{\n    \"name\": \"Progress\",\n    \"description\": \"\",\n    \"props\": [{\n      \"name\": \"aria-label\",\n      \"type\": \"string\",\n      \"description\": \"Adds accessible text to the ProgressBar. Required when title not used and there is not any label associated with the progress bar\",\n      \"defaultValue\": \"null\"\n    }, {\n      \"name\": \"aria-labelledby\",\n      \"type\": \"string\",\n      \"description\": \"Associates the ProgressBar with it's label for accessibility purposes. Required when title not used\",\n      \"defaultValue\": \"null\"\n    }, {\n      \"name\": \"className\",\n      \"type\": \"string\",\n      \"description\": \"Classname for progress component.\",\n      \"defaultValue\": \"''\"\n    }, {\n      \"name\": \"id\",\n      \"type\": \"string\",\n      \"description\": \"DOM id for progress component.\",\n      \"defaultValue\": \"''\"\n    }, {\n      \"name\": \"isTitleTruncated\",\n      \"type\": \"boolean\",\n      \"description\": \"Indicate whether to truncate the string title\",\n      \"defaultValue\": \"false\"\n    }, {\n      \"name\": \"label\",\n      \"type\": \"React.ReactNode\",\n      \"description\": \"Text description of current progress value to display instead of percentage.\",\n      \"defaultValue\": \"null\"\n    }, {\n      \"name\": \"max\",\n      \"type\": \"number\",\n      \"description\": \"Maximum value of progress.\",\n      \"defaultValue\": \"100\"\n    }, {\n      \"name\": \"measureLocation\",\n      \"type\": \"'outside' | 'inside' | 'top' | 'none'\",\n      \"description\": \"Where the measure percent will be located.\",\n      \"defaultValue\": \"ProgressMeasureLocation.top\"\n    }, {\n      \"name\": \"min\",\n      \"type\": \"number\",\n      \"description\": \"Minimal value of progress.\",\n      \"defaultValue\": \"0\"\n    }, {\n      \"name\": \"size\",\n      \"type\": \"'sm' | 'md' | 'lg'\",\n      \"description\": \"Size variant of progress.\",\n      \"defaultValue\": \"null\"\n    }, {\n      \"name\": \"title\",\n      \"type\": \"React.ReactNode\",\n      \"description\": \"Title above progress. The isTitleTruncated property will only affect string titles. Node title truncation must be handled manually.\",\n      \"defaultValue\": \"''\"\n    }, {\n      \"name\": \"tooltipPosition\",\n      \"type\": \"'auto' | 'top' | 'bottom' | 'left' | 'right'\",\n      \"description\": \"Position of the tooltip which is displayed if title is truncated\",\n      \"defaultValue\": \"'top'\"\n    }, {\n      \"name\": \"value\",\n      \"type\": \"number\",\n      \"description\": \"Actual value of progress.\",\n      \"defaultValue\": \"0\"\n    }, {\n      \"name\": \"valueText\",\n      \"type\": \"string\",\n      \"description\": \"Accessible text description of current progress value, for when value is not a percentage. Use with label.\",\n      \"defaultValue\": \"null\"\n    }, {\n      \"name\": \"variant\",\n      \"type\": \"'danger' | 'success' | 'warning'\",\n      \"description\": \"Status variant of progress.\",\n      \"defaultValue\": \"null\"\n    }]\n  }],\n  \"cssPrefix\": [\"pf-c-progress\"],\n  \"examples\": [\"Basic\", \"Small\", \"Large\", \"Outside\", \"Inside\", \"Success\", \"Failure\", \"Warning\", \"Inside success\", \"Outside failure\", \"Single line\", \"Without measure\", \"Failure without measure\", \"Finite step\", \"Progress (step instruction)\", \"Truncate title\", \"Title outside of progress bar\"]\n};\npageData.examples = {\n  'Basic': function Basic(props) {\n    return /*#__PURE__*/React.createElement(Example, _extends({}, pageData, props, {\n      \"code\": \"import React from 'react';\\nimport { Progress, ProgressSize, ProgressMeasureLocation, ProgressVariant } from '@patternfly/react-core';\\n\\nconst Basic = () => <Progress value={33} title=\\\"Title\\\" />\",\n      \"title\": \"Basic\",\n      \"lang\": \"ts\"\n    }));\n  },\n  'Small': function Small(props) {\n    return /*#__PURE__*/React.createElement(Example, _extends({}, pageData, props, {\n      \"code\": \"import React from 'react';\\nimport { Progress, ProgressSize, ProgressMeasureLocation, ProgressVariant } from '@patternfly/react-core';\\n\\nconst Small = () => <Progress value={33} title=\\\"Title\\\" size={ProgressSize.sm} />\",\n      \"title\": \"Small\",\n      \"lang\": \"ts\"\n    }));\n  },\n  'Large': function Large(props) {\n    return /*#__PURE__*/React.createElement(Example, _extends({}, pageData, props, {\n      \"code\": \"import React from 'react';\\nimport { Progress, ProgressSize, ProgressMeasureLocation, ProgressVariant } from '@patternfly/react-core';\\n\\nconst Large = () => <Progress value={33} title=\\\"Title\\\" size={ProgressSize.lg} />\",\n      \"title\": \"Large\",\n      \"lang\": \"ts\"\n    }));\n  },\n  'Outside': function Outside(props) {\n    return /*#__PURE__*/React.createElement(Example, _extends({}, pageData, props, {\n      \"code\": \"import React from 'react';\\nimport { Progress, ProgressSize, ProgressMeasureLocation, ProgressVariant } from '@patternfly/react-core';\\n\\nconst Outside = () => <Progress value={33} title=\\\"Title\\\" measureLocation={ProgressMeasureLocation.outside} />\",\n      \"title\": \"Outside\",\n      \"lang\": \"ts\"\n    }));\n  },\n  'Inside': function Inside(props) {\n    return /*#__PURE__*/React.createElement(Example, _extends({}, pageData, props, {\n      \"code\": \"import React from 'react';\\nimport { Progress, ProgressSize, ProgressMeasureLocation, ProgressVariant } from '@patternfly/react-core';\\n\\nconst Inside = () => <Progress value={33} title=\\\"Title\\\" measureLocation={ProgressMeasureLocation.inside} />\",\n      \"title\": \"Inside\",\n      \"lang\": \"ts\"\n    }));\n  },\n  'Success': function Success(props) {\n    return /*#__PURE__*/React.createElement(Example, _extends({}, pageData, props, {\n      \"code\": \"import React from 'react';\\nimport { Progress, ProgressSize, ProgressMeasureLocation, ProgressVariant } from '@patternfly/react-core';\\n\\nconst Success = () => <Progress value={100} title=\\\"Title\\\" variant={ProgressVariant.success} />\",\n      \"title\": \"Success\",\n      \"lang\": \"ts\"\n    }));\n  },\n  'Failure': function Failure(props) {\n    return /*#__PURE__*/React.createElement(Example, _extends({}, pageData, props, {\n      \"code\": \"import React from 'react';\\nimport { Progress, ProgressSize, ProgressMeasureLocation, ProgressVariant } from '@patternfly/react-core';\\n\\nconst Failure = () => <Progress value={33} title=\\\"Title\\\" variant={ProgressVariant.danger} />\",\n      \"title\": \"Failure\",\n      \"lang\": \"ts\"\n    }));\n  },\n  'Warning': function Warning(props) {\n    return /*#__PURE__*/React.createElement(Example, _extends({}, pageData, props, {\n      \"code\": \"import React from 'react';\\nimport { Progress, ProgressSize, ProgressMeasureLocation, ProgressVariant } from '@patternfly/react-core';\\n\\nconst Warning = () => <Progress value={90} title=\\\"Title\\\" variant={ProgressVariant.warning} />\",\n      \"title\": \"Warning\",\n      \"lang\": \"ts\"\n    }));\n  },\n  'Inside success': function InsideSuccess(props) {\n    return /*#__PURE__*/React.createElement(Example, _extends({}, pageData, props, {\n      \"code\": \"import React from 'react';\\nimport { Progress, ProgressSize, ProgressMeasureLocation, ProgressVariant } from '@patternfly/react-core';\\n\\nconst InsideSuccess = () => (\\n  <Progress\\n    value={100}\\n    title=\\\"Title\\\"\\n    measureLocation={ProgressMeasureLocation.inside}\\n    variant={ProgressVariant.success}\\n  />\\n)\",\n      \"title\": \"Inside success\",\n      \"lang\": \"ts\"\n    }));\n  },\n  'Outside failure': function OutsideFailure(props) {\n    return /*#__PURE__*/React.createElement(Example, _extends({}, pageData, props, {\n      \"code\": \"import React from 'react';\\nimport { Progress, ProgressMeasureLocation, ProgressVariant } from '@patternfly/react-core';\\n\\nconst OutsideFailure = () => (\\n  <Progress\\n    value={33}\\n    title=\\\"Title\\\"\\n    measureLocation={ProgressMeasureLocation.outside}\\n    variant={ProgressVariant.danger}\\n  />\\n)\",\n      \"title\": \"Outside failure\",\n      \"lang\": \"ts\"\n    }));\n  },\n  'Single line': function SingleLine(props) {\n    return /*#__PURE__*/React.createElement(Example, _extends({}, pageData, props, {\n      \"code\": \"import React from 'react';\\nimport { Progress, ProgressMeasureLocation, ProgressVariant } from '@patternfly/react-core';\\n\\nconst SingleLine = () => <Progress value={33} measureLocation={ProgressMeasureLocation.outside} aria-label=\\\"Title\\\"/>\",\n      \"title\": \"Single line\",\n      \"lang\": \"ts\"\n    }));\n  },\n  'Without measure': function WithoutMeasure(props) {\n    return /*#__PURE__*/React.createElement(Example, _extends({}, pageData, props, {\n      \"code\": \"import React from 'react';\\nimport { Progress, ProgressMeasureLocation } from '@patternfly/react-core';\\n\\nconst WithoutMeasure = () => <Progress value={33} title=\\\"Title\\\" measureLocation={ProgressMeasureLocation.none} />\",\n      \"title\": \"Without measure\",\n      \"lang\": \"ts\"\n    }));\n  },\n  'Failure without measure': function FailureWithoutMeasure(props) {\n    return /*#__PURE__*/React.createElement(Example, _extends({}, pageData, props, {\n      \"code\": \"import React from 'react';\\nimport { Progress, ProgressMeasureLocation, ProgressVariant } from '@patternfly/react-core';\\n\\nconst FailureWithoutMeasure = () => (\\n  <Progress\\n    value={33}\\n    title=\\\"Title\\\"\\n    measureLocation={ProgressMeasureLocation.none}\\n    variant={ProgressVariant.danger}\\n  />\\n)\",\n      \"title\": \"Failure without measure\",\n      \"lang\": \"ts\"\n    }));\n  },\n  'Finite step': function FiniteStep(props) {\n    return /*#__PURE__*/React.createElement(Example, _extends({}, pageData, props, {\n      \"code\": \"import React from 'react';\\nimport { Progress, ProgressMeasureLocation } from '@patternfly/react-core';\\n\\nconst FiniteStep = () => <Progress value={2} min={0} max={5} title=\\\"Title\\\" measureLocation={ProgressMeasureLocation.top} label=\\\"2 of 5\\\" valueText=\\\"2 of 5\\\"/>\",\n      \"title\": \"Finite step\",\n      \"lang\": \"ts\"\n    }));\n  },\n  'Progress (step instruction)': function ProgressStepInstruction(props) {\n    return /*#__PURE__*/React.createElement(Example, _extends({}, pageData, props, {\n      \"code\": \"import React from 'react';\\nimport { Progress} from '@patternfly/react-core';\\n\\nconst ProgressstepInstruction = () => <Progress value={2} title=\\\"Title\\\" min={0} max={5} label=\\\"Step 2: Copying files\\\" valueText=\\\"Step 2: Copying files\\\" />\",\n      \"title\": \"Progress (step instruction)\",\n      \"lang\": \"ts\"\n    }));\n  },\n  'Truncate title': function TruncateTitle(props) {\n    return /*#__PURE__*/React.createElement(Example, _extends({}, pageData, props, {\n      \"code\": \"import React from 'react';\\nimport { Progress } from '@patternfly/react-core';\\n\\nconst TruncateTitle = () => <Progress value={33} title=\\\"Very very very very very very very very very very very long title which should be truncated if it does not fit onto one line above the progress bar\\\" isTitleTruncated />\",\n      \"title\": \"Truncate title\",\n      \"lang\": \"ts\"\n    }));\n  },\n  'Title outside of progress bar': function TitleOutsideOfProgressBar(props) {\n    return /*#__PURE__*/React.createElement(Example, _extends({}, pageData, props, {\n      \"code\": \"import React from 'react';\\nimport {\\n    DescriptionList, \\n    DescriptionListGroup, \\n    DescriptionListTerm, \\n    DescriptionListDescription,\\n    Progress, \\n    ProgressMeasureLocation,\\n} from '@patternfly/react-core';\\n\\nconst TitleOutsideOfProgressBar = () => (\\n  <DescriptionList>\\n    <DescriptionListGroup>\\n      <DescriptionListTerm id=\\\"progress-label\\\">\\n          Title outside of progress bar\\n      </DescriptionListTerm>\\n      <DescriptionListDescription>\\n        <Progress value={33} measureLocation={ProgressMeasureLocation.outside} aria-labelledby=\\\"progress-label\\\"/>\\n      </DescriptionListDescription>\\n    </DescriptionListGroup>\\n  </DescriptionList>\\n)\",\n      \"title\": \"Title outside of progress bar\",\n      \"lang\": \"ts\"\n    }));\n  }\n};\n\nvar Component = function Component() {\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(AutoLinkHeader, {\n    \"id\": \"examples\",\n    \"size\": \"h2\",\n    \"className\": \"ws-title ws-h2\"\n  }, \"Examples\"), React.createElement(pageData.examples[\"Basic\"]), React.createElement(pageData.examples[\"Small\"]), React.createElement(pageData.examples[\"Large\"]), React.createElement(pageData.examples[\"Outside\"]), React.createElement(pageData.examples[\"Inside\"]), React.createElement(pageData.examples[\"Success\"]), React.createElement(pageData.examples[\"Failure\"]), React.createElement(pageData.examples[\"Warning\"]), React.createElement(pageData.examples[\"Inside success\"]), React.createElement(pageData.examples[\"Outside failure\"]), React.createElement(pageData.examples[\"Single line\"]), React.createElement(pageData.examples[\"Without measure\"]), React.createElement(pageData.examples[\"Failure without measure\"]), React.createElement(pageData.examples[\"Finite step\"]), React.createElement(pageData.examples[\"Progress (step instruction)\"]), React.createElement(pageData.examples[\"Truncate title\"]), React.createElement(pageData.examples[\"Title outside of progress bar\"]));\n};\n\nComponent.displayName = 'ComponentsProgressReactDocs';\nComponent.pageData = pageData;\nexport default Component;","map":{"version":3,"names":["React","AutoLinkHeader","Example","Link","PatternflyThemeLink","pageData","examples","props","Component","createElement","displayName"],"sources":["/Users/jschuler/Code/patternfly-quickstarts/packages/docs/src/generated/components/progress/react.js"],"sourcesContent":["import React from 'react';\nimport { AutoLinkHeader, Example, Link as PatternflyThemeLink } from 'theme-patternfly-org/components';\n\nconst pageData = {\n  \"id\": \"Progress\",\n  \"section\": \"components\",\n  \"source\": \"react\",\n  \"slug\": \"/components/progress/react\",\n  \"sourceLink\": \"https://github.com/patternfly/patternfly-react/blob/main/packages/docs/packages/react-core/src/components/Progress/examples/Progress.md\",\n  \"propComponents\": [\n    {\n      \"name\": \"Progress\",\n      \"description\": \"\",\n      \"props\": [\n        {\n          \"name\": \"aria-label\",\n          \"type\": \"string\",\n          \"description\": \"Adds accessible text to the ProgressBar. Required when title not used and there is not any label associated with the progress bar\",\n          \"defaultValue\": \"null\"\n        },\n        {\n          \"name\": \"aria-labelledby\",\n          \"type\": \"string\",\n          \"description\": \"Associates the ProgressBar with it's label for accessibility purposes. Required when title not used\",\n          \"defaultValue\": \"null\"\n        },\n        {\n          \"name\": \"className\",\n          \"type\": \"string\",\n          \"description\": \"Classname for progress component.\",\n          \"defaultValue\": \"''\"\n        },\n        {\n          \"name\": \"id\",\n          \"type\": \"string\",\n          \"description\": \"DOM id for progress component.\",\n          \"defaultValue\": \"''\"\n        },\n        {\n          \"name\": \"isTitleTruncated\",\n          \"type\": \"boolean\",\n          \"description\": \"Indicate whether to truncate the string title\",\n          \"defaultValue\": \"false\"\n        },\n        {\n          \"name\": \"label\",\n          \"type\": \"React.ReactNode\",\n          \"description\": \"Text description of current progress value to display instead of percentage.\",\n          \"defaultValue\": \"null\"\n        },\n        {\n          \"name\": \"max\",\n          \"type\": \"number\",\n          \"description\": \"Maximum value of progress.\",\n          \"defaultValue\": \"100\"\n        },\n        {\n          \"name\": \"measureLocation\",\n          \"type\": \"'outside' | 'inside' | 'top' | 'none'\",\n          \"description\": \"Where the measure percent will be located.\",\n          \"defaultValue\": \"ProgressMeasureLocation.top\"\n        },\n        {\n          \"name\": \"min\",\n          \"type\": \"number\",\n          \"description\": \"Minimal value of progress.\",\n          \"defaultValue\": \"0\"\n        },\n        {\n          \"name\": \"size\",\n          \"type\": \"'sm' | 'md' | 'lg'\",\n          \"description\": \"Size variant of progress.\",\n          \"defaultValue\": \"null\"\n        },\n        {\n          \"name\": \"title\",\n          \"type\": \"React.ReactNode\",\n          \"description\": \"Title above progress. The isTitleTruncated property will only affect string titles. Node title truncation must be handled manually.\",\n          \"defaultValue\": \"''\"\n        },\n        {\n          \"name\": \"tooltipPosition\",\n          \"type\": \"'auto' | 'top' | 'bottom' | 'left' | 'right'\",\n          \"description\": \"Position of the tooltip which is displayed if title is truncated\",\n          \"defaultValue\": \"'top'\"\n        },\n        {\n          \"name\": \"value\",\n          \"type\": \"number\",\n          \"description\": \"Actual value of progress.\",\n          \"defaultValue\": \"0\"\n        },\n        {\n          \"name\": \"valueText\",\n          \"type\": \"string\",\n          \"description\": \"Accessible text description of current progress value, for when value is not a percentage. Use with label.\",\n          \"defaultValue\": \"null\"\n        },\n        {\n          \"name\": \"variant\",\n          \"type\": \"'danger' | 'success' | 'warning'\",\n          \"description\": \"Status variant of progress.\",\n          \"defaultValue\": \"null\"\n        }\n      ]\n    }\n  ],\n  \"cssPrefix\": [\n    \"pf-c-progress\"\n  ],\n  \"examples\": [\n    \"Basic\",\n    \"Small\",\n    \"Large\",\n    \"Outside\",\n    \"Inside\",\n    \"Success\",\n    \"Failure\",\n    \"Warning\",\n    \"Inside success\",\n    \"Outside failure\",\n    \"Single line\",\n    \"Without measure\",\n    \"Failure without measure\",\n    \"Finite step\",\n    \"Progress (step instruction)\",\n    \"Truncate title\",\n    \"Title outside of progress bar\"\n  ]\n};\npageData.examples = {\n  'Basic': props => \n    <Example {...pageData} {...props} {...{\"code\":\"import React from 'react';\\nimport { Progress, ProgressSize, ProgressMeasureLocation, ProgressVariant } from '@patternfly/react-core';\\n\\nconst Basic = () => <Progress value={33} title=\\\"Title\\\" />\",\"title\":\"Basic\",\"lang\":\"ts\"}}>\n      \n    </Example>,\n  'Small': props => \n    <Example {...pageData} {...props} {...{\"code\":\"import React from 'react';\\nimport { Progress, ProgressSize, ProgressMeasureLocation, ProgressVariant } from '@patternfly/react-core';\\n\\nconst Small = () => <Progress value={33} title=\\\"Title\\\" size={ProgressSize.sm} />\",\"title\":\"Small\",\"lang\":\"ts\"}}>\n      \n    </Example>,\n  'Large': props => \n    <Example {...pageData} {...props} {...{\"code\":\"import React from 'react';\\nimport { Progress, ProgressSize, ProgressMeasureLocation, ProgressVariant } from '@patternfly/react-core';\\n\\nconst Large = () => <Progress value={33} title=\\\"Title\\\" size={ProgressSize.lg} />\",\"title\":\"Large\",\"lang\":\"ts\"}}>\n      \n    </Example>,\n  'Outside': props => \n    <Example {...pageData} {...props} {...{\"code\":\"import React from 'react';\\nimport { Progress, ProgressSize, ProgressMeasureLocation, ProgressVariant } from '@patternfly/react-core';\\n\\nconst Outside = () => <Progress value={33} title=\\\"Title\\\" measureLocation={ProgressMeasureLocation.outside} />\",\"title\":\"Outside\",\"lang\":\"ts\"}}>\n      \n    </Example>,\n  'Inside': props => \n    <Example {...pageData} {...props} {...{\"code\":\"import React from 'react';\\nimport { Progress, ProgressSize, ProgressMeasureLocation, ProgressVariant } from '@patternfly/react-core';\\n\\nconst Inside = () => <Progress value={33} title=\\\"Title\\\" measureLocation={ProgressMeasureLocation.inside} />\",\"title\":\"Inside\",\"lang\":\"ts\"}}>\n      \n    </Example>,\n  'Success': props => \n    <Example {...pageData} {...props} {...{\"code\":\"import React from 'react';\\nimport { Progress, ProgressSize, ProgressMeasureLocation, ProgressVariant } from '@patternfly/react-core';\\n\\nconst Success = () => <Progress value={100} title=\\\"Title\\\" variant={ProgressVariant.success} />\",\"title\":\"Success\",\"lang\":\"ts\"}}>\n      \n    </Example>,\n  'Failure': props => \n    <Example {...pageData} {...props} {...{\"code\":\"import React from 'react';\\nimport { Progress, ProgressSize, ProgressMeasureLocation, ProgressVariant } from '@patternfly/react-core';\\n\\nconst Failure = () => <Progress value={33} title=\\\"Title\\\" variant={ProgressVariant.danger} />\",\"title\":\"Failure\",\"lang\":\"ts\"}}>\n      \n    </Example>,\n  'Warning': props => \n    <Example {...pageData} {...props} {...{\"code\":\"import React from 'react';\\nimport { Progress, ProgressSize, ProgressMeasureLocation, ProgressVariant } from '@patternfly/react-core';\\n\\nconst Warning = () => <Progress value={90} title=\\\"Title\\\" variant={ProgressVariant.warning} />\",\"title\":\"Warning\",\"lang\":\"ts\"}}>\n      \n    </Example>,\n  'Inside success': props => \n    <Example {...pageData} {...props} {...{\"code\":\"import React from 'react';\\nimport { Progress, ProgressSize, ProgressMeasureLocation, ProgressVariant } from '@patternfly/react-core';\\n\\nconst InsideSuccess = () => (\\n  <Progress\\n    value={100}\\n    title=\\\"Title\\\"\\n    measureLocation={ProgressMeasureLocation.inside}\\n    variant={ProgressVariant.success}\\n  />\\n)\",\"title\":\"Inside success\",\"lang\":\"ts\"}}>\n      \n    </Example>,\n  'Outside failure': props => \n    <Example {...pageData} {...props} {...{\"code\":\"import React from 'react';\\nimport { Progress, ProgressMeasureLocation, ProgressVariant } from '@patternfly/react-core';\\n\\nconst OutsideFailure = () => (\\n  <Progress\\n    value={33}\\n    title=\\\"Title\\\"\\n    measureLocation={ProgressMeasureLocation.outside}\\n    variant={ProgressVariant.danger}\\n  />\\n)\",\"title\":\"Outside failure\",\"lang\":\"ts\"}}>\n      \n    </Example>,\n  'Single line': props => \n    <Example {...pageData} {...props} {...{\"code\":\"import React from 'react';\\nimport { Progress, ProgressMeasureLocation, ProgressVariant } from '@patternfly/react-core';\\n\\nconst SingleLine = () => <Progress value={33} measureLocation={ProgressMeasureLocation.outside} aria-label=\\\"Title\\\"/>\",\"title\":\"Single line\",\"lang\":\"ts\"}}>\n      \n    </Example>,\n  'Without measure': props => \n    <Example {...pageData} {...props} {...{\"code\":\"import React from 'react';\\nimport { Progress, ProgressMeasureLocation } from '@patternfly/react-core';\\n\\nconst WithoutMeasure = () => <Progress value={33} title=\\\"Title\\\" measureLocation={ProgressMeasureLocation.none} />\",\"title\":\"Without measure\",\"lang\":\"ts\"}}>\n      \n    </Example>,\n  'Failure without measure': props => \n    <Example {...pageData} {...props} {...{\"code\":\"import React from 'react';\\nimport { Progress, ProgressMeasureLocation, ProgressVariant } from '@patternfly/react-core';\\n\\nconst FailureWithoutMeasure = () => (\\n  <Progress\\n    value={33}\\n    title=\\\"Title\\\"\\n    measureLocation={ProgressMeasureLocation.none}\\n    variant={ProgressVariant.danger}\\n  />\\n)\",\"title\":\"Failure without measure\",\"lang\":\"ts\"}}>\n      \n    </Example>,\n  'Finite step': props => \n    <Example {...pageData} {...props} {...{\"code\":\"import React from 'react';\\nimport { Progress, ProgressMeasureLocation } from '@patternfly/react-core';\\n\\nconst FiniteStep = () => <Progress value={2} min={0} max={5} title=\\\"Title\\\" measureLocation={ProgressMeasureLocation.top} label=\\\"2 of 5\\\" valueText=\\\"2 of 5\\\"/>\",\"title\":\"Finite step\",\"lang\":\"ts\"}}>\n      \n    </Example>,\n  'Progress (step instruction)': props => \n    <Example {...pageData} {...props} {...{\"code\":\"import React from 'react';\\nimport { Progress} from '@patternfly/react-core';\\n\\nconst ProgressstepInstruction = () => <Progress value={2} title=\\\"Title\\\" min={0} max={5} label=\\\"Step 2: Copying files\\\" valueText=\\\"Step 2: Copying files\\\" />\",\"title\":\"Progress (step instruction)\",\"lang\":\"ts\"}}>\n      \n    </Example>,\n  'Truncate title': props => \n    <Example {...pageData} {...props} {...{\"code\":\"import React from 'react';\\nimport { Progress } from '@patternfly/react-core';\\n\\nconst TruncateTitle = () => <Progress value={33} title=\\\"Very very very very very very very very very very very long title which should be truncated if it does not fit onto one line above the progress bar\\\" isTitleTruncated />\",\"title\":\"Truncate title\",\"lang\":\"ts\"}}>\n      \n    </Example>,\n  'Title outside of progress bar': props => \n    <Example {...pageData} {...props} {...{\"code\":\"import React from 'react';\\nimport {\\n    DescriptionList, \\n    DescriptionListGroup, \\n    DescriptionListTerm, \\n    DescriptionListDescription,\\n    Progress, \\n    ProgressMeasureLocation,\\n} from '@patternfly/react-core';\\n\\nconst TitleOutsideOfProgressBar = () => (\\n  <DescriptionList>\\n    <DescriptionListGroup>\\n      <DescriptionListTerm id=\\\"progress-label\\\">\\n          Title outside of progress bar\\n      </DescriptionListTerm>\\n      <DescriptionListDescription>\\n        <Progress value={33} measureLocation={ProgressMeasureLocation.outside} aria-labelledby=\\\"progress-label\\\"/>\\n      </DescriptionListDescription>\\n    </DescriptionListGroup>\\n  </DescriptionList>\\n)\",\"title\":\"Title outside of progress bar\",\"lang\":\"ts\"}}>\n      \n    </Example>\n};\n\nconst Component = () => (\n  <React.Fragment>\n    <AutoLinkHeader {...{\"id\":\"examples\",\"size\":\"h2\",\"className\":\"ws-title ws-h2\"}}>\n      {`Examples`}\n    </AutoLinkHeader>\n    {React.createElement(pageData.examples[\"Basic\"])}\n    {React.createElement(pageData.examples[\"Small\"])}\n    {React.createElement(pageData.examples[\"Large\"])}\n    {React.createElement(pageData.examples[\"Outside\"])}\n    {React.createElement(pageData.examples[\"Inside\"])}\n    {React.createElement(pageData.examples[\"Success\"])}\n    {React.createElement(pageData.examples[\"Failure\"])}\n    {React.createElement(pageData.examples[\"Warning\"])}\n    {React.createElement(pageData.examples[\"Inside success\"])}\n    {React.createElement(pageData.examples[\"Outside failure\"])}\n    {React.createElement(pageData.examples[\"Single line\"])}\n    {React.createElement(pageData.examples[\"Without measure\"])}\n    {React.createElement(pageData.examples[\"Failure without measure\"])}\n    {React.createElement(pageData.examples[\"Finite step\"])}\n    {React.createElement(pageData.examples[\"Progress (step instruction)\"])}\n    {React.createElement(pageData.examples[\"Truncate title\"])}\n    {React.createElement(pageData.examples[\"Title outside of progress bar\"])}\n  </React.Fragment>\n);\nComponent.displayName = 'ComponentsProgressReactDocs';\nComponent.pageData = pageData;\n\nexport default Component;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}