{"ast":null,"code":"import React from 'react';\nimport tokens from '@patternfly/react-tokens/dist/esm/patternfly_variables';\nimport AngleRightIcon from '@patternfly/react-icons/dist/esm/icons/angle-right-icon';\nimport { css } from '@patternfly/react-styles';\nimport { normalizeColor, getContrastRatio } from './helpers';\nimport './ColorFamily.css';\nvar palettePrefix = '--pf-global--palette--';\nexport function ColorFamily(_ref) {\n  var title = _ref.title,\n      family = _ref.family;\n\n  var _React$useState = React.useState([]),\n      expanded = _React$useState[0],\n      setExpanded = _React$useState[1];\n\n  var rootTokens = tokens[':root'];\n  var familyTokens = family === 'shadows' ? [rootTokens.global_BoxShadow_sm, rootTokens.global_BoxShadow_md, rootTokens.global_BoxShadow_lg] : Object.values(rootTokens).filter(function (token) {\n    return token.name.includes(\"\" + palettePrefix + family);\n  });\n\n  if (family === 'black') {\n    var whiteToken = rootTokens.global_palette_white;\n    familyTokens.unshift(whiteToken);\n  }\n\n  var expandAll = function expandAll() {\n    if (expanded.length > 0) {\n      setExpanded([]);\n    } else {\n      setExpanded(familyTokens.map(function (token) {\n        return token.name;\n      }));\n    }\n  };\n\n  var expand = function expand(name) {\n    if (expanded.includes(name)) {\n      setExpanded(expanded.filter(function (token) {\n        return token !== name;\n      }));\n    } else {\n      setExpanded(expanded.concat(name));\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"dl\", {\n    className: \"pf-c-accordion pf-u-p-0\"\n  }, /*#__PURE__*/React.createElement(\"dt\", {\n    className: css('pf-c-accordion__toggle', 'ws-color-family-accordion-toggle', expanded.length === familyTokens.length && 'pf-m-expanded'),\n    onClick: expandAll\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"pf-c-title pf-m-xl\"\n  }, /*#__PURE__*/React.createElement(AngleRightIcon, {\n    className: \"pf-c-accordion__toggle-icon ws-color-family-toggle-icon\"\n  }), title)), familyTokens.map(function (token) {\n    var isExpanded = expanded.includes(token.name);\n    var isShadows = family === 'shadows';\n    var tokenClass = css('pf-c-accordion__toggle', 'ws-color-family-toggle', isExpanded && 'pf-m-expanded');\n    var itemStyle = {\n      background: \"var(\" + token.name + \")\",\n      fontSize: 'var(--pf-global--FontSize--sm)'\n    };\n\n    if (isShadows) {\n      itemStyle.marginBottom = '1rem';\n      itemStyle.boxShadow = \"var(\" + token.name + \")\";\n    } else if (getContrastRatio(token.value, '#151515') <= 4.5) {\n      itemStyle.color = '#fafafa';\n    }\n\n    var expandedStyle = {};\n\n    if (isExpanded && !isShadows) {\n      var borderLeftWidth = 'var(--pf-c-accordion__toggle--m-expanded--BorderWidth)';\n      var borderColor = \"var(\" + token.name + \")\";\n      var borderStyle = 'solid';\n      itemStyle.borderLeftWidth = borderLeftWidth;\n      itemStyle.borderColor = borderColor;\n      itemStyle.borderStyle = borderStyle;\n      expandedStyle.borderLeftWidth = borderLeftWidth;\n      expandedStyle.borderColor = borderColor;\n      expandedStyle.borderStyle = borderStyle;\n    }\n\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      key: token.name\n    }, /*#__PURE__*/React.createElement(\"dt\", {\n      className: tokenClass + \" ws-color-family-accordion-toggle\",\n      style: itemStyle,\n      onClick: function onClick() {\n        return expand(token.name);\n      },\n      id: !isShadows ? token.value.replace('#', 'color-') : token.name.replace('--pf-global--BoxShadow--', '')\n    }, /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(AngleRightIcon, {\n      className: \"pf-c-accordion__toggle-icon ws-color-family-toggle-icon\"\n    }), token.name.replace(palettePrefix, '').replace('--pf-global--BoxShadow--', 'box shadow ')), !isShadows && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ws-color-family-color\"\n    }, \"#\", normalizeColor(token.value.toUpperCase()))), isExpanded && /*#__PURE__*/React.createElement(\"dd\", {\n      className: tokenClass + \" ws-color-family-content\",\n      style: expandedStyle\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"ws-color-family-label\"\n    }, \"CSS variables\"), Object.values(rootTokens).filter(function (t) {\n      return t.value === token.value;\n    }).map(function (t) {\n      return t.name;\n    }).sort().map(function (tokenName) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: tokenName\n      }, tokenName);\n    })));\n  })));\n}","map":{"version":3,"names":["React","tokens","AngleRightIcon","css","normalizeColor","getContrastRatio","palettePrefix","ColorFamily","title","family","useState","expanded","setExpanded","rootTokens","familyTokens","global_BoxShadow_sm","global_BoxShadow_md","global_BoxShadow_lg","Object","values","filter","token","name","includes","whiteToken","global_palette_white","unshift","expandAll","length","map","expand","concat","isExpanded","isShadows","tokenClass","itemStyle","background","fontSize","marginBottom","boxShadow","value","color","expandedStyle","borderLeftWidth","borderColor","borderStyle","replace","toUpperCase","t","sort","tokenName"],"sources":["/Users/jschuler/Code/patternfly-quickstarts/packages/docs/src/content/design-guidelines/styles/colors/ColorFamily.js"],"sourcesContent":["import React from 'react';\nimport tokens from '@patternfly/react-tokens/dist/esm/patternfly_variables';\nimport AngleRightIcon from '@patternfly/react-icons/dist/esm/icons/angle-right-icon';\nimport { css } from '@patternfly/react-styles';\nimport { normalizeColor, getContrastRatio } from './helpers';\nimport './ColorFamily.css';\n\nconst palettePrefix = '--pf-global--palette--';\n\nexport function ColorFamily({\n  title,\n  family\n}) {\n  const [expanded, setExpanded] = React.useState([]);\n  const rootTokens = tokens[':root'];\n\n  const familyTokens = family === 'shadows'\n    ? [rootTokens.global_BoxShadow_sm, rootTokens.global_BoxShadow_md, rootTokens.global_BoxShadow_lg]\n    : Object.values(rootTokens).filter(token => token.name.includes(`${palettePrefix}${family}`));\n  if (family === 'black') {\n    const whiteToken = rootTokens.global_palette_white;\n    familyTokens.unshift(whiteToken);\n  }\n\n  const expandAll = () => {\n    if (expanded.length > 0) {\n      setExpanded([]);\n    } else {\n      setExpanded(familyTokens.map(token => token.name));\n    }\n  };\n\n  const expand = name => {\n    if (expanded.includes(name)) {\n      setExpanded(expanded.filter(token => token !== name));\n    } else {\n      setExpanded(expanded.concat(name));\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <dl className=\"pf-c-accordion pf-u-p-0\">\n        <dt\n          className={css(\n            'pf-c-accordion__toggle',\n            'ws-color-family-accordion-toggle',\n            expanded.length === familyTokens.length && 'pf-m-expanded'\n          )}\n          onClick={expandAll}\n        >\n          <h3 className=\"pf-c-title pf-m-xl\">\n            <AngleRightIcon className=\"pf-c-accordion__toggle-icon ws-color-family-toggle-icon\" />\n            {title}\n          </h3>\n        </dt>\n        {familyTokens.map(token => {\n          const isExpanded = expanded.includes(token.name);\n          const isShadows = family === 'shadows';\n          const tokenClass = css(\n            'pf-c-accordion__toggle',\n            'ws-color-family-toggle',\n            isExpanded && 'pf-m-expanded'\n          );\n          const itemStyle = { background: `var(${token.name})`, fontSize: 'var(--pf-global--FontSize--sm)' };\n          if (isShadows) {\n            itemStyle.marginBottom = '1rem';\n            itemStyle.boxShadow = `var(${token.name})`;\n          }\n          else if (getContrastRatio(token.value, '#151515') <= 4.5) {\n            itemStyle.color = '#fafafa';\n          }\n          const expandedStyle = {};\n          if (isExpanded && !isShadows) {\n            const borderLeftWidth = 'var(--pf-c-accordion__toggle--m-expanded--BorderWidth)';\n            const borderColor = `var(${token.name})`;\n            const borderStyle = 'solid';\n            itemStyle.borderLeftWidth = borderLeftWidth;\n            itemStyle.borderColor = borderColor;\n            itemStyle.borderStyle = borderStyle;\n            expandedStyle.borderLeftWidth = borderLeftWidth;\n            expandedStyle.borderColor = borderColor;\n            expandedStyle.borderStyle = borderStyle;\n          }\n\n          return (\n            <React.Fragment key={token.name}>\n              <dt\n                className={`${tokenClass} ws-color-family-accordion-toggle`}\n                style={itemStyle}\n                onClick={() => expand(token.name)}\n                id={!isShadows ? token.value.replace('#', 'color-') : token.name.replace('--pf-global--BoxShadow--', '')}\n              >\n                <div>\n                  <AngleRightIcon className=\"pf-c-accordion__toggle-icon ws-color-family-toggle-icon\" />\n                  {token.name\n                    .replace(palettePrefix, '')\n                    .replace('--pf-global--BoxShadow--', 'box shadow ')}\n                </div>\n                {!isShadows && (\n                  <div className=\"ws-color-family-color\">\n                    #{normalizeColor(token.value.toUpperCase())}\n                  </div>\n                )}\n              </dt>\n              {isExpanded && (\n                <dd className={`${tokenClass} ws-color-family-content`} style={expandedStyle}>\n                  <label className=\"ws-color-family-label\">CSS variables</label>\n                  {Object.values(rootTokens)\n                    .filter(t => t.value === token.value)\n                    .map(t => t.name)\n                    .sort()\n                    .map(tokenName => \n                      <div key={tokenName}>{tokenName}</div>\n                    )}\n                </dd>\n              )}\n            </React.Fragment>\n          );\n        })}\n      </dl>\n    </React.Fragment>\n  );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}