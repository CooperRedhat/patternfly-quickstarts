{"ast":null,"code":"function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport { AutoLinkHeader, Example, Link as PatternflyThemeLink } from 'theme-patternfly-org/components';\nimport BarsIcon from '@patternfly/react-icons/dist/js/icons/bars-icon';\nimport srcImportdefaultnav from './react/default-nav.png';\nimport srcImportexpandablenav from './react/expandable-nav.png';\nimport srcImportgroupednav from './react/grouped-nav.png';\nimport srcImporthorizontalnav from './react/horizontal-nav.png';\nimport srcImportlegacylightnav from './react/legacylight-nav.png';\nimport srcImportmanualnav from './react/manual-nav.png';\nimport srcImporttertiarynav from './react/tertiary-nav.png';\nvar pageData = {\n  \"id\": \"Page\",\n  \"section\": \"components\",\n  \"source\": \"react\",\n  \"slug\": \"/components/page/react\",\n  \"sourceLink\": \"https://github.com/patternfly/patternfly-react/blob/main/packages/docs/packages/react-core/src/components/Page/examples/Page.md\",\n  \"propComponents\": [{\n    \"name\": \"Page\",\n    \"description\": \"\",\n    \"props\": [{\n      \"name\": \"additionalGroupedContent\",\n      \"type\": \"React.ReactNode\",\n      \"description\": \"Additional content of the group\"\n    }, {\n      \"name\": \"breadcrumb\",\n      \"type\": \"React.ReactNode\",\n      \"description\": \"Breadcrumb component for the page\"\n    }, {\n      \"name\": \"children\",\n      \"type\": \"React.ReactNode\",\n      \"description\": \"Content rendered inside the main section of the page layout (e.g. <PageSection />)\"\n    }, {\n      \"name\": \"className\",\n      \"type\": \"string\",\n      \"description\": \"Additional classes added to the page layout\"\n    }, {\n      \"name\": \"defaultManagedSidebarIsOpen\",\n      \"type\": \"boolean\",\n      \"description\": \"If true, the managed sidebar is initially open for desktop view\",\n      \"defaultValue\": \"true\"\n    }, {\n      \"name\": \"getBreakpoint\",\n      \"type\": \"(width: number | null) => 'default' | 'sm' | 'md' | 'lg' | 'xl' | '2xl'\",\n      \"description\": \"The page resize observer uses the breakpoints returned from this function when adding the pf-m-breakpoint-[default|sm|md|lg|xl|2xl] class\\nYou can override the default getBreakpoint function to return breakpoints at different sizes than the default\\nYou can view the default getBreakpoint function here:\\nhttps://github.com/patternfly/patternfly-react/blob/main/packages/react-core/src/helpers/util.ts\",\n      \"defaultValue\": \"getBreakpoint\"\n    }, {\n      \"name\": \"groupProps\",\n      \"type\": \"PageGroupProps\",\n      \"description\": \"Additional props of the group\"\n    }, {\n      \"name\": \"header\",\n      \"type\": \"React.ReactNode\",\n      \"description\": \"Header component (e.g. <PageHeader />)\"\n    }, {\n      \"name\": \"isBreadcrumbGrouped\",\n      \"type\": \"boolean\",\n      \"description\": \"Flag indicating if the breadcrumb should be in a group\"\n    }, {\n      \"name\": \"isBreadcrumbWidthLimited\",\n      \"type\": \"boolean\",\n      \"description\": \"Flag indicating if breadcrumb width should be limited\",\n      \"defaultValue\": \"false\"\n    }, {\n      \"name\": \"isManagedSidebar\",\n      \"type\": \"boolean\",\n      \"description\": \"If true, manages the sidebar open/close state and there is no need to pass the isNavOpen boolean into\\nthe sidebar component or add a callback onNavToggle function into the PageHeader component\",\n      \"defaultValue\": \"false\"\n    }, {\n      \"name\": \"isNotificationDrawerExpanded\",\n      \"type\": \"boolean\",\n      \"description\": \"Flag indicating Notification drawer in expanded\",\n      \"defaultValue\": \"false\"\n    }, {\n      \"name\": \"isTertiaryNavGrouped\",\n      \"type\": \"boolean\",\n      \"description\": \"Flag indicating if the tertiaryNav should be in a group\"\n    }, {\n      \"name\": \"isTertiaryNavWidthLimited\",\n      \"type\": \"boolean\",\n      \"description\": \"Flag indicating if tertiary nav width should be limited\"\n    }, {\n      \"name\": \"mainAriaLabel\",\n      \"type\": \"string\",\n      \"description\": \"Accessible label, can be used to name main section\"\n    }, {\n      \"name\": \"mainContainerId\",\n      \"type\": \"string\",\n      \"description\": \"an id to use for the [role=\\\"main\\\"] element\"\n    }, {\n      \"name\": \"mainTabIndex\",\n      \"type\": \"number | null\",\n      \"description\": \"tabIndex to use for the [role=\\\"main\\\"] element, null to unset it\",\n      \"defaultValue\": \"-1\"\n    }, {\n      \"name\": \"notificationDrawer\",\n      \"type\": \"React.ReactNode\",\n      \"description\": \"Notification drawer component for an optional notification drawer (e.g. <NotificationDrawer />)\"\n    }, {\n      \"name\": \"onNotificationDrawerExpand\",\n      \"type\": \"() => void\",\n      \"description\": \"Callback when notification drawer panel is finished expanding.\",\n      \"defaultValue\": \"() => null\"\n    }, {\n      \"name\": \"onPageResize\",\n      \"type\": \"(object: any) => void\",\n      \"description\": \"Can add callback to be notified when resize occurs, for example to set the sidebar isNav prop to false for a width < 768px\\nReturns object { mobileView: boolean, windowSize: number }\",\n      \"defaultValue\": \"(): void => null\"\n    }, {\n      \"name\": \"role\",\n      \"type\": \"string\",\n      \"description\": \"Sets the value for role on the <main> element\"\n    }, {\n      \"name\": \"sidebar\",\n      \"type\": \"React.ReactNode\",\n      \"description\": \"Sidebar component for a side nav (e.g. <PageSidebar />)\"\n    }, {\n      \"name\": \"skipToContent\",\n      \"type\": \"React.ReactElement\",\n      \"description\": \"Skip to content component for the page\"\n    }, {\n      \"name\": \"tertiaryNav\",\n      \"type\": \"React.ReactNode\",\n      \"description\": \"Tertiary nav component for the page\"\n    }]\n  }, {\n    \"name\": \"PageHeader\",\n    \"description\": \"\",\n    \"props\": [{\n      \"name\": \"aria-controls\",\n      \"type\": \"No type info\",\n      \"defaultValue\": \"null\"\n    }, {\n      \"name\": \"aria-label\",\n      \"type\": \"string\",\n      \"description\": \"Aria Label for the nav toggle button\",\n      \"defaultValue\": \"'Global navigation'\"\n    }, {\n      \"name\": \"className\",\n      \"type\": \"string\",\n      \"description\": \"Additional classes added to the page header\",\n      \"defaultValue\": \"''\"\n    }, {\n      \"name\": \"headerTools\",\n      \"type\": \"React.ReactNode\",\n      \"description\": \"Component to render the header tools, use <PageHeaderTools />\",\n      \"defaultValue\": \"null\"\n    }, {\n      \"name\": \"isManagedSidebar\",\n      \"type\": \"boolean\",\n      \"description\": \"This prop is no longer managed through PageHeader but in the Page component.\",\n      \"defaultValue\": \"undefined\"\n    }, {\n      \"name\": \"isNavOpen\",\n      \"type\": \"boolean\",\n      \"description\": \"True if the side nav is shown\",\n      \"defaultValue\": \"true\"\n    }, {\n      \"name\": \"logo\",\n      \"type\": \"React.ReactNode\",\n      \"description\": \"Component to render the logo/brand, use <Brand />\",\n      \"defaultValue\": \"null\"\n    }, {\n      \"name\": \"logoComponent\",\n      \"type\": \"React.ReactNode\",\n      \"description\": \"Component to use to wrap the passed <logo>\",\n      \"defaultValue\": \"'a'\"\n    }, {\n      \"name\": \"logoProps\",\n      \"type\": \"object\",\n      \"description\": \"Additional props passed to the logo anchor container\",\n      \"defaultValue\": \"null\"\n    }, {\n      \"name\": \"onNavToggle\",\n      \"type\": \"() => void\",\n      \"description\": \"Callback function to handle the side nav toggle button, managed by the Page component if the Page isManagedSidebar prop is set to true\",\n      \"defaultValue\": \"() => undefined as any\"\n    }, {\n      \"name\": \"role\",\n      \"type\": \"string\",\n      \"description\": \"Sets the value for role on the <main> element\",\n      \"defaultValue\": \"undefined\"\n    }, {\n      \"name\": \"showNavToggle\",\n      \"type\": \"boolean\",\n      \"description\": \"True to show the nav toggle button (toggles side nav)\",\n      \"defaultValue\": \"false\"\n    }, {\n      \"name\": \"topNav\",\n      \"type\": \"React.ReactNode\",\n      \"description\": \"Component to render navigation within the header, use <Nav />\",\n      \"defaultValue\": \"null\"\n    }]\n  }, {\n    \"name\": \"PageHeaderTools\",\n    \"description\": \"\",\n    \"props\": [{\n      \"name\": \"children\",\n      \"type\": \"React.ReactNode\",\n      \"description\": \"Content rendered in page header tools\",\n      \"required\": true\n    }, {\n      \"name\": \"className\",\n      \"type\": \"string\",\n      \"description\": \"Additional classes added to the page header tools.\"\n    }]\n  }, {\n    \"name\": \"PageHeaderToolsGroup\",\n    \"description\": \"\",\n    \"props\": [{\n      \"name\": \"children\",\n      \"type\": \"React.ReactNode\",\n      \"description\": \"Content rendered in the page header tools group\",\n      \"required\": true\n    }, {\n      \"name\": \"className\",\n      \"type\": \"string\",\n      \"description\": \"Additional classes added to the page header tools group.\"\n    }, {\n      \"name\": \"visibility\",\n      \"type\": \"{\\n  default?: 'hidden' | 'visible';\\n  sm?: 'hidden' | 'visible';\\n  md?: 'hidden' | 'visible';\\n  lg?: 'hidden' | 'visible';\\n  xl?: 'hidden' | 'visible';\\n  '2xl'?: 'hidden' | 'visible';\\n}\",\n      \"description\": \"Visibility at various breakpoints.\"\n    }]\n  }, {\n    \"name\": \"PageHeaderToolsItem\",\n    \"description\": \"\",\n    \"props\": [{\n      \"name\": \"children\",\n      \"type\": \"React.ReactNode\",\n      \"description\": \"Content rendered in page header tools item.\",\n      \"required\": true\n    }, {\n      \"name\": \"className\",\n      \"type\": \"string\",\n      \"description\": \"Additional classes added to the page header tools item.\"\n    }, {\n      \"name\": \"id\",\n      \"type\": \"string\",\n      \"description\": \"HTML id of the PageHeaderToolsItem\"\n    }, {\n      \"name\": \"isSelected\",\n      \"type\": \"boolean\",\n      \"description\": \"True to make an icon button appear selected\"\n    }, {\n      \"name\": \"visibility\",\n      \"type\": \"{\\n  default?: 'hidden' | 'visible';\\n  sm?: 'hidden' | 'visible';\\n  md?: 'hidden' | 'visible';\\n  lg?: 'hidden' | 'visible';\\n  xl?: 'hidden' | 'visible';\\n  '2xl'?: 'hidden' | 'visible';\\n}\",\n      \"description\": \"Visibility at various breakpoints.\"\n    }]\n  }, {\n    \"name\": \"PageSidebar\",\n    \"description\": \"\",\n    \"props\": [{\n      \"name\": \"className\",\n      \"type\": \"string\",\n      \"description\": \"Additional classes added to the page sidebar\",\n      \"defaultValue\": \"''\"\n    }, {\n      \"name\": \"isManagedSidebar\",\n      \"type\": \"boolean\",\n      \"description\": \"If true, manages the sidebar open/close state and there is no need to pass the isNavOpen boolean into\\nthe sidebar component or add a callback onNavToggle function into the PageHeader component\"\n    }, {\n      \"name\": \"isNavOpen\",\n      \"type\": \"boolean\",\n      \"description\": \"Programmatically manage if the side nav is shown, if isManagedSidebar is set to true in the Page component, this prop is managed\",\n      \"defaultValue\": \"true\"\n    }, {\n      \"name\": \"nav\",\n      \"type\": \"React.ReactNode\",\n      \"description\": \"Component to render the side navigation (e.g. <Nav />\"\n    }, {\n      \"name\": \"theme\",\n      \"type\": \"'dark' | 'light'\",\n      \"description\": \"Indicates the color scheme of the sidebar\",\n      \"defaultValue\": \"'dark'\"\n    }]\n  }, {\n    \"name\": \"PageSection\",\n    \"description\": \"\",\n    \"props\": [{\n      \"name\": \"children\",\n      \"type\": \"React.ReactNode\",\n      \"description\": \"Content rendered inside the section\"\n    }, {\n      \"name\": \"className\",\n      \"type\": \"string\",\n      \"description\": \"Additional classes added to the section\",\n      \"defaultValue\": \"''\"\n    }, {\n      \"name\": \"hasOverflowScroll\",\n      \"type\": \"boolean\",\n      \"description\": \"Flag indicating if the PageSection has a scrolling overflow\",\n      \"defaultValue\": \"false\"\n    }, {\n      \"name\": \"hasShadowBottom\",\n      \"type\": \"boolean\",\n      \"description\": \"Modifier indicating if PageSection should have a shadow at the bottom\",\n      \"defaultValue\": \"false\"\n    }, {\n      \"name\": \"hasShadowTop\",\n      \"type\": \"boolean\",\n      \"description\": \"Modifier indicating if PageSection should have a shadow at the top\",\n      \"defaultValue\": \"false\"\n    }, {\n      \"name\": \"isCenterAligned\",\n      \"type\": \"boolean\",\n      \"description\": \"Flag indicating if the section content is center aligned. isWidthLimited must be set for this to work\",\n      \"defaultValue\": \"false\"\n    }, {\n      \"name\": \"isFilled\",\n      \"type\": \"boolean\",\n      \"description\": \"Enables the page section to fill the available vertical space\"\n    }, {\n      \"name\": \"isWidthLimited\",\n      \"type\": \"boolean\",\n      \"description\": \"Limits the width of the section\",\n      \"defaultValue\": \"false\"\n    }, {\n      \"name\": \"padding\",\n      \"type\": \"{\\n  default?: 'padding' | 'noPadding';\\n  sm?: 'padding' | 'noPadding';\\n  md?: 'padding' | 'noPadding';\\n  lg?: 'padding' | 'noPadding';\\n  xl?: 'padding' | 'noPadding';\\n  '2xl'?: 'padding' | 'noPadding';\\n}\",\n      \"description\": \"Padding at various breakpoints.\"\n    }, {\n      \"name\": \"sticky\",\n      \"type\": \"'top' | 'bottom'\",\n      \"description\": \"Modifier indicating if PageSection is sticky to the top or bottom\"\n    }, {\n      \"name\": \"type\",\n      \"type\": \"'default' | 'nav' | 'subnav' | 'breadcrumb' | 'tabs' | 'wizard'\",\n      \"description\": \"Section type variant\",\n      \"defaultValue\": \"'default'\"\n    }, {\n      \"name\": \"variant\",\n      \"type\": \"'default' | 'light' | 'dark' | 'darker'\",\n      \"description\": \"Section background color variant\",\n      \"defaultValue\": \"'default'\"\n    }]\n  }, {\n    \"name\": \"PageGroup\",\n    \"description\": \"\",\n    \"props\": [{\n      \"name\": \"children\",\n      \"type\": \"React.ReactNode\",\n      \"description\": \"Content rendered inside of the PageGroup\"\n    }, {\n      \"name\": \"className\",\n      \"type\": \"string\",\n      \"description\": \"Additional classes to apply to the PageGroup\",\n      \"defaultValue\": \"''\"\n    }, {\n      \"name\": \"hasOverflowScroll\",\n      \"type\": \"boolean\",\n      \"description\": \"Flag indicating if the PageGroup has a scrolling overflow\",\n      \"defaultValue\": \"false\"\n    }, {\n      \"name\": \"hasShadowBottom\",\n      \"type\": \"boolean\",\n      \"description\": \"Modifier indicating if PageGroup should have a shadow at the bottom\",\n      \"defaultValue\": \"false\"\n    }, {\n      \"name\": \"hasShadowTop\",\n      \"type\": \"boolean\",\n      \"description\": \"Modifier indicating if PageGroup should have a shadow at the top\",\n      \"defaultValue\": \"false\"\n    }, {\n      \"name\": \"sticky\",\n      \"type\": \"'top' | 'bottom'\",\n      \"description\": \"Modifier indicating if PageGroup is sticky to the top or bottom\"\n    }]\n  }, {\n    \"name\": \"PageBreadcrumb\",\n    \"description\": \"\",\n    \"props\": [{\n      \"name\": \"children\",\n      \"type\": \"React.ReactNode\",\n      \"description\": \"Content rendered inside of the PageBreadcrumb\"\n    }, {\n      \"name\": \"className\",\n      \"type\": \"string\",\n      \"description\": \"Additional classes to apply to the PageBreadcrumb\",\n      \"defaultValue\": \"''\"\n    }, {\n      \"name\": \"hasOverflowScroll\",\n      \"type\": \"boolean\",\n      \"description\": \"Flag indicating if the PageBreadcrumb has a scrolling overflow\",\n      \"defaultValue\": \"false\"\n    }, {\n      \"name\": \"hasShadowBottom\",\n      \"type\": \"boolean\",\n      \"description\": \"Flag indicating if PageBreadcrumb should have a shadow at the bottom\",\n      \"defaultValue\": \"false\"\n    }, {\n      \"name\": \"hasShadowTop\",\n      \"type\": \"boolean\",\n      \"description\": \"Flag indicating if PageBreadcrumb should have a shadow at the top\",\n      \"defaultValue\": \"false\"\n    }, {\n      \"name\": \"isWidthLimited\",\n      \"type\": \"boolean\",\n      \"description\": \"Limits the width of the breadcrumb\"\n    }, {\n      \"name\": \"sticky\",\n      \"type\": \"'top' | 'bottom'\",\n      \"description\": \"Modifier indicating if the PageBreadcrumb is sticky to the top or bottom\"\n    }]\n  }, {\n    \"name\": \"PageNavigation\",\n    \"description\": \"\",\n    \"props\": [{\n      \"name\": \"children\",\n      \"type\": \"React.ReactNode\",\n      \"description\": \"Content rendered inside of the PageNavigation\"\n    }, {\n      \"name\": \"className\",\n      \"type\": \"string\",\n      \"description\": \"Additional classes to apply to the PageNavigation\",\n      \"defaultValue\": \"''\"\n    }, {\n      \"name\": \"hasOverflowScroll\",\n      \"type\": \"boolean\",\n      \"description\": \"Flag indicating if the PageNavigation has a scrolling overflow\",\n      \"defaultValue\": \"false\"\n    }, {\n      \"name\": \"hasShadowBottom\",\n      \"type\": \"boolean\",\n      \"description\": \"Flag indicating if PageNavigation should have a shadow at the bottom\",\n      \"defaultValue\": \"false\"\n    }, {\n      \"name\": \"hasShadowTop\",\n      \"type\": \"boolean\",\n      \"description\": \"Flag indicating if PageNavigation should have a shadow at the top\",\n      \"defaultValue\": \"false\"\n    }, {\n      \"name\": \"isWidthLimited\",\n      \"type\": \"boolean\",\n      \"description\": \"Limits the width of the PageNavigation\"\n    }, {\n      \"name\": \"sticky\",\n      \"type\": \"'top' | 'bottom'\",\n      \"description\": \"Modifier indicating if the PageNavigation is sticky to the top or bottom\"\n    }]\n  }, {\n    \"name\": \"PageToggleButton\",\n    \"description\": \"\",\n    \"props\": [{\n      \"name\": \"children\",\n      \"type\": \"React.ReactNode\",\n      \"description\": \"Content of the page toggle button\"\n    }, {\n      \"name\": \"isNavOpen\",\n      \"type\": \"boolean\",\n      \"description\": \"True if the side nav is shown\",\n      \"defaultValue\": \"true\"\n    }, {\n      \"name\": \"onNavToggle\",\n      \"type\": \"() => void\",\n      \"description\": \"Callback function to handle the side nav toggle button, managed by the Page component if the Page isManagedSidebar prop is set to true\",\n      \"defaultValue\": \"() => undefined as any\"\n    }]\n  }],\n  \"cssPrefix\": [\"pf-c-page\"],\n  \"examples\": [\"Vertical nav\", \"Horizontal nav\", \"Tertiary nav\", \"With or without fill\", \"Main section padding\", \"Uncontrolled nav\", \"Group section\", \"Vertical nav using PageHeader component\", \"Centered section\"]\n};\npageData.liveContext = {\n  BarsIcon: BarsIcon\n};\npageData.examples = {\n  'Vertical nav': function VerticalNav(props) {\n    return /*#__PURE__*/React.createElement(Example, _extends({}, pageData, props, {\n      \"code\": \"import React from 'react';\\nimport {\\n  Page,\\n  Masthead,\\n  MastheadToggle,\\n  MastheadMain,\\n  MastheadBrand,\\n  MastheadContent,\\n  PageSidebar,\\n  PageSection,\\n  PageSectionVariants,\\n  PageToggleButton,\\n  Toolbar,\\n  ToolbarContent,\\n  ToolbarItem\\n} from '@patternfly/react-core';\\nimport BarsIcon from '@patternfly/react-icons/dist/esm/icons/bars-icon';\\n\\nclass VerticalPage extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      isNavOpen: true\\n    };\\n    this.onNavToggle = () => {\\n      this.setState({\\n        isNavOpen: !this.state.isNavOpen\\n      });\\n    };\\n  }\\n\\n  render() {\\n    const { isNavOpen } = this.state;\\n\\n    const headerToolbar = (\\n      <Toolbar id=\\\"toolbar\\\">\\n        <ToolbarContent>\\n          <ToolbarItem>header-tools</ToolbarItem>\\n        </ToolbarContent>\\n      </Toolbar>\\n    );\\n\\n    const Header = (\\n      <Masthead>\\n        <MastheadToggle>\\n          <PageToggleButton\\n            variant=\\\"plain\\\"\\n            aria-label=\\\"Global navigation\\\"\\n            isNavOpen={isNavOpen}\\n            onNavToggle={this.onNavToggle}\\n          >\\n            <BarsIcon />\\n          </PageToggleButton>\\n        </MastheadToggle>\\n        <MastheadMain>\\n          <MastheadBrand href=\\\"https://patternfly.org\\\" onClick={() => console.log('clicked logo')} target=\\\"_blank\\\">\\n            Logo\\n          </MastheadBrand>\\n        </MastheadMain>\\n        <MastheadContent>{headerToolbar}</MastheadContent>\\n      </Masthead>\\n    );\\n    const Sidebar = <PageSidebar nav=\\\"Navigation\\\" isNavOpen={isNavOpen} />;\\n\\n    return (\\n      <Page header={Header} sidebar={Sidebar}>\\n        <PageSection variant={PageSectionVariants.darker}>Section with darker background</PageSection>\\n        <PageSection variant={PageSectionVariants.dark}>Section with dark background</PageSection>\\n        <PageSection variant={PageSectionVariants.light}>Section with light background</PageSection>\\n      </Page>\\n    );\\n  }\\n}\",\n      \"title\": \"Vertical nav\",\n      \"lang\": \"js\"\n    }));\n  },\n  'Horizontal nav': function HorizontalNav(props) {\n    return /*#__PURE__*/React.createElement(Example, _extends({}, pageData, props, {\n      thumbnail: srcImporthorizontalnav,\n      \"code\": \"import React from 'react';\\nimport {\\n  Page,\\n  Masthead,\\n  MastheadMain,\\n  MastheadBrand,\\n  MastheadContent,\\n  PageSection,\\n  PageSectionVariants,\\n  Toolbar,\\n  ToolbarContent,\\n  ToolbarItem\\n} from '@patternfly/react-core';\\n\\nHorizontalPage = () => {\\n  const headerToolbar = (\\n    <Toolbar id=\\\"toolbar\\\">\\n      <ToolbarContent>\\n        <ToolbarItem>Navigation</ToolbarItem>\\n        <ToolbarItem>header-tools</ToolbarItem>\\n      </ToolbarContent>\\n    </Toolbar>\\n  );\\n\\n  const Header = (\\n    <Masthead inset={{ default: 'insetXs' }}>\\n      <MastheadMain>\\n        <MastheadBrand href=\\\"https://patternfly.org\\\" onClick={() => console.log('clicked logo')} target=\\\"_blank\\\">\\n          Logo\\n        </MastheadBrand>\\n      </MastheadMain>\\n      <MastheadContent>{headerToolbar}</MastheadContent>\\n    </Masthead>\\n  );\\n\\n  return (\\n    <Page header={Header}>\\n      <PageSection variant={PageSectionVariants.darker}>Section with darker background</PageSection>\\n      <PageSection variant={PageSectionVariants.dark}>Section with dark background</PageSection>\\n      <PageSection variant={PageSectionVariants.light}>Section with light background</PageSection>\\n    </Page>\\n  );\\n};\",\n      \"title\": \"Horizontal nav\",\n      \"lang\": \"js\"\n    }));\n  },\n  'Tertiary nav': function TertiaryNav(props) {\n    return /*#__PURE__*/React.createElement(Example, _extends({}, pageData, props, {\n      thumbnail: srcImporttertiarynav,\n      \"code\": \"import React from 'react';\\nimport {\\n  Page,\\n  Masthead,\\n  MastheadMain,\\n  MastheadBrand,\\n  MastheadContent,\\n  PageSection,\\n  PageSectionVariants,\\n  Toolbar,\\n  ToolbarContent,\\n  ToolbarItem\\n} from '@patternfly/react-core';\\n\\nTertiaryPage = () => {\\n  const headerToolbar = (\\n    <Toolbar id=\\\"toolbar\\\">\\n      <ToolbarContent>\\n        <ToolbarItem>header-tools</ToolbarItem>\\n      </ToolbarContent>\\n    </Toolbar>\\n  );\\n\\n  const Header = (\\n    <Masthead display={{ default: 'stack' }} inset={{ default: 'insetXs' }}>\\n      <MastheadMain>\\n        <MastheadBrand href=\\\"https://patternfly.org\\\" onClick={() => console.log('clicked logo')} target=\\\"_blank\\\">\\n          Logo\\n        </MastheadBrand>\\n      </MastheadMain>\\n      <MastheadContent>{headerToolbar}</MastheadContent>\\n    </Masthead>\\n  );\\n\\n  return (\\n    <Page header={Header} tertiaryNav=\\\"Navigation\\\">\\n      <PageSection variant={PageSectionVariants.darker}>Section with darker background</PageSection>\\n      <PageSection variant={PageSectionVariants.dark}>Section with dark background</PageSection>\\n      <PageSection variant={PageSectionVariants.light}>Section with light background</PageSection>\\n    </Page>\\n  );\\n};\",\n      \"title\": \"Tertiary nav\",\n      \"lang\": \"js\"\n    }));\n  },\n  'With or without fill': function WithOrWithoutFill(props) {\n    return /*#__PURE__*/React.createElement(Example, _extends({}, pageData, props, {\n      \"code\": \"import React from 'react';\\nimport {\\n  Page,\\n  Masthead,\\n  MastheadToggle,\\n  MastheadMain,\\n  MastheadBrand,\\n  MastheadContent,\\n  PageSidebar,\\n  PageSection,\\n  PageToggleButton,\\n  Toolbar,\\n  ToolbarContent,\\n  ToolbarItem\\n} from '@patternfly/react-core';\\nimport BarsIcon from '@patternfly/react-icons/dist/esm/icons/bars-icon';\\n\\nclass FillPage extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      isNavOpen: true\\n    };\\n    this.onNavToggle = () => {\\n      this.setState({\\n        isNavOpen: !this.state.isNavOpen\\n      });\\n    };\\n  }\\n\\n  render() {\\n    const { isNavOpen } = this.state;\\n\\n    const headerToolbar = (\\n      <Toolbar id=\\\"toolbar\\\">\\n        <ToolbarContent>\\n          <ToolbarItem>header-tools</ToolbarItem>\\n        </ToolbarContent>\\n      </Toolbar>\\n    );\\n\\n    const Header = (\\n      <Masthead>\\n        <MastheadToggle>\\n          <PageToggleButton\\n            variant=\\\"plain\\\"\\n            aria-label=\\\"Global navigation\\\"\\n            isNavOpen={isNavOpen}\\n            onNavToggle={this.onNavToggle}\\n          >\\n            <BarsIcon />\\n          </PageToggleButton>\\n        </MastheadToggle>\\n        <MastheadMain>\\n          <MastheadBrand href=\\\"https://patternfly.org\\\" onClick={() => console.log('clicked logo')} target=\\\"_blank\\\">\\n            Logo\\n          </MastheadBrand>\\n        </MastheadMain>\\n        <MastheadContent>{headerToolbar}</MastheadContent>\\n      </Masthead>\\n    );\\n    const Sidebar = <PageSidebar nav=\\\"Navigation\\\" isNavOpen={isNavOpen} />;\\n\\n    return (\\n      <Page header={Header} sidebar={Sidebar}>\\n        <PageSection>A default page section</PageSection>\\n        <PageSection isFilled={true}>This section fills the available space.</PageSection>\\n        <PageSection isFilled={false}>\\n          This section is set to not fill the available space, since the last page section is set to fill the available\\n          space by default.\\n        </PageSection>\\n      </Page>\\n    );\\n  }\\n}\",\n      \"title\": \"With or without fill\",\n      \"lang\": \"js\"\n    }));\n  },\n  'Main section padding': function MainSectionPadding(props) {\n    return /*#__PURE__*/React.createElement(Example, _extends({}, pageData, props, {\n      \"code\": \"import React from 'react';\\nimport {\\n  Page,\\n  Masthead,\\n  MastheadToggle,\\n  MastheadMain,\\n  MastheadBrand,\\n  MastheadContent,\\n  PageSidebar,\\n  PageSection,\\n  PageSectionVariants,\\n  PageToggleButton,\\n  Toolbar,\\n  ToolbarContent,\\n  ToolbarItem\\n} from '@patternfly/react-core';\\nimport BarsIcon from '@patternfly/react-icons/dist/esm/icons/bars-icon';\\n\\nclass VerticalPage extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      isNavOpen: true\\n    };\\n    this.onNavToggle = () => {\\n      this.setState({\\n        isNavOpen: !this.state.isNavOpen\\n      });\\n    };\\n  }\\n\\n  render() {\\n    const { isNavOpen } = this.state;\\n\\n    const headerToolbar = (\\n      <Toolbar id=\\\"toolbar\\\">\\n        <ToolbarContent>\\n          <ToolbarItem>header-tools</ToolbarItem>\\n        </ToolbarContent>\\n      </Toolbar>\\n    );\\n\\n    const Header = (\\n      <Masthead>\\n        <MastheadToggle>\\n          <PageToggleButton\\n            variant=\\\"plain\\\"\\n            aria-label=\\\"Global navigation\\\"\\n            isNavOpen={isNavOpen}\\n            onNavToggle={this.onNavToggle}\\n          >\\n            <BarsIcon />\\n          </PageToggleButton>\\n        </MastheadToggle>\\n        <MastheadMain>\\n          <MastheadBrand href=\\\"https://patternfly.org\\\" onClick={() => console.log('clicked logo')} target=\\\"_blank\\\">\\n            Logo\\n          </MastheadBrand>\\n        </MastheadMain>\\n        <MastheadContent>{headerToolbar}</MastheadContent>\\n      </Masthead>\\n    );\\n    const Sidebar = <PageSidebar nav=\\\"Navigation\\\" isNavOpen={isNavOpen} />;\\n\\n    return (\\n      <Page header={Header} sidebar={Sidebar}>\\n        <PageSection>Section with default padding</PageSection>\\n        <PageSection variant={PageSectionVariants.light} padding={{ default: 'noPadding' }}>\\n          Section with no padding\\n        </PageSection>\\n        <PageSection padding={{ default: 'noPadding', md: 'padding', lg: 'padding' }}>\\n          Section with padding only on medium/large\\n        </PageSection>\\n        <PageSection variant={PageSectionVariants.light} padding={{ md: 'noPadding' }}>\\n          Section with no padding on medium\\n        </PageSection>\\n      </Page>\\n    );\\n  }\\n}\",\n      \"title\": \"Main section padding\",\n      \"lang\": \"js\"\n    }));\n  },\n  'Uncontrolled nav': function UncontrolledNav(props) {\n    return /*#__PURE__*/React.createElement(Example, _extends({}, pageData, props, {\n      \"code\": \"import React from 'react';\\nimport {\\n  Page,\\n  Masthead,\\n  MastheadToggle,\\n  MastheadMain,\\n  MastheadBrand,\\n  MastheadContent,\\n  PageSidebar,\\n  PageSection,\\n  PageSectionVariants,\\n  PageToggleButton,\\n  Toolbar,\\n  ToolbarContent,\\n  ToolbarItem\\n} from '@patternfly/react-core';\\nimport BarsIcon from '@patternfly/react-icons/dist/esm/icons/bars-icon';\\n\\nclass UncontrolledNavPage extends React.Component {\\n  render() {\\n    const headerToolbar = (\\n      <Toolbar id=\\\"toolbar\\\">\\n        <ToolbarContent>\\n          <ToolbarItem>header-tools</ToolbarItem>\\n        </ToolbarContent>\\n      </Toolbar>\\n    );\\n\\n    const Header = (\\n      <Masthead>\\n        <MastheadToggle>\\n          <PageToggleButton variant=\\\"plain\\\" aria-label=\\\"Global navigation\\\">\\n            <BarsIcon />\\n          </PageToggleButton>\\n        </MastheadToggle>\\n        <MastheadMain>\\n          <MastheadBrand href=\\\"https://patternfly.org\\\" onClick={() => console.log('clicked logo')} target=\\\"_blank\\\">\\n            Logo\\n          </MastheadBrand>\\n        </MastheadMain>\\n        <MastheadContent>{headerToolbar}</MastheadContent>\\n      </Masthead>\\n    );\\n    const Sidebar = <PageSidebar nav=\\\"Navigation\\\" />;\\n\\n    return (\\n      <Page isManagedSidebar header={Header} sidebar={Sidebar}>\\n        <PageSection variant={PageSectionVariants.darker}>Section with darker background</PageSection>\\n        <PageSection variant={PageSectionVariants.dark}>Section with dark background</PageSection>\\n        <PageSection variant={PageSectionVariants.light}>Section with light background</PageSection>\\n      </Page>\\n    );\\n  }\\n}\",\n      \"title\": \"Uncontrolled nav\",\n      \"lang\": \"js\"\n    }));\n  },\n  'Group section': function GroupSection(props) {\n    return /*#__PURE__*/React.createElement(Example, _extends({}, pageData, props, {\n      \"code\": \"import React from 'react';\\nimport {\\n  Page,\\n  Masthead,\\n  MastheadToggle,\\n  MastheadMain,\\n  MastheadBrand,\\n  MastheadContent,\\n  PageSidebar,\\n  PageSection,\\n  PageGroup,\\n  PageBreadcrumb,\\n  PageNavigation,\\n  PageSectionVariants,\\n  PageToggleButton,\\n  Breadcrumb,\\n  BreadcrumbItem,\\n  Nav,\\n  NavList,\\n  NavItem,\\n  Toolbar,\\n  ToolbarContent,\\n  ToolbarItem\\n} from '@patternfly/react-core';\\nimport BarsIcon from '@patternfly/react-icons/dist/esm/icons/bars-icon';\\n\\nclass GroupPage extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      isNavOpen: true\\n    };\\n    this.onNavToggle = () => {\\n      this.setState({\\n        isNavOpen: !this.state.isNavOpen\\n      });\\n    };\\n  }\\n\\n  render() {\\n    const { isNavOpen } = this.state;\\n\\n    const headerToolbar = (\\n      <Toolbar id=\\\"toolbar\\\">\\n        <ToolbarContent>\\n          <ToolbarItem>header-tools</ToolbarItem>\\n        </ToolbarContent>\\n      </Toolbar>\\n    );\\n\\n    const Header = (\\n      <Masthead>\\n        <MastheadToggle>\\n          <PageToggleButton\\n            variant=\\\"plain\\\"\\n            aria-label=\\\"Global navigation\\\"\\n            isNavOpen={isNavOpen}\\n            onNavToggle={this.onNavToggle}\\n          >\\n            <BarsIcon />\\n          </PageToggleButton>\\n        </MastheadToggle>\\n        <MastheadMain>\\n          <MastheadBrand href=\\\"https://patternfly.org\\\" onClick={() => console.log('clicked logo')} target=\\\"_blank\\\">\\n            Logo\\n          </MastheadBrand>\\n        </MastheadMain>\\n        <MastheadContent>{headerToolbar}</MastheadContent>\\n      </Masthead>\\n    );\\n    const Sidebar = <PageSidebar nav=\\\"Navigation\\\" isNavOpen={isNavOpen} />;\\n\\n    return (\\n      <Page header={Header} sidebar={Sidebar}>\\n        <PageGroup>\\n          <PageNavigation>\\n            <Nav aria-label=\\\"Nav\\\" variant=\\\"tertiary\\\">\\n              <NavList>\\n                <NavItem itemId={0} isActive>\\n                  System panel\\n                </NavItem>\\n                <NavItem itemId={1}>Policy</NavItem>\\n                <NavItem itemId={2}>Authentication</NavItem>\\n                <NavItem itemId={3}>Network services</NavItem>\\n                <NavItem itemId={4}>Server</NavItem>\\n              </NavList>\\n            </Nav>\\n          </PageNavigation>\\n          <PageBreadcrumb>\\n            <Breadcrumb>\\n              <BreadcrumbItem>Section home</BreadcrumbItem>\\n              <BreadcrumbItem to=\\\"#\\\">Section title</BreadcrumbItem>\\n              <BreadcrumbItem to=\\\"#\\\">Section title</BreadcrumbItem>\\n              <BreadcrumbItem to=\\\"#\\\" isActive>\\n                Section landing\\n              </BreadcrumbItem>\\n            </Breadcrumb>\\n          </PageBreadcrumb>\\n          <PageSection variant={PageSectionVariants.light}>Grouped section</PageSection>\\n        </PageGroup>\\n        <PageSection variant={PageSectionVariants.dark}>Section 1</PageSection>\\n        <PageSection variant={PageSectionVariants.dark}>Section 2</PageSection>\\n      </Page>\\n    );\\n  }\\n}\",\n      \"title\": \"Group section\",\n      \"lang\": \"js\"\n    }));\n  },\n  'Vertical nav using PageHeader component': function VerticalNavUsingPageHeaderComponent(props) {\n    return /*#__PURE__*/React.createElement(Example, _extends({}, pageData, props, {\n      \"code\": \"import React from 'react';\\nimport {\\n  Page,\\n  PageHeader,\\n  PageHeaderTools,\\n  PageSidebar,\\n  PageSection,\\n  PageSectionVariants\\n} from '@patternfly/react-core';\\n\\nclass VerticalPage extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      isNavOpen: true\\n    };\\n    this.onNavToggle = () => {\\n      this.setState({\\n        isNavOpen: !this.state.isNavOpen\\n      });\\n    };\\n  }\\n\\n  render() {\\n    const { isNavOpen } = this.state;\\n\\n    const logoProps = {\\n      href: 'https://patternfly.org',\\n      onClick: () => console.log('clicked logo'),\\n      target: '_blank'\\n    };\\n    const Header = (\\n      <PageHeader\\n        logo=\\\"Logo\\\"\\n        logoProps={logoProps}\\n        headerTools={<PageHeaderTools>header-tools</PageHeaderTools>}\\n        showNavToggle\\n        isNavOpen={isNavOpen}\\n        onNavToggle={this.onNavToggle}\\n      />\\n    );\\n    const Sidebar = <PageSidebar nav=\\\"Navigation\\\" isNavOpen={isNavOpen} />;\\n\\n    return (\\n      <Page header={Header} sidebar={Sidebar}>\\n        <PageSection variant={PageSectionVariants.darker}>Section with darker background</PageSection>\\n        <PageSection variant={PageSectionVariants.dark}>Section with dark background</PageSection>\\n        <PageSection variant={PageSectionVariants.light}>Section with light background</PageSection>\\n      </Page>\\n    );\\n  }\\n}\",\n      \"title\": \"Vertical nav using PageHeader component\",\n      \"lang\": \"js\"\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      \"className\": \"ws-p\"\n    }, \"This example is provided becuase PageHeader and PageHeaderTools are still in use; however, going forward Masthead and Toolbar should be used to make headers rather than PageHeader and PageHeaderTools.\"));\n  },\n  'Centered section': function CenteredSection(props) {\n    return /*#__PURE__*/React.createElement(Example, _extends({}, pageData, props, {\n      \"code\": \"import React from 'react';\\nimport {\\n  Page,\\n  Masthead,\\n  MastheadToggle,\\n  MastheadMain,\\n  MastheadBrand,\\n  MastheadContent,\\n  PageSidebar,\\n  PageSection,\\n  PageSectionVariants,\\n  PageToggleButton,\\n  Toolbar,\\n  ToolbarContent,\\n  ToolbarItem,\\n  Card,\\n  CardBody\\n} from '@patternfly/react-core';\\nimport BarsIcon from '@patternfly/react-icons/dist/esm/icons/bars-icon';\\n\\nCenterAlignedPageSection = () => {\\n  const headerToolbar = (\\n    <Toolbar id=\\\"toolbar\\\">\\n      <ToolbarContent>\\n        <ToolbarItem>header-tools</ToolbarItem>\\n      </ToolbarContent>\\n    </Toolbar>\\n  );\\n\\n  const Header = (\\n    <Masthead>\\n      <MastheadToggle>\\n        <PageToggleButton variant=\\\"plain\\\" aria-label=\\\"Global navigation\\\" onNavToggle={this.onNavToggle}>\\n          <BarsIcon />\\n        </PageToggleButton>\\n      </MastheadToggle>\\n      <MastheadMain>\\n        <MastheadBrand href=\\\"https://patternfly.org\\\" onClick={() => console.log('clicked logo')} target=\\\"_blank\\\">\\n          Logo\\n        </MastheadBrand>\\n      </MastheadMain>\\n      <MastheadContent>{headerToolbar}</MastheadContent>\\n    </Masthead>\\n  );\\n\\n  return (\\n    <Page header={Header}>\\n      <PageSection isWidthLimited isCenterAligned>\\n        <Card>\\n          <CardBody>\\n            When a width limited page section is wider than the value of\\n            <code>--pf-c-page--section--m-limit-width--MaxWidth</code>, the section will be centered in the main section.\\n            <br />\\n            <br />\\n            The content in this example is placed in a card to better illustrate how the section behaves when it is\\n            centered. A card is not required to center a page section.\\n          </CardBody>\\n        </Card>\\n      </PageSection>\\n    </Page>\\n  );\\n};\",\n      \"title\": \"Centered section\",\n      \"lang\": \"js\"\n    }));\n  }\n};\n\nvar Component = function Component() {\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(AutoLinkHeader, {\n    \"id\": \"examples\",\n    \"size\": \"h2\",\n    \"className\": \"ws-title ws-h2\"\n  }, \"Examples\"), React.createElement(pageData.examples[\"Vertical nav\"]), React.createElement(pageData.examples[\"Horizontal nav\"]), React.createElement(pageData.examples[\"Tertiary nav\"]), React.createElement(pageData.examples[\"With or without fill\"]), React.createElement(pageData.examples[\"Main section padding\"]), React.createElement(pageData.examples[\"Uncontrolled nav\"]), React.createElement(pageData.examples[\"Group section\"]), React.createElement(pageData.examples[\"Vertical nav using PageHeader component\"]), React.createElement(pageData.examples[\"Centered section\"]));\n};\n\nComponent.displayName = 'ComponentsPageReactDocs';\nComponent.pageData = pageData;\nexport default Component;","map":{"version":3,"names":["React","AutoLinkHeader","Example","Link","PatternflyThemeLink","BarsIcon","srcImportdefaultnav","srcImportexpandablenav","srcImportgroupednav","srcImporthorizontalnav","srcImportlegacylightnav","srcImportmanualnav","srcImporttertiarynav","pageData","liveContext","examples","props","Component","createElement","displayName"],"sources":["/Users/jschuler/Code/patternfly-quickstarts/packages/docs/src/generated/components/page/react.js"],"sourcesContent":["import React from 'react';\nimport { AutoLinkHeader, Example, Link as PatternflyThemeLink } from 'theme-patternfly-org/components';\nimport BarsIcon from '@patternfly/react-icons/dist/js/icons/bars-icon';\nimport srcImportdefaultnav from './react/default-nav.png';\nimport srcImportexpandablenav from './react/expandable-nav.png';\nimport srcImportgroupednav from './react/grouped-nav.png';\nimport srcImporthorizontalnav from './react/horizontal-nav.png';\nimport srcImportlegacylightnav from './react/legacylight-nav.png';\nimport srcImportmanualnav from './react/manual-nav.png';\nimport srcImporttertiarynav from './react/tertiary-nav.png';\nconst pageData = {\n  \"id\": \"Page\",\n  \"section\": \"components\",\n  \"source\": \"react\",\n  \"slug\": \"/components/page/react\",\n  \"sourceLink\": \"https://github.com/patternfly/patternfly-react/blob/main/packages/docs/packages/react-core/src/components/Page/examples/Page.md\",\n  \"propComponents\": [\n    {\n      \"name\": \"Page\",\n      \"description\": \"\",\n      \"props\": [\n        {\n          \"name\": \"additionalGroupedContent\",\n          \"type\": \"React.ReactNode\",\n          \"description\": \"Additional content of the group\"\n        },\n        {\n          \"name\": \"breadcrumb\",\n          \"type\": \"React.ReactNode\",\n          \"description\": \"Breadcrumb component for the page\"\n        },\n        {\n          \"name\": \"children\",\n          \"type\": \"React.ReactNode\",\n          \"description\": \"Content rendered inside the main section of the page layout (e.g. <PageSection />)\"\n        },\n        {\n          \"name\": \"className\",\n          \"type\": \"string\",\n          \"description\": \"Additional classes added to the page layout\"\n        },\n        {\n          \"name\": \"defaultManagedSidebarIsOpen\",\n          \"type\": \"boolean\",\n          \"description\": \"If true, the managed sidebar is initially open for desktop view\",\n          \"defaultValue\": \"true\"\n        },\n        {\n          \"name\": \"getBreakpoint\",\n          \"type\": \"(width: number | null) => 'default' | 'sm' | 'md' | 'lg' | 'xl' | '2xl'\",\n          \"description\": \"The page resize observer uses the breakpoints returned from this function when adding the pf-m-breakpoint-[default|sm|md|lg|xl|2xl] class\\nYou can override the default getBreakpoint function to return breakpoints at different sizes than the default\\nYou can view the default getBreakpoint function here:\\nhttps://github.com/patternfly/patternfly-react/blob/main/packages/react-core/src/helpers/util.ts\",\n          \"defaultValue\": \"getBreakpoint\"\n        },\n        {\n          \"name\": \"groupProps\",\n          \"type\": \"PageGroupProps\",\n          \"description\": \"Additional props of the group\"\n        },\n        {\n          \"name\": \"header\",\n          \"type\": \"React.ReactNode\",\n          \"description\": \"Header component (e.g. <PageHeader />)\"\n        },\n        {\n          \"name\": \"isBreadcrumbGrouped\",\n          \"type\": \"boolean\",\n          \"description\": \"Flag indicating if the breadcrumb should be in a group\"\n        },\n        {\n          \"name\": \"isBreadcrumbWidthLimited\",\n          \"type\": \"boolean\",\n          \"description\": \"Flag indicating if breadcrumb width should be limited\",\n          \"defaultValue\": \"false\"\n        },\n        {\n          \"name\": \"isManagedSidebar\",\n          \"type\": \"boolean\",\n          \"description\": \"If true, manages the sidebar open/close state and there is no need to pass the isNavOpen boolean into\\nthe sidebar component or add a callback onNavToggle function into the PageHeader component\",\n          \"defaultValue\": \"false\"\n        },\n        {\n          \"name\": \"isNotificationDrawerExpanded\",\n          \"type\": \"boolean\",\n          \"description\": \"Flag indicating Notification drawer in expanded\",\n          \"defaultValue\": \"false\"\n        },\n        {\n          \"name\": \"isTertiaryNavGrouped\",\n          \"type\": \"boolean\",\n          \"description\": \"Flag indicating if the tertiaryNav should be in a group\"\n        },\n        {\n          \"name\": \"isTertiaryNavWidthLimited\",\n          \"type\": \"boolean\",\n          \"description\": \"Flag indicating if tertiary nav width should be limited\"\n        },\n        {\n          \"name\": \"mainAriaLabel\",\n          \"type\": \"string\",\n          \"description\": \"Accessible label, can be used to name main section\"\n        },\n        {\n          \"name\": \"mainContainerId\",\n          \"type\": \"string\",\n          \"description\": \"an id to use for the [role=\\\"main\\\"] element\"\n        },\n        {\n          \"name\": \"mainTabIndex\",\n          \"type\": \"number | null\",\n          \"description\": \"tabIndex to use for the [role=\\\"main\\\"] element, null to unset it\",\n          \"defaultValue\": \"-1\"\n        },\n        {\n          \"name\": \"notificationDrawer\",\n          \"type\": \"React.ReactNode\",\n          \"description\": \"Notification drawer component for an optional notification drawer (e.g. <NotificationDrawer />)\"\n        },\n        {\n          \"name\": \"onNotificationDrawerExpand\",\n          \"type\": \"() => void\",\n          \"description\": \"Callback when notification drawer panel is finished expanding.\",\n          \"defaultValue\": \"() => null\"\n        },\n        {\n          \"name\": \"onPageResize\",\n          \"type\": \"(object: any) => void\",\n          \"description\": \"Can add callback to be notified when resize occurs, for example to set the sidebar isNav prop to false for a width < 768px\\nReturns object { mobileView: boolean, windowSize: number }\",\n          \"defaultValue\": \"(): void => null\"\n        },\n        {\n          \"name\": \"role\",\n          \"type\": \"string\",\n          \"description\": \"Sets the value for role on the <main> element\"\n        },\n        {\n          \"name\": \"sidebar\",\n          \"type\": \"React.ReactNode\",\n          \"description\": \"Sidebar component for a side nav (e.g. <PageSidebar />)\"\n        },\n        {\n          \"name\": \"skipToContent\",\n          \"type\": \"React.ReactElement\",\n          \"description\": \"Skip to content component for the page\"\n        },\n        {\n          \"name\": \"tertiaryNav\",\n          \"type\": \"React.ReactNode\",\n          \"description\": \"Tertiary nav component for the page\"\n        }\n      ]\n    },\n    {\n      \"name\": \"PageHeader\",\n      \"description\": \"\",\n      \"props\": [\n        {\n          \"name\": \"aria-controls\",\n          \"type\": \"No type info\",\n          \"defaultValue\": \"null\"\n        },\n        {\n          \"name\": \"aria-label\",\n          \"type\": \"string\",\n          \"description\": \"Aria Label for the nav toggle button\",\n          \"defaultValue\": \"'Global navigation'\"\n        },\n        {\n          \"name\": \"className\",\n          \"type\": \"string\",\n          \"description\": \"Additional classes added to the page header\",\n          \"defaultValue\": \"''\"\n        },\n        {\n          \"name\": \"headerTools\",\n          \"type\": \"React.ReactNode\",\n          \"description\": \"Component to render the header tools, use <PageHeaderTools />\",\n          \"defaultValue\": \"null\"\n        },\n        {\n          \"name\": \"isManagedSidebar\",\n          \"type\": \"boolean\",\n          \"description\": \"This prop is no longer managed through PageHeader but in the Page component.\",\n          \"defaultValue\": \"undefined\"\n        },\n        {\n          \"name\": \"isNavOpen\",\n          \"type\": \"boolean\",\n          \"description\": \"True if the side nav is shown\",\n          \"defaultValue\": \"true\"\n        },\n        {\n          \"name\": \"logo\",\n          \"type\": \"React.ReactNode\",\n          \"description\": \"Component to render the logo/brand, use <Brand />\",\n          \"defaultValue\": \"null\"\n        },\n        {\n          \"name\": \"logoComponent\",\n          \"type\": \"React.ReactNode\",\n          \"description\": \"Component to use to wrap the passed <logo>\",\n          \"defaultValue\": \"'a'\"\n        },\n        {\n          \"name\": \"logoProps\",\n          \"type\": \"object\",\n          \"description\": \"Additional props passed to the logo anchor container\",\n          \"defaultValue\": \"null\"\n        },\n        {\n          \"name\": \"onNavToggle\",\n          \"type\": \"() => void\",\n          \"description\": \"Callback function to handle the side nav toggle button, managed by the Page component if the Page isManagedSidebar prop is set to true\",\n          \"defaultValue\": \"() => undefined as any\"\n        },\n        {\n          \"name\": \"role\",\n          \"type\": \"string\",\n          \"description\": \"Sets the value for role on the <main> element\",\n          \"defaultValue\": \"undefined\"\n        },\n        {\n          \"name\": \"showNavToggle\",\n          \"type\": \"boolean\",\n          \"description\": \"True to show the nav toggle button (toggles side nav)\",\n          \"defaultValue\": \"false\"\n        },\n        {\n          \"name\": \"topNav\",\n          \"type\": \"React.ReactNode\",\n          \"description\": \"Component to render navigation within the header, use <Nav />\",\n          \"defaultValue\": \"null\"\n        }\n      ]\n    },\n    {\n      \"name\": \"PageHeaderTools\",\n      \"description\": \"\",\n      \"props\": [\n        {\n          \"name\": \"children\",\n          \"type\": \"React.ReactNode\",\n          \"description\": \"Content rendered in page header tools\",\n          \"required\": true\n        },\n        {\n          \"name\": \"className\",\n          \"type\": \"string\",\n          \"description\": \"Additional classes added to the page header tools.\"\n        }\n      ]\n    },\n    {\n      \"name\": \"PageHeaderToolsGroup\",\n      \"description\": \"\",\n      \"props\": [\n        {\n          \"name\": \"children\",\n          \"type\": \"React.ReactNode\",\n          \"description\": \"Content rendered in the page header tools group\",\n          \"required\": true\n        },\n        {\n          \"name\": \"className\",\n          \"type\": \"string\",\n          \"description\": \"Additional classes added to the page header tools group.\"\n        },\n        {\n          \"name\": \"visibility\",\n          \"type\": \"{\\n  default?: 'hidden' | 'visible';\\n  sm?: 'hidden' | 'visible';\\n  md?: 'hidden' | 'visible';\\n  lg?: 'hidden' | 'visible';\\n  xl?: 'hidden' | 'visible';\\n  '2xl'?: 'hidden' | 'visible';\\n}\",\n          \"description\": \"Visibility at various breakpoints.\"\n        }\n      ]\n    },\n    {\n      \"name\": \"PageHeaderToolsItem\",\n      \"description\": \"\",\n      \"props\": [\n        {\n          \"name\": \"children\",\n          \"type\": \"React.ReactNode\",\n          \"description\": \"Content rendered in page header tools item.\",\n          \"required\": true\n        },\n        {\n          \"name\": \"className\",\n          \"type\": \"string\",\n          \"description\": \"Additional classes added to the page header tools item.\"\n        },\n        {\n          \"name\": \"id\",\n          \"type\": \"string\",\n          \"description\": \"HTML id of the PageHeaderToolsItem\"\n        },\n        {\n          \"name\": \"isSelected\",\n          \"type\": \"boolean\",\n          \"description\": \"True to make an icon button appear selected\"\n        },\n        {\n          \"name\": \"visibility\",\n          \"type\": \"{\\n  default?: 'hidden' | 'visible';\\n  sm?: 'hidden' | 'visible';\\n  md?: 'hidden' | 'visible';\\n  lg?: 'hidden' | 'visible';\\n  xl?: 'hidden' | 'visible';\\n  '2xl'?: 'hidden' | 'visible';\\n}\",\n          \"description\": \"Visibility at various breakpoints.\"\n        }\n      ]\n    },\n    {\n      \"name\": \"PageSidebar\",\n      \"description\": \"\",\n      \"props\": [\n        {\n          \"name\": \"className\",\n          \"type\": \"string\",\n          \"description\": \"Additional classes added to the page sidebar\",\n          \"defaultValue\": \"''\"\n        },\n        {\n          \"name\": \"isManagedSidebar\",\n          \"type\": \"boolean\",\n          \"description\": \"If true, manages the sidebar open/close state and there is no need to pass the isNavOpen boolean into\\nthe sidebar component or add a callback onNavToggle function into the PageHeader component\"\n        },\n        {\n          \"name\": \"isNavOpen\",\n          \"type\": \"boolean\",\n          \"description\": \"Programmatically manage if the side nav is shown, if isManagedSidebar is set to true in the Page component, this prop is managed\",\n          \"defaultValue\": \"true\"\n        },\n        {\n          \"name\": \"nav\",\n          \"type\": \"React.ReactNode\",\n          \"description\": \"Component to render the side navigation (e.g. <Nav />\"\n        },\n        {\n          \"name\": \"theme\",\n          \"type\": \"'dark' | 'light'\",\n          \"description\": \"Indicates the color scheme of the sidebar\",\n          \"defaultValue\": \"'dark'\"\n        }\n      ]\n    },\n    {\n      \"name\": \"PageSection\",\n      \"description\": \"\",\n      \"props\": [\n        {\n          \"name\": \"children\",\n          \"type\": \"React.ReactNode\",\n          \"description\": \"Content rendered inside the section\"\n        },\n        {\n          \"name\": \"className\",\n          \"type\": \"string\",\n          \"description\": \"Additional classes added to the section\",\n          \"defaultValue\": \"''\"\n        },\n        {\n          \"name\": \"hasOverflowScroll\",\n          \"type\": \"boolean\",\n          \"description\": \"Flag indicating if the PageSection has a scrolling overflow\",\n          \"defaultValue\": \"false\"\n        },\n        {\n          \"name\": \"hasShadowBottom\",\n          \"type\": \"boolean\",\n          \"description\": \"Modifier indicating if PageSection should have a shadow at the bottom\",\n          \"defaultValue\": \"false\"\n        },\n        {\n          \"name\": \"hasShadowTop\",\n          \"type\": \"boolean\",\n          \"description\": \"Modifier indicating if PageSection should have a shadow at the top\",\n          \"defaultValue\": \"false\"\n        },\n        {\n          \"name\": \"isCenterAligned\",\n          \"type\": \"boolean\",\n          \"description\": \"Flag indicating if the section content is center aligned. isWidthLimited must be set for this to work\",\n          \"defaultValue\": \"false\"\n        },\n        {\n          \"name\": \"isFilled\",\n          \"type\": \"boolean\",\n          \"description\": \"Enables the page section to fill the available vertical space\"\n        },\n        {\n          \"name\": \"isWidthLimited\",\n          \"type\": \"boolean\",\n          \"description\": \"Limits the width of the section\",\n          \"defaultValue\": \"false\"\n        },\n        {\n          \"name\": \"padding\",\n          \"type\": \"{\\n  default?: 'padding' | 'noPadding';\\n  sm?: 'padding' | 'noPadding';\\n  md?: 'padding' | 'noPadding';\\n  lg?: 'padding' | 'noPadding';\\n  xl?: 'padding' | 'noPadding';\\n  '2xl'?: 'padding' | 'noPadding';\\n}\",\n          \"description\": \"Padding at various breakpoints.\"\n        },\n        {\n          \"name\": \"sticky\",\n          \"type\": \"'top' | 'bottom'\",\n          \"description\": \"Modifier indicating if PageSection is sticky to the top or bottom\"\n        },\n        {\n          \"name\": \"type\",\n          \"type\": \"'default' | 'nav' | 'subnav' | 'breadcrumb' | 'tabs' | 'wizard'\",\n          \"description\": \"Section type variant\",\n          \"defaultValue\": \"'default'\"\n        },\n        {\n          \"name\": \"variant\",\n          \"type\": \"'default' | 'light' | 'dark' | 'darker'\",\n          \"description\": \"Section background color variant\",\n          \"defaultValue\": \"'default'\"\n        }\n      ]\n    },\n    {\n      \"name\": \"PageGroup\",\n      \"description\": \"\",\n      \"props\": [\n        {\n          \"name\": \"children\",\n          \"type\": \"React.ReactNode\",\n          \"description\": \"Content rendered inside of the PageGroup\"\n        },\n        {\n          \"name\": \"className\",\n          \"type\": \"string\",\n          \"description\": \"Additional classes to apply to the PageGroup\",\n          \"defaultValue\": \"''\"\n        },\n        {\n          \"name\": \"hasOverflowScroll\",\n          \"type\": \"boolean\",\n          \"description\": \"Flag indicating if the PageGroup has a scrolling overflow\",\n          \"defaultValue\": \"false\"\n        },\n        {\n          \"name\": \"hasShadowBottom\",\n          \"type\": \"boolean\",\n          \"description\": \"Modifier indicating if PageGroup should have a shadow at the bottom\",\n          \"defaultValue\": \"false\"\n        },\n        {\n          \"name\": \"hasShadowTop\",\n          \"type\": \"boolean\",\n          \"description\": \"Modifier indicating if PageGroup should have a shadow at the top\",\n          \"defaultValue\": \"false\"\n        },\n        {\n          \"name\": \"sticky\",\n          \"type\": \"'top' | 'bottom'\",\n          \"description\": \"Modifier indicating if PageGroup is sticky to the top or bottom\"\n        }\n      ]\n    },\n    {\n      \"name\": \"PageBreadcrumb\",\n      \"description\": \"\",\n      \"props\": [\n        {\n          \"name\": \"children\",\n          \"type\": \"React.ReactNode\",\n          \"description\": \"Content rendered inside of the PageBreadcrumb\"\n        },\n        {\n          \"name\": \"className\",\n          \"type\": \"string\",\n          \"description\": \"Additional classes to apply to the PageBreadcrumb\",\n          \"defaultValue\": \"''\"\n        },\n        {\n          \"name\": \"hasOverflowScroll\",\n          \"type\": \"boolean\",\n          \"description\": \"Flag indicating if the PageBreadcrumb has a scrolling overflow\",\n          \"defaultValue\": \"false\"\n        },\n        {\n          \"name\": \"hasShadowBottom\",\n          \"type\": \"boolean\",\n          \"description\": \"Flag indicating if PageBreadcrumb should have a shadow at the bottom\",\n          \"defaultValue\": \"false\"\n        },\n        {\n          \"name\": \"hasShadowTop\",\n          \"type\": \"boolean\",\n          \"description\": \"Flag indicating if PageBreadcrumb should have a shadow at the top\",\n          \"defaultValue\": \"false\"\n        },\n        {\n          \"name\": \"isWidthLimited\",\n          \"type\": \"boolean\",\n          \"description\": \"Limits the width of the breadcrumb\"\n        },\n        {\n          \"name\": \"sticky\",\n          \"type\": \"'top' | 'bottom'\",\n          \"description\": \"Modifier indicating if the PageBreadcrumb is sticky to the top or bottom\"\n        }\n      ]\n    },\n    {\n      \"name\": \"PageNavigation\",\n      \"description\": \"\",\n      \"props\": [\n        {\n          \"name\": \"children\",\n          \"type\": \"React.ReactNode\",\n          \"description\": \"Content rendered inside of the PageNavigation\"\n        },\n        {\n          \"name\": \"className\",\n          \"type\": \"string\",\n          \"description\": \"Additional classes to apply to the PageNavigation\",\n          \"defaultValue\": \"''\"\n        },\n        {\n          \"name\": \"hasOverflowScroll\",\n          \"type\": \"boolean\",\n          \"description\": \"Flag indicating if the PageNavigation has a scrolling overflow\",\n          \"defaultValue\": \"false\"\n        },\n        {\n          \"name\": \"hasShadowBottom\",\n          \"type\": \"boolean\",\n          \"description\": \"Flag indicating if PageNavigation should have a shadow at the bottom\",\n          \"defaultValue\": \"false\"\n        },\n        {\n          \"name\": \"hasShadowTop\",\n          \"type\": \"boolean\",\n          \"description\": \"Flag indicating if PageNavigation should have a shadow at the top\",\n          \"defaultValue\": \"false\"\n        },\n        {\n          \"name\": \"isWidthLimited\",\n          \"type\": \"boolean\",\n          \"description\": \"Limits the width of the PageNavigation\"\n        },\n        {\n          \"name\": \"sticky\",\n          \"type\": \"'top' | 'bottom'\",\n          \"description\": \"Modifier indicating if the PageNavigation is sticky to the top or bottom\"\n        }\n      ]\n    },\n    {\n      \"name\": \"PageToggleButton\",\n      \"description\": \"\",\n      \"props\": [\n        {\n          \"name\": \"children\",\n          \"type\": \"React.ReactNode\",\n          \"description\": \"Content of the page toggle button\"\n        },\n        {\n          \"name\": \"isNavOpen\",\n          \"type\": \"boolean\",\n          \"description\": \"True if the side nav is shown\",\n          \"defaultValue\": \"true\"\n        },\n        {\n          \"name\": \"onNavToggle\",\n          \"type\": \"() => void\",\n          \"description\": \"Callback function to handle the side nav toggle button, managed by the Page component if the Page isManagedSidebar prop is set to true\",\n          \"defaultValue\": \"() => undefined as any\"\n        }\n      ]\n    }\n  ],\n  \"cssPrefix\": [\n    \"pf-c-page\"\n  ],\n  \"examples\": [\n    \"Vertical nav\",\n    \"Horizontal nav\",\n    \"Tertiary nav\",\n    \"With or without fill\",\n    \"Main section padding\",\n    \"Uncontrolled nav\",\n    \"Group section\",\n    \"Vertical nav using PageHeader component\",\n    \"Centered section\"\n  ]\n};\npageData.liveContext = {\n  BarsIcon\n};\npageData.examples = {\n  'Vertical nav': props => \n    <Example {...pageData} {...props} {...{\"code\":\"import React from 'react';\\nimport {\\n  Page,\\n  Masthead,\\n  MastheadToggle,\\n  MastheadMain,\\n  MastheadBrand,\\n  MastheadContent,\\n  PageSidebar,\\n  PageSection,\\n  PageSectionVariants,\\n  PageToggleButton,\\n  Toolbar,\\n  ToolbarContent,\\n  ToolbarItem\\n} from '@patternfly/react-core';\\nimport BarsIcon from '@patternfly/react-icons/dist/esm/icons/bars-icon';\\n\\nclass VerticalPage extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      isNavOpen: true\\n    };\\n    this.onNavToggle = () => {\\n      this.setState({\\n        isNavOpen: !this.state.isNavOpen\\n      });\\n    };\\n  }\\n\\n  render() {\\n    const { isNavOpen } = this.state;\\n\\n    const headerToolbar = (\\n      <Toolbar id=\\\"toolbar\\\">\\n        <ToolbarContent>\\n          <ToolbarItem>header-tools</ToolbarItem>\\n        </ToolbarContent>\\n      </Toolbar>\\n    );\\n\\n    const Header = (\\n      <Masthead>\\n        <MastheadToggle>\\n          <PageToggleButton\\n            variant=\\\"plain\\\"\\n            aria-label=\\\"Global navigation\\\"\\n            isNavOpen={isNavOpen}\\n            onNavToggle={this.onNavToggle}\\n          >\\n            <BarsIcon />\\n          </PageToggleButton>\\n        </MastheadToggle>\\n        <MastheadMain>\\n          <MastheadBrand href=\\\"https://patternfly.org\\\" onClick={() => console.log('clicked logo')} target=\\\"_blank\\\">\\n            Logo\\n          </MastheadBrand>\\n        </MastheadMain>\\n        <MastheadContent>{headerToolbar}</MastheadContent>\\n      </Masthead>\\n    );\\n    const Sidebar = <PageSidebar nav=\\\"Navigation\\\" isNavOpen={isNavOpen} />;\\n\\n    return (\\n      <Page header={Header} sidebar={Sidebar}>\\n        <PageSection variant={PageSectionVariants.darker}>Section with darker background</PageSection>\\n        <PageSection variant={PageSectionVariants.dark}>Section with dark background</PageSection>\\n        <PageSection variant={PageSectionVariants.light}>Section with light background</PageSection>\\n      </Page>\\n    );\\n  }\\n}\",\"title\":\"Vertical nav\",\"lang\":\"js\"}}>\n      \n    </Example>,\n  'Horizontal nav': props => \n    <Example {...pageData} {...props} thumbnail={srcImporthorizontalnav} {...{\"code\":\"import React from 'react';\\nimport {\\n  Page,\\n  Masthead,\\n  MastheadMain,\\n  MastheadBrand,\\n  MastheadContent,\\n  PageSection,\\n  PageSectionVariants,\\n  Toolbar,\\n  ToolbarContent,\\n  ToolbarItem\\n} from '@patternfly/react-core';\\n\\nHorizontalPage = () => {\\n  const headerToolbar = (\\n    <Toolbar id=\\\"toolbar\\\">\\n      <ToolbarContent>\\n        <ToolbarItem>Navigation</ToolbarItem>\\n        <ToolbarItem>header-tools</ToolbarItem>\\n      </ToolbarContent>\\n    </Toolbar>\\n  );\\n\\n  const Header = (\\n    <Masthead inset={{ default: 'insetXs' }}>\\n      <MastheadMain>\\n        <MastheadBrand href=\\\"https://patternfly.org\\\" onClick={() => console.log('clicked logo')} target=\\\"_blank\\\">\\n          Logo\\n        </MastheadBrand>\\n      </MastheadMain>\\n      <MastheadContent>{headerToolbar}</MastheadContent>\\n    </Masthead>\\n  );\\n\\n  return (\\n    <Page header={Header}>\\n      <PageSection variant={PageSectionVariants.darker}>Section with darker background</PageSection>\\n      <PageSection variant={PageSectionVariants.dark}>Section with dark background</PageSection>\\n      <PageSection variant={PageSectionVariants.light}>Section with light background</PageSection>\\n    </Page>\\n  );\\n};\",\"title\":\"Horizontal nav\",\"lang\":\"js\"}}>\n      \n    </Example>,\n  'Tertiary nav': props => \n    <Example {...pageData} {...props} thumbnail={srcImporttertiarynav} {...{\"code\":\"import React from 'react';\\nimport {\\n  Page,\\n  Masthead,\\n  MastheadMain,\\n  MastheadBrand,\\n  MastheadContent,\\n  PageSection,\\n  PageSectionVariants,\\n  Toolbar,\\n  ToolbarContent,\\n  ToolbarItem\\n} from '@patternfly/react-core';\\n\\nTertiaryPage = () => {\\n  const headerToolbar = (\\n    <Toolbar id=\\\"toolbar\\\">\\n      <ToolbarContent>\\n        <ToolbarItem>header-tools</ToolbarItem>\\n      </ToolbarContent>\\n    </Toolbar>\\n  );\\n\\n  const Header = (\\n    <Masthead display={{ default: 'stack' }} inset={{ default: 'insetXs' }}>\\n      <MastheadMain>\\n        <MastheadBrand href=\\\"https://patternfly.org\\\" onClick={() => console.log('clicked logo')} target=\\\"_blank\\\">\\n          Logo\\n        </MastheadBrand>\\n      </MastheadMain>\\n      <MastheadContent>{headerToolbar}</MastheadContent>\\n    </Masthead>\\n  );\\n\\n  return (\\n    <Page header={Header} tertiaryNav=\\\"Navigation\\\">\\n      <PageSection variant={PageSectionVariants.darker}>Section with darker background</PageSection>\\n      <PageSection variant={PageSectionVariants.dark}>Section with dark background</PageSection>\\n      <PageSection variant={PageSectionVariants.light}>Section with light background</PageSection>\\n    </Page>\\n  );\\n};\",\"title\":\"Tertiary nav\",\"lang\":\"js\"}}>\n      \n    </Example>,\n  'With or without fill': props => \n    <Example {...pageData} {...props} {...{\"code\":\"import React from 'react';\\nimport {\\n  Page,\\n  Masthead,\\n  MastheadToggle,\\n  MastheadMain,\\n  MastheadBrand,\\n  MastheadContent,\\n  PageSidebar,\\n  PageSection,\\n  PageToggleButton,\\n  Toolbar,\\n  ToolbarContent,\\n  ToolbarItem\\n} from '@patternfly/react-core';\\nimport BarsIcon from '@patternfly/react-icons/dist/esm/icons/bars-icon';\\n\\nclass FillPage extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      isNavOpen: true\\n    };\\n    this.onNavToggle = () => {\\n      this.setState({\\n        isNavOpen: !this.state.isNavOpen\\n      });\\n    };\\n  }\\n\\n  render() {\\n    const { isNavOpen } = this.state;\\n\\n    const headerToolbar = (\\n      <Toolbar id=\\\"toolbar\\\">\\n        <ToolbarContent>\\n          <ToolbarItem>header-tools</ToolbarItem>\\n        </ToolbarContent>\\n      </Toolbar>\\n    );\\n\\n    const Header = (\\n      <Masthead>\\n        <MastheadToggle>\\n          <PageToggleButton\\n            variant=\\\"plain\\\"\\n            aria-label=\\\"Global navigation\\\"\\n            isNavOpen={isNavOpen}\\n            onNavToggle={this.onNavToggle}\\n          >\\n            <BarsIcon />\\n          </PageToggleButton>\\n        </MastheadToggle>\\n        <MastheadMain>\\n          <MastheadBrand href=\\\"https://patternfly.org\\\" onClick={() => console.log('clicked logo')} target=\\\"_blank\\\">\\n            Logo\\n          </MastheadBrand>\\n        </MastheadMain>\\n        <MastheadContent>{headerToolbar}</MastheadContent>\\n      </Masthead>\\n    );\\n    const Sidebar = <PageSidebar nav=\\\"Navigation\\\" isNavOpen={isNavOpen} />;\\n\\n    return (\\n      <Page header={Header} sidebar={Sidebar}>\\n        <PageSection>A default page section</PageSection>\\n        <PageSection isFilled={true}>This section fills the available space.</PageSection>\\n        <PageSection isFilled={false}>\\n          This section is set to not fill the available space, since the last page section is set to fill the available\\n          space by default.\\n        </PageSection>\\n      </Page>\\n    );\\n  }\\n}\",\"title\":\"With or without fill\",\"lang\":\"js\"}}>\n      \n    </Example>,\n  'Main section padding': props => \n    <Example {...pageData} {...props} {...{\"code\":\"import React from 'react';\\nimport {\\n  Page,\\n  Masthead,\\n  MastheadToggle,\\n  MastheadMain,\\n  MastheadBrand,\\n  MastheadContent,\\n  PageSidebar,\\n  PageSection,\\n  PageSectionVariants,\\n  PageToggleButton,\\n  Toolbar,\\n  ToolbarContent,\\n  ToolbarItem\\n} from '@patternfly/react-core';\\nimport BarsIcon from '@patternfly/react-icons/dist/esm/icons/bars-icon';\\n\\nclass VerticalPage extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      isNavOpen: true\\n    };\\n    this.onNavToggle = () => {\\n      this.setState({\\n        isNavOpen: !this.state.isNavOpen\\n      });\\n    };\\n  }\\n\\n  render() {\\n    const { isNavOpen } = this.state;\\n\\n    const headerToolbar = (\\n      <Toolbar id=\\\"toolbar\\\">\\n        <ToolbarContent>\\n          <ToolbarItem>header-tools</ToolbarItem>\\n        </ToolbarContent>\\n      </Toolbar>\\n    );\\n\\n    const Header = (\\n      <Masthead>\\n        <MastheadToggle>\\n          <PageToggleButton\\n            variant=\\\"plain\\\"\\n            aria-label=\\\"Global navigation\\\"\\n            isNavOpen={isNavOpen}\\n            onNavToggle={this.onNavToggle}\\n          >\\n            <BarsIcon />\\n          </PageToggleButton>\\n        </MastheadToggle>\\n        <MastheadMain>\\n          <MastheadBrand href=\\\"https://patternfly.org\\\" onClick={() => console.log('clicked logo')} target=\\\"_blank\\\">\\n            Logo\\n          </MastheadBrand>\\n        </MastheadMain>\\n        <MastheadContent>{headerToolbar}</MastheadContent>\\n      </Masthead>\\n    );\\n    const Sidebar = <PageSidebar nav=\\\"Navigation\\\" isNavOpen={isNavOpen} />;\\n\\n    return (\\n      <Page header={Header} sidebar={Sidebar}>\\n        <PageSection>Section with default padding</PageSection>\\n        <PageSection variant={PageSectionVariants.light} padding={{ default: 'noPadding' }}>\\n          Section with no padding\\n        </PageSection>\\n        <PageSection padding={{ default: 'noPadding', md: 'padding', lg: 'padding' }}>\\n          Section with padding only on medium/large\\n        </PageSection>\\n        <PageSection variant={PageSectionVariants.light} padding={{ md: 'noPadding' }}>\\n          Section with no padding on medium\\n        </PageSection>\\n      </Page>\\n    );\\n  }\\n}\",\"title\":\"Main section padding\",\"lang\":\"js\"}}>\n      \n    </Example>,\n  'Uncontrolled nav': props => \n    <Example {...pageData} {...props} {...{\"code\":\"import React from 'react';\\nimport {\\n  Page,\\n  Masthead,\\n  MastheadToggle,\\n  MastheadMain,\\n  MastheadBrand,\\n  MastheadContent,\\n  PageSidebar,\\n  PageSection,\\n  PageSectionVariants,\\n  PageToggleButton,\\n  Toolbar,\\n  ToolbarContent,\\n  ToolbarItem\\n} from '@patternfly/react-core';\\nimport BarsIcon from '@patternfly/react-icons/dist/esm/icons/bars-icon';\\n\\nclass UncontrolledNavPage extends React.Component {\\n  render() {\\n    const headerToolbar = (\\n      <Toolbar id=\\\"toolbar\\\">\\n        <ToolbarContent>\\n          <ToolbarItem>header-tools</ToolbarItem>\\n        </ToolbarContent>\\n      </Toolbar>\\n    );\\n\\n    const Header = (\\n      <Masthead>\\n        <MastheadToggle>\\n          <PageToggleButton variant=\\\"plain\\\" aria-label=\\\"Global navigation\\\">\\n            <BarsIcon />\\n          </PageToggleButton>\\n        </MastheadToggle>\\n        <MastheadMain>\\n          <MastheadBrand href=\\\"https://patternfly.org\\\" onClick={() => console.log('clicked logo')} target=\\\"_blank\\\">\\n            Logo\\n          </MastheadBrand>\\n        </MastheadMain>\\n        <MastheadContent>{headerToolbar}</MastheadContent>\\n      </Masthead>\\n    );\\n    const Sidebar = <PageSidebar nav=\\\"Navigation\\\" />;\\n\\n    return (\\n      <Page isManagedSidebar header={Header} sidebar={Sidebar}>\\n        <PageSection variant={PageSectionVariants.darker}>Section with darker background</PageSection>\\n        <PageSection variant={PageSectionVariants.dark}>Section with dark background</PageSection>\\n        <PageSection variant={PageSectionVariants.light}>Section with light background</PageSection>\\n      </Page>\\n    );\\n  }\\n}\",\"title\":\"Uncontrolled nav\",\"lang\":\"js\"}}>\n      \n    </Example>,\n  'Group section': props => \n    <Example {...pageData} {...props} {...{\"code\":\"import React from 'react';\\nimport {\\n  Page,\\n  Masthead,\\n  MastheadToggle,\\n  MastheadMain,\\n  MastheadBrand,\\n  MastheadContent,\\n  PageSidebar,\\n  PageSection,\\n  PageGroup,\\n  PageBreadcrumb,\\n  PageNavigation,\\n  PageSectionVariants,\\n  PageToggleButton,\\n  Breadcrumb,\\n  BreadcrumbItem,\\n  Nav,\\n  NavList,\\n  NavItem,\\n  Toolbar,\\n  ToolbarContent,\\n  ToolbarItem\\n} from '@patternfly/react-core';\\nimport BarsIcon from '@patternfly/react-icons/dist/esm/icons/bars-icon';\\n\\nclass GroupPage extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      isNavOpen: true\\n    };\\n    this.onNavToggle = () => {\\n      this.setState({\\n        isNavOpen: !this.state.isNavOpen\\n      });\\n    };\\n  }\\n\\n  render() {\\n    const { isNavOpen } = this.state;\\n\\n    const headerToolbar = (\\n      <Toolbar id=\\\"toolbar\\\">\\n        <ToolbarContent>\\n          <ToolbarItem>header-tools</ToolbarItem>\\n        </ToolbarContent>\\n      </Toolbar>\\n    );\\n\\n    const Header = (\\n      <Masthead>\\n        <MastheadToggle>\\n          <PageToggleButton\\n            variant=\\\"plain\\\"\\n            aria-label=\\\"Global navigation\\\"\\n            isNavOpen={isNavOpen}\\n            onNavToggle={this.onNavToggle}\\n          >\\n            <BarsIcon />\\n          </PageToggleButton>\\n        </MastheadToggle>\\n        <MastheadMain>\\n          <MastheadBrand href=\\\"https://patternfly.org\\\" onClick={() => console.log('clicked logo')} target=\\\"_blank\\\">\\n            Logo\\n          </MastheadBrand>\\n        </MastheadMain>\\n        <MastheadContent>{headerToolbar}</MastheadContent>\\n      </Masthead>\\n    );\\n    const Sidebar = <PageSidebar nav=\\\"Navigation\\\" isNavOpen={isNavOpen} />;\\n\\n    return (\\n      <Page header={Header} sidebar={Sidebar}>\\n        <PageGroup>\\n          <PageNavigation>\\n            <Nav aria-label=\\\"Nav\\\" variant=\\\"tertiary\\\">\\n              <NavList>\\n                <NavItem itemId={0} isActive>\\n                  System panel\\n                </NavItem>\\n                <NavItem itemId={1}>Policy</NavItem>\\n                <NavItem itemId={2}>Authentication</NavItem>\\n                <NavItem itemId={3}>Network services</NavItem>\\n                <NavItem itemId={4}>Server</NavItem>\\n              </NavList>\\n            </Nav>\\n          </PageNavigation>\\n          <PageBreadcrumb>\\n            <Breadcrumb>\\n              <BreadcrumbItem>Section home</BreadcrumbItem>\\n              <BreadcrumbItem to=\\\"#\\\">Section title</BreadcrumbItem>\\n              <BreadcrumbItem to=\\\"#\\\">Section title</BreadcrumbItem>\\n              <BreadcrumbItem to=\\\"#\\\" isActive>\\n                Section landing\\n              </BreadcrumbItem>\\n            </Breadcrumb>\\n          </PageBreadcrumb>\\n          <PageSection variant={PageSectionVariants.light}>Grouped section</PageSection>\\n        </PageGroup>\\n        <PageSection variant={PageSectionVariants.dark}>Section 1</PageSection>\\n        <PageSection variant={PageSectionVariants.dark}>Section 2</PageSection>\\n      </Page>\\n    );\\n  }\\n}\",\"title\":\"Group section\",\"lang\":\"js\"}}>\n      \n    </Example>,\n  'Vertical nav using PageHeader component': props => \n    <Example {...pageData} {...props} {...{\"code\":\"import React from 'react';\\nimport {\\n  Page,\\n  PageHeader,\\n  PageHeaderTools,\\n  PageSidebar,\\n  PageSection,\\n  PageSectionVariants\\n} from '@patternfly/react-core';\\n\\nclass VerticalPage extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      isNavOpen: true\\n    };\\n    this.onNavToggle = () => {\\n      this.setState({\\n        isNavOpen: !this.state.isNavOpen\\n      });\\n    };\\n  }\\n\\n  render() {\\n    const { isNavOpen } = this.state;\\n\\n    const logoProps = {\\n      href: 'https://patternfly.org',\\n      onClick: () => console.log('clicked logo'),\\n      target: '_blank'\\n    };\\n    const Header = (\\n      <PageHeader\\n        logo=\\\"Logo\\\"\\n        logoProps={logoProps}\\n        headerTools={<PageHeaderTools>header-tools</PageHeaderTools>}\\n        showNavToggle\\n        isNavOpen={isNavOpen}\\n        onNavToggle={this.onNavToggle}\\n      />\\n    );\\n    const Sidebar = <PageSidebar nav=\\\"Navigation\\\" isNavOpen={isNavOpen} />;\\n\\n    return (\\n      <Page header={Header} sidebar={Sidebar}>\\n        <PageSection variant={PageSectionVariants.darker}>Section with darker background</PageSection>\\n        <PageSection variant={PageSectionVariants.dark}>Section with dark background</PageSection>\\n        <PageSection variant={PageSectionVariants.light}>Section with light background</PageSection>\\n      </Page>\\n    );\\n  }\\n}\",\"title\":\"Vertical nav using PageHeader component\",\"lang\":\"js\"}}>\n      \n      <p {...{\"className\":\"ws-p\"}}>\n        {`This example is provided becuase PageHeader and PageHeaderTools are still in use; however, going forward Masthead and Toolbar should be used to make headers rather than PageHeader and PageHeaderTools.`}\n      </p>\n    </Example>,\n  'Centered section': props => \n    <Example {...pageData} {...props} {...{\"code\":\"import React from 'react';\\nimport {\\n  Page,\\n  Masthead,\\n  MastheadToggle,\\n  MastheadMain,\\n  MastheadBrand,\\n  MastheadContent,\\n  PageSidebar,\\n  PageSection,\\n  PageSectionVariants,\\n  PageToggleButton,\\n  Toolbar,\\n  ToolbarContent,\\n  ToolbarItem,\\n  Card,\\n  CardBody\\n} from '@patternfly/react-core';\\nimport BarsIcon from '@patternfly/react-icons/dist/esm/icons/bars-icon';\\n\\nCenterAlignedPageSection = () => {\\n  const headerToolbar = (\\n    <Toolbar id=\\\"toolbar\\\">\\n      <ToolbarContent>\\n        <ToolbarItem>header-tools</ToolbarItem>\\n      </ToolbarContent>\\n    </Toolbar>\\n  );\\n\\n  const Header = (\\n    <Masthead>\\n      <MastheadToggle>\\n        <PageToggleButton variant=\\\"plain\\\" aria-label=\\\"Global navigation\\\" onNavToggle={this.onNavToggle}>\\n          <BarsIcon />\\n        </PageToggleButton>\\n      </MastheadToggle>\\n      <MastheadMain>\\n        <MastheadBrand href=\\\"https://patternfly.org\\\" onClick={() => console.log('clicked logo')} target=\\\"_blank\\\">\\n          Logo\\n        </MastheadBrand>\\n      </MastheadMain>\\n      <MastheadContent>{headerToolbar}</MastheadContent>\\n    </Masthead>\\n  );\\n\\n  return (\\n    <Page header={Header}>\\n      <PageSection isWidthLimited isCenterAligned>\\n        <Card>\\n          <CardBody>\\n            When a width limited page section is wider than the value of\\n            <code>--pf-c-page--section--m-limit-width--MaxWidth</code>, the section will be centered in the main section.\\n            <br />\\n            <br />\\n            The content in this example is placed in a card to better illustrate how the section behaves when it is\\n            centered. A card is not required to center a page section.\\n          </CardBody>\\n        </Card>\\n      </PageSection>\\n    </Page>\\n  );\\n};\",\"title\":\"Centered section\",\"lang\":\"js\"}}>\n      \n    </Example>\n};\n\nconst Component = () => (\n  <React.Fragment>\n    <AutoLinkHeader {...{\"id\":\"examples\",\"size\":\"h2\",\"className\":\"ws-title ws-h2\"}}>\n      {`Examples`}\n    </AutoLinkHeader>\n    {React.createElement(pageData.examples[\"Vertical nav\"])}\n    {React.createElement(pageData.examples[\"Horizontal nav\"])}\n    {React.createElement(pageData.examples[\"Tertiary nav\"])}\n    {React.createElement(pageData.examples[\"With or without fill\"])}\n    {React.createElement(pageData.examples[\"Main section padding\"])}\n    {React.createElement(pageData.examples[\"Uncontrolled nav\"])}\n    {React.createElement(pageData.examples[\"Group section\"])}\n    {React.createElement(pageData.examples[\"Vertical nav using PageHeader component\"])}\n    {React.createElement(pageData.examples[\"Centered section\"])}\n  </React.Fragment>\n);\nComponent.displayName = 'ComponentsPageReactDocs';\nComponent.pageData = pageData;\n\nexport default Component;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}