{"ast":null,"code":"function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport { AutoLinkHeader, Example, Link as PatternflyThemeLink } from 'theme-patternfly-org/components';\nimport { DashboardBreadcrumb } from '../../../../node_modules/@patternfly/react-core/src/demos/./examples/DashboardWrapper';\nimport DashboardHeader from '../../../../node_modules/@patternfly/react-core/src/demos/./examples/DashboardHeader';\nimport CogIcon from '@patternfly/react-icons/dist/esm/icons/cog-icon';\nimport HelpIcon from '@patternfly/react-icons/dist/esm/icons/help-icon';\nimport QuestionCircleIcon from '@patternfly/react-icons/dist/esm/icons/question-circle-icon';\nimport imgBrand from '@patternfly/react-core/src/components/Brand/examples/pfLogo.svg';\nimport imgAvatar from '@patternfly/react-core/src/components/Avatar/examples/avatarImg.svg';\nimport imgColorBrand from '@patternfly/react-core/src/demos/examples/pfColorLogo.svg';\nimport srcImportdefaultnav from './react-demos/default-nav.png';\nimport srcImportdrilldownnav from './react-demos/drilldown-nav.png';\nimport srcImportexpandablenav from './react-demos/expandable-nav.png';\nimport srcImportflyoutnav from './react-demos/flyout-nav.png';\nimport srcImportgroupednav from './react-demos/grouped-nav.png';\nimport srcImporthorizontalnavwithhorizontalsubnav from './react-demos/horizontal-nav-with-horizontal-subnav.png';\nimport srcImporthorizontalnav from './react-demos/horizontal-nav.png';\nimport srcImporthorizontalsubnav from './react-demos/horizontal-subnav.png';\nimport srcImportlegacytertiarynav from './react-demos/legacy-tertiary-nav.png';\nimport srcImportlegacylightnav from './react-demos/legacylight-nav.png';\nimport srcImportmanualnav from './react-demos/manual-nav.png';\nimport srcImporttertiarynav from './react-demos/tertiary-nav.png';\nvar pageData = {\n  \"id\": \"Navigation\",\n  \"section\": \"components\",\n  \"source\": \"react-demos\",\n  \"slug\": \"/components/navigation/react-demos\",\n  \"sourceLink\": \"https://github.com/patternfly/patternfly-react/blob/main/packages/docs/packages/react-core/src/demos/Nav.md\",\n  \"fullscreenExamples\": [\"Default nav\", \"Grouped nav\", \"Expandable nav\", \"Horizontal nav\", \"Horizontal subnav\", \"Horizontal nav with horizontal subnav\", \"Legacy tertiary nav\", \"Legacy/Light Nav\", \"Manual nav\", \"Flyout nav\", \"Drilldown nav\"]\n};\npageData.liveContext = {\n  DashboardBreadcrumb: DashboardBreadcrumb,\n  DashboardHeader: DashboardHeader,\n  CogIcon: CogIcon,\n  HelpIcon: HelpIcon,\n  QuestionCircleIcon: QuestionCircleIcon,\n  imgBrand: imgBrand,\n  imgAvatar: imgAvatar,\n  imgColorBrand: imgColorBrand\n};\npageData.examples = {\n  'Default nav': function DefaultNav(props) {\n    return /*#__PURE__*/React.createElement(Example, _extends({}, pageData, props, {\n      thumbnail: srcImportdefaultnav,\n      \"code\": \"import React from 'react';\\nimport {\\n  Card,\\n  CardBody,\\n  Gallery,\\n  GalleryItem,\\n  Nav,\\n  NavItem,\\n  NavList,\\n  Page,\\n  PageSection,\\n  PageSectionVariants,\\n  PageSidebar,\\n  SkipToContent,\\n  TextContent,\\n  Text\\n} from '@patternfly/react-core';\\nimport { DashboardBreadcrumb } from './examples/DashboardWrapper';\\nimport DashboardHeader from './examples/DashboardHeader';\\n\\nclass PageLayoutDefaultNav extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      activeItem: 0\\n    };\\n\\n    this.onNavSelect = result => {\\n      this.setState({\\n        activeItem: result.itemId\\n      });\\n    };\\n  }\\n\\n  render() {\\n    const { activeItem } = this.state;\\n\\n    const PageNav = (\\n      <Nav onSelect={this.onNavSelect} aria-label=\\\"Nav\\\">\\n        <NavList>\\n          <NavItem itemId={0} isActive={activeItem === 0} to=\\\"#\\\">\\n            System Panel\\n          </NavItem>\\n          <NavItem itemId={1} isActive={activeItem === 1} to=\\\"#\\\">\\n            Policy\\n          </NavItem>\\n          <NavItem itemId={2} isActive={activeItem === 2} to=\\\"#\\\">\\n            Authentication\\n          </NavItem>\\n          <NavItem itemId={3} isActive={activeItem === 3} to=\\\"#\\\">\\n            Network Services\\n          </NavItem>\\n          <NavItem itemId={4} isActive={activeItem === 4} to=\\\"#\\\">\\n            Server\\n          </NavItem>\\n        </NavList>\\n      </Nav>\\n    );\\n\\n    const Sidebar = <PageSidebar nav={PageNav} />;\\n    const pageId = 'main-content-page-layout-default-nav';\\n    const PageSkipToContent = <SkipToContent href={`#${pageId}`}>Skip to content</SkipToContent>;\\n\\n    return (\\n      <React.Fragment>\\n        <Page\\n          header={<DashboardHeader />}\\n          sidebar={Sidebar}\\n          isManagedSidebar\\n          skipToContent={PageSkipToContent}\\n          breadcrumb={DashboardBreadcrumb}\\n          mainContainerId={pageId}\\n        >\\n          <PageSection variant={PageSectionVariants.light}>\\n            <TextContent>\\n              <Text component=\\\"h1\\\">Main title</Text>\\n              <Text component=\\\"p\\\">\\n                Body text should be Overpass Regular at 16px. It should have leading of 24px because <br />\\n                of its relative line height of 1.5.\\n              </Text>\\n            </TextContent>\\n          </PageSection>\\n          <PageSection>\\n            <Gallery hasGutter>\\n              {Array.apply(0, Array(10)).map((x, i) => (\\n                <GalleryItem key={i}>\\n                  <Card>\\n                    <CardBody>This is a card</CardBody>\\n                  </Card>\\n                </GalleryItem>\\n              ))}\\n            </Gallery>\\n          </PageSection>\\n        </Page>\\n      </React.Fragment>\\n    );\\n  }\\n}\",\n      \"title\": \"Default nav\",\n      \"lang\": \"js\",\n      \"isFullscreen\": true\n    }));\n  },\n  'Grouped nav': function GroupedNav(props) {\n    return /*#__PURE__*/React.createElement(Example, _extends({}, pageData, props, {\n      thumbnail: srcImportgroupednav,\n      \"code\": \"import React from 'react';\\nimport {\\n  Nav,\\n  NavGroup,\\n  NavItem,\\n  Page,\\n  PageSection,\\n  PageSectionVariants,\\n  PageSidebar,\\n  SkipToContent,\\n  TextContent,\\n  Text\\n} from '@patternfly/react-core';\\nimport DashboardHeader from './examples/DashboardHeader';\\n\\nclass PageLayoutGroupsNav extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      activeItem: 'grp-1_itm-1'\\n    };\\n\\n    this.onNavSelect = result => {\\n      this.setState({\\n        activeItem: result.itemId\\n      });\\n    };\\n  }\\n\\n  render() {\\n    const { activeItem } = this.state;\\n\\n    const PageNav = (\\n      <Nav onSelect={this.onNavSelect} aria-label=\\\"Nav\\\">\\n        <NavGroup title=\\\"System Panel\\\">\\n          <NavItem itemId=\\\"grp-1_itm-1\\\" isActive={activeItem === 'grp-1_itm-1'} to=\\\"#\\\">\\n            Overview\\n          </NavItem>\\n          <NavItem itemId=\\\"grp-1_itm-2\\\" isActive={activeItem === 'grp-1_itm-2'} to=\\\"#\\\">\\n            Resource Usage\\n          </NavItem>\\n          <NavItem itemId=\\\"grp-1_itm-3\\\" isActive={activeItem === 'grp-1_itm-3'} to=\\\"#\\\">\\n            Hypervisors\\n          </NavItem>\\n          <NavItem itemId=\\\"grp-1_itm-4\\\" isActive={activeItem === 'grp-1_itm-4'} to=\\\"#\\\">\\n            Instances\\n          </NavItem>\\n          <NavItem itemId=\\\"grp-1_itm-5\\\" isActive={activeItem === 'grp-1_itm-5'} to=\\\"#\\\">\\n            Volumes\\n          </NavItem>\\n          <NavItem itemId=\\\"grp-1_itm-6\\\" isActive={activeItem === 'grp-1_itm-6'} to=\\\"#\\\">\\n            Network\\n          </NavItem>\\n        </NavGroup>\\n        <NavGroup title=\\\"Policy\\\">\\n          <NavItem itemId=\\\"grp-2_itm-1\\\" isActive={activeItem === 'grp-2_itm-1'} to=\\\"#\\\">\\n            Hosts\\n          </NavItem>\\n          <NavItem itemId=\\\"grp-2_itm-2\\\" isActive={activeItem === 'grp-2_itm-2'} to=\\\"#\\\">\\n            Virtual Machines\\n          </NavItem>\\n          <NavItem itemId=\\\"grp-2_itm-3\\\" isActive={activeItem === 'grp-2_itm-3'} to=\\\"#\\\">\\n            Storage\\n          </NavItem>\\n        </NavGroup>\\n      </Nav>\\n    );\\n\\n    const Sidebar = <PageSidebar nav={PageNav} />;\\n    const pageId = 'main-content-page-layout-group-nav';\\n    const PageSkipToContent = <SkipToContent href={`#${pageId}`}>Skip to Content</SkipToContent>;\\n\\n    return (\\n      <React.Fragment>\\n        <Page\\n          header={<DashboardHeader />}\\n          sidebar={Sidebar}\\n          isManagedSidebar\\n          skipToContent={PageSkipToContent}\\n          mainContainerId={pageId}\\n        >\\n          <PageSection variant={PageSectionVariants.light}>\\n            <TextContent>\\n              <Text component=\\\"h1\\\">Main title</Text>\\n              <Text component=\\\"p\\\">\\n                Body text should be Overpass Regular at 16px. It should have leading of 24px because <br />\\n                of its relative line height of 1.5.\\n              </Text>\\n            </TextContent>\\n          </PageSection>\\n          <PageSection variant={PageSectionVariants.light}>Light</PageSection>\\n          <PageSection variant={PageSectionVariants.dark}>Dark</PageSection>\\n          <PageSection variant={PageSectionVariants.darker}>Darker</PageSection>\\n          <PageSection>Content</PageSection>\\n        </Page>\\n      </React.Fragment>\\n    );\\n  }\\n}\",\n      \"title\": \"Grouped nav\",\n      \"lang\": \"js\",\n      \"isFullscreen\": true\n    }));\n  },\n  'Expandable nav': function ExpandableNav(props) {\n    return /*#__PURE__*/React.createElement(Example, _extends({}, pageData, props, {\n      thumbnail: srcImportexpandablenav,\n      \"code\": \"import React from 'react';\\nimport {\\n  Card,\\n  CardBody,\\n  Gallery,\\n  GalleryItem,\\n  Nav,\\n  NavExpandable,\\n  NavItem,\\n  NavList,\\n  Page,\\n  PageSection,\\n  PageSectionVariants,\\n  PageSidebar,\\n  SkipToContent,\\n  TextContent,\\n  Text\\n} from '@patternfly/react-core';\\nimport { DashboardBreadcrumb } from './examples/DashboardWrapper';\\nimport DashboardHeader from './examples/DashboardHeader';\\n\\nclass PageLayoutExpandableNav extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      activeGroup: 'grp-1',\\n      activeItem: 'grp-1_itm-1'\\n    };\\n\\n    this.onNavSelect = result => {\\n      this.setState({\\n        activeItem: result.itemId,\\n        activeGroup: result.groupId\\n      });\\n    };\\n  }\\n\\n  render() {\\n    const { activeItem, activeGroup } = this.state;\\n\\n    const PageNav = (\\n      <Nav onSelect={this.onNavSelect} aria-label=\\\"Nav\\\">\\n        <NavList>\\n          <NavExpandable title=\\\"System Panel\\\" groupId=\\\"grp-1\\\" isActive={activeGroup === 'grp-1'} isExpanded>\\n            <NavItem groupId=\\\"grp-1\\\" itemId=\\\"grp-1_itm-1\\\" isActive={activeItem === 'grp-1_itm-1'} to=\\\"#\\\">\\n              Overview\\n            </NavItem>\\n            <NavItem groupId=\\\"grp-1\\\" itemId=\\\"grp-1_itm-2\\\" isActive={activeItem === 'grp-1_itm-2'} to=\\\"#\\\">\\n              Resource usage\\n            </NavItem>\\n            <NavItem groupId=\\\"grp-1\\\" itemId=\\\"grp-1_itm-3\\\" isActive={activeItem === 'grp-1_itm-3'} to=\\\"#\\\">\\n              Hypervisors\\n            </NavItem>\\n            <NavItem groupId=\\\"grp-1\\\" itemId=\\\"grp-1_itm-4\\\" isActive={activeItem === 'grp-1_itm-4'} to=\\\"#\\\">\\n              Instances\\n            </NavItem>\\n            <NavItem groupId=\\\"grp-1\\\" itemId=\\\"grp-1_itm-5\\\" isActive={activeItem === 'grp-1_itm-5'} to=\\\"#\\\">\\n              Volumes\\n            </NavItem>\\n            <NavItem groupId=\\\"grp-1\\\" itemId=\\\"grp-1_itm-6\\\" isActive={activeItem === 'grp-1_itm-6'} to=\\\"#\\\">\\n              Network\\n            </NavItem>\\n          </NavExpandable>\\n          <NavExpandable title=\\\"Policy\\\" groupId=\\\"grp-2\\\" isActive={activeGroup === 'grp-2'} to=\\\"#\\\">\\n            <NavItem groupId=\\\"grp-2\\\" itemId=\\\"grp-2_itm-1\\\" isActive={activeItem === 'grp-2_itm-1'} to=\\\"#\\\">\\n              Subnav link 1\\n            </NavItem>\\n            <NavItem groupId=\\\"grp-2\\\" itemId=\\\"grp-2_itm-2\\\" isActive={activeItem === 'grp-2_itm-2'} to=\\\"#\\\">\\n              Subnav link 2\\n            </NavItem>\\n          </NavExpandable>\\n          <NavExpandable title=\\\"Authentication\\\" groupId=\\\"grp-3\\\" isActive={activeGroup === 'grp-3'}>\\n            <NavItem groupId=\\\"grp-3\\\" itemId=\\\"grp-3_itm-1\\\" isActive={activeItem === 'grp-3_itm-1'} to=\\\"#\\\">\\n              Subnav link 1\\n            </NavItem>\\n            <NavItem groupId=\\\"grp-3\\\" itemId=\\\"grp-3_itm-2\\\" isActive={activeItem === 'grp-3_itm-2'} to=\\\"#\\\">\\n              Subnav link 2\\n            </NavItem>\\n          </NavExpandable>\\n        </NavList>\\n      </Nav>\\n    );\\n\\n    const Sidebar = <PageSidebar nav={PageNav} />;\\n    const pageId = 'main-content-page-layout-expandable-nav';\\n    const PageSkipToContent = <SkipToContent href={`#${pageId}`}>Skip to content</SkipToContent>;\\n\\n    return (\\n      <React.Fragment>\\n        <Page\\n          header={<DashboardHeader />}\\n          sidebar={Sidebar}\\n          isManagedSidebar\\n          skipToContent={PageSkipToContent}\\n          breadcrumb={DashboardBreadcrumb}\\n          mainContainerId={pageId}\\n        >\\n          <PageSection variant={PageSectionVariants.light}>\\n            <TextContent>\\n              <Text component=\\\"h1\\\">Main title</Text>\\n              <Text component=\\\"p\\\">\\n                Body text should be Overpass Regular at 16px. It should have leading of 24px because <br />\\n                of its relative line height of 1.5.\\n              </Text>\\n            </TextContent>\\n          </PageSection>\\n          <PageSection>\\n            <Gallery hasGutter>\\n              {Array.apply(0, Array(10)).map((x, i) => (\\n                <GalleryItem key={i}>\\n                  <Card>\\n                    <CardBody>This is a card</CardBody>\\n                  </Card>\\n                </GalleryItem>\\n              ))}\\n            </Gallery>\\n          </PageSection>\\n        </Page>\\n      </React.Fragment>\\n    );\\n  }\\n}\",\n      \"title\": \"Expandable nav\",\n      \"lang\": \"js\",\n      \"isFullscreen\": true\n    }));\n  },\n  'Horizontal nav': function HorizontalNav(props) {\n    return /*#__PURE__*/React.createElement(Example, _extends({}, pageData, props, {\n      thumbnail: srcImporthorizontalnav,\n      \"code\": \"import React from 'react';\\nimport {\\n  Avatar,\\n  Brand,\\n  Button,\\n  ButtonVariant,\\n  Card,\\n  CardBody,\\n  Dropdown,\\n  DropdownGroup,\\n  DropdownToggle,\\n  DropdownItem,\\n  Gallery,\\n  GalleryItem,\\n  KebabToggle,\\n  Nav,\\n  NavItem,\\n  NavList,\\n  Page,\\n  PageHeader,\\n  PageSection,\\n  PageSectionVariants,\\n  SkipToContent,\\n  TextContent,\\n  Text,\\n  PageHeaderTools,\\n  PageHeaderToolsGroup,\\n  PageHeaderToolsItem\\n} from '@patternfly/react-core';\\nimport { DashboardBreadcrumb } from './examples/DashboardWrapper';\\nimport CogIcon from '@patternfly/react-icons/dist/esm/icons/cog-icon';\\nimport HelpIcon from '@patternfly/react-icons/dist/esm/icons/help-icon';\\nimport QuestionCircleIcon from '@patternfly/react-icons/dist/esm/icons/question-circle-icon';\\nimport imgBrand from '@patternfly/react-core/src/components/Brand/examples/pfLogo.svg';\\nimport imgAvatar from '@patternfly/react-core/src/components/Avatar/examples/avatarImg.svg';\\n\\nclass PageLayoutHorizontalNav extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      isDropdownOpen: false,\\n      isKebabDropdownOpen: false,\\n      activeItem: 0\\n    };\\n\\n    this.onDropdownToggle = isDropdownOpen => {\\n      this.setState({\\n        isDropdownOpen\\n      });\\n    };\\n\\n    this.onDropdownSelect = event => {\\n      this.setState({\\n        isDropdownOpen: !this.state.isDropdownOpen\\n      });\\n    };\\n\\n    this.onKebabDropdownToggle = isKebabDropdownOpen => {\\n      this.setState({\\n        isKebabDropdownOpen\\n      });\\n    };\\n\\n    this.onKebabDropdownSelect = event => {\\n      this.setState({\\n        isKebabDropdownOpen: !this.state.isKebabDropdownOpen\\n      });\\n    };\\n\\n    this.onNavSelect = result => {\\n      this.setState({\\n        activeItem: result.itemId\\n      });\\n    };\\n  }\\n\\n  render() {\\n    const { isDropdownOpen, isKebabDropdownOpen, activeItem } = this.state;\\n\\n    const PageNav = (\\n      <Nav onSelect={this.onNavSelect} aria-label=\\\"Nav\\\" variant=\\\"horizontal\\\">\\n        <NavList>\\n          <NavItem itemId={0} isActive={activeItem === 0} to=\\\"#\\\">\\n            System Panel\\n          </NavItem>\\n          <NavItem itemId={1} isActive={activeItem === 1} to=\\\"#\\\">\\n            Policy\\n          </NavItem>\\n          <NavItem itemId={2} isActive={activeItem === 2} to=\\\"#\\\">\\n            Authentication\\n          </NavItem>\\n          <NavItem itemId={3} isActive={activeItem === 3} to=\\\"#\\\">\\n            Network Services\\n          </NavItem>\\n          <NavItem itemId={4} isActive={activeItem === 4} to=\\\"#\\\">\\n            Server\\n          </NavItem>\\n        </NavList>\\n      </Nav>\\n    );\\n    const kebabDropdownItems = [\\n      <DropdownItem>\\n        <CogIcon /> Settings\\n      </DropdownItem>,\\n      <DropdownItem>\\n        <HelpIcon /> Help\\n      </DropdownItem>\\n    ];\\n    const userDropdownItems = [\\n      <DropdownGroup key=\\\"group 2\\\">\\n        <DropdownItem key=\\\"group 2 profile\\\">My profile</DropdownItem>\\n        <DropdownItem key=\\\"group 2 user\\\" component=\\\"button\\\">\\n          User management\\n        </DropdownItem>\\n        <DropdownItem key=\\\"group 2 logout\\\">Logout</DropdownItem>\\n      </DropdownGroup>\\n    ];\\n    const headerTools = (\\n      <PageHeaderTools>\\n        <PageHeaderToolsGroup\\n          visibility={{\\n            default: 'hidden',\\n            lg: 'visible'\\n          }} /** the settings and help icon buttons are only visible on desktop sizes and replaced by a kebab dropdown for other sizes */\\n        >\\n          <PageHeaderToolsItem>\\n            <Button aria-label=\\\"Settings actions\\\" variant={ButtonVariant.plain}>\\n              <CogIcon />\\n            </Button>\\n          </PageHeaderToolsItem>\\n          <PageHeaderToolsItem>\\n            <Button aria-label=\\\"Help actions\\\" variant={ButtonVariant.plain}>\\n              <QuestionCircleIcon />\\n            </Button>\\n          </PageHeaderToolsItem>\\n        </PageHeaderToolsGroup>\\n        <PageHeaderToolsGroup>\\n          <PageHeaderToolsItem\\n            visibility={{\\n              lg: 'hidden'\\n            }} /** this kebab dropdown replaces the icon buttons and is hidden for desktop sizes */\\n          >\\n            <Dropdown\\n              isPlain\\n              position=\\\"right\\\"\\n              onSelect={this.onKebabDropdownSelect}\\n              toggle={<KebabToggle onToggle={this.onKebabDropdownToggle} />}\\n              isOpen={isKebabDropdownOpen}\\n              dropdownItems={kebabDropdownItems}\\n            />\\n          </PageHeaderToolsItem>\\n          <PageHeaderToolsItem\\n            visibility={{ default: 'hidden', md: 'visible' }} /** this user dropdown is hidden on mobile sizes */\\n          >\\n            <Dropdown\\n              isPlain\\n              position=\\\"right\\\"\\n              onSelect={this.onDropdownSelect}\\n              isOpen={isDropdownOpen}\\n              toggle={<DropdownToggle onToggle={this.onDropdownToggle}>John Smith</DropdownToggle>}\\n              dropdownItems={userDropdownItems}\\n            />\\n          </PageHeaderToolsItem>\\n        </PageHeaderToolsGroup>\\n        <Avatar src={imgAvatar} alt=\\\"Avatar image\\\" />\\n      </PageHeaderTools>\\n    );\\n\\n    const Header = (\\n      <PageHeader logo={<Brand src={imgBrand} alt=\\\"Patternfly Logo\\\" />} headerTools={headerTools} topNav={PageNav} />\\n    );\\n\\n    const pageId = 'main-content-page-layout-horizontal-nav';\\n    const PageSkipToContent = <SkipToContent href={`#${pageId}`}>Skip to content</SkipToContent>;\\n\\n    return (\\n      <React.Fragment>\\n        <Page\\n          header={Header}\\n          skipToContent={PageSkipToContent}\\n          breadcrumb={DashboardBreadcrumb}\\n          mainContainerId={pageId}\\n        >\\n          <PageSection variant={PageSectionVariants.light}>\\n            <TextContent>\\n              <Text component=\\\"h1\\\">Main title</Text>\\n              <Text component=\\\"p\\\">\\n                Body text should be Overpass Regular at 16px. It should have leading of 24px because <br />\\n                of its relative line height of 1.5.\\n              </Text>\\n            </TextContent>\\n          </PageSection>\\n          <PageSection>\\n            <Gallery hasGutter>\\n              {Array.apply(0, Array(10)).map((x, i) => (\\n                <GalleryItem key={i}>\\n                  <Card>\\n                    <CardBody>This is a card</CardBody>\\n                  </Card>\\n                </GalleryItem>\\n              ))}\\n            </Gallery>\\n          </PageSection>\\n        </Page>\\n      </React.Fragment>\\n    );\\n  }\\n}\",\n      \"title\": \"Horizontal nav\",\n      \"lang\": \"js\",\n      \"isFullscreen\": true\n    }));\n  },\n  'Horizontal subnav': function HorizontalSubnav(props) {\n    return /*#__PURE__*/React.createElement(Example, _extends({}, pageData, props, {\n      thumbnail: srcImporthorizontalsubnav,\n      \"code\": \"import React from 'react';\\nimport {\\n  Card,\\n  CardBody,\\n  Gallery,\\n  GalleryItem,\\n  Nav,\\n  NavItem,\\n  NavList,\\n  Page,\\n  PageSection,\\n  PageSectionVariants,\\n  PageSidebar,\\n  SkipToContent,\\n  TextContent,\\n  Text\\n} from '@patternfly/react-core';\\nimport { DashboardBreadcrumb } from './examples/DashboardWrapper';\\nimport DashboardHeader from './examples/DashboardHeader';\\n\\nclass VerticalNavWithSubnav extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      activeItem: 0,\\n      activeSubNavItem: 7\\n    };\\n\\n    this.onNavSelect = result => {\\n      this.setState({\\n        activeItem: result.itemId\\n      });\\n    };\\n\\n    this.onSubNavSelect = result => {\\n      this.setState({\\n        activeSubNavItem: result.itemId\\n      });\\n    };\\n  }\\n\\n  render() {\\n    const { activeItem, activeSubNavItem } = this.state;\\n\\n    const PageNav = (\\n      <Nav onSelect={this.onNavSelect} aria-label=\\\"Nav\\\">\\n        <NavList>\\n          <NavItem itemId={0} isActive={activeItem === 0} to=\\\"#\\\">\\n            System Panel\\n          </NavItem>\\n          <NavItem itemId={1} isActive={activeItem === 1} to=\\\"#\\\">\\n            Policy\\n          </NavItem>\\n          <NavItem itemId={2} isActive={activeItem === 2} to=\\\"#\\\">\\n            Authentication\\n          </NavItem>\\n          <NavItem itemId={3} isActive={activeItem === 3} to=\\\"#\\\">\\n            Network Services\\n          </NavItem>\\n          <NavItem itemId={4} isActive={activeItem === 4} to=\\\"#\\\">\\n            Server\\n          </NavItem>\\n        </NavList>\\n      </Nav>\\n    );\\n\\n    const Sidebar = <PageSidebar nav={PageNav} />;\\n    const pageId = 'main-content-page-layout-default-nav';\\n    const PageSkipToContent = <SkipToContent href={`#${pageId}`}>Skip to content</SkipToContent>;\\n\\n    const SubNav = (\\n      <Nav onSelect={this.onSubNavSelect} aria-label=\\\"Nav\\\" variant=\\\"horizontal-subnav\\\">\\n        <NavList>\\n          <NavItem itemId={7} isActive={activeSubNavItem === 7} to=\\\"#\\\">\\n            Horizontal subnav item 1\\n          </NavItem>\\n          <NavItem itemId={8} isActive={activeSubNavItem === 8} to=\\\"#\\\">\\n            Horizontal subnav item 2\\n          </NavItem>\\n          <NavItem itemId={9} isActive={activeSubNavItem === 9} to=\\\"#\\\">\\n            Horizontal subnav item 3\\n          </NavItem>\\n          <NavItem itemId={10} isActive={activeSubNavItem === 10} to=\\\"#\\\">\\n            Horizontal subnav item 4\\n          </NavItem>\\n          <NavItem itemId={11} isActive={activeSubNavItem === 11} to=\\\"#\\\">\\n            Horizontal subnav item 5\\n          </NavItem>\\n          <NavItem itemId={12} isActive={activeSubNavItem === 12} to=\\\"#\\\">\\n            Horizontal subnav item 6\\n          </NavItem>\\n          <NavItem itemId={13} isActive={activeSubNavItem === 13} to=\\\"#\\\">\\n            Horizontal subnav item 7\\n          </NavItem>\\n        </NavList>\\n      </Nav>\\n    );\\n\\n    return (\\n      <React.Fragment>\\n        <Page\\n          header={<DashboardHeader />}\\n          sidebar={Sidebar}\\n          isManagedSidebar\\n          skipToContent={PageSkipToContent}\\n          mainContainerId={pageId}\\n        >\\n          <PageSection type={PageSectionTypes.subNav} isWidthLimited>\\n            {SubNav}\\n          </PageSection>\\n          <PageSection type={PageSectionTypes.breadcrumb} isWidthLimited>\\n            {DashboardBreadcrumb}\\n          </PageSection>\\n          <PageSection variant={PageSectionVariants.light}>\\n            <TextContent>\\n              <Text component=\\\"h1\\\">Main title</Text>\\n              <Text component=\\\"p\\\">\\n                Body text should be Overpass Regular at 16px. It should have leading of 24px because <br />\\n                of it’s relative line height of 1.5.\\n              </Text>\\n            </TextContent>\\n          </PageSection>\\n          <PageSection>\\n            <Gallery hasGutter>\\n              {Array.apply(0, Array(10)).map((x, i) => (\\n                <GalleryItem key={i}>\\n                  <Card>\\n                    <CardBody>This is a card</CardBody>\\n                  </Card>\\n                </GalleryItem>\\n              ))}\\n            </Gallery>\\n          </PageSection>\\n        </Page>\\n      </React.Fragment>\\n    );\\n  }\\n}\",\n      \"title\": \"Horizontal subnav\",\n      \"lang\": \"js\",\n      \"isFullscreen\": true\n    }));\n  },\n  'Horizontal nav with horizontal subnav': function HorizontalNavWithHorizontalSubnav(props) {\n    return /*#__PURE__*/React.createElement(Example, _extends({}, pageData, props, {\n      thumbnail: srcImporthorizontalnavwithhorizontalsubnav,\n      \"code\": \"import React from 'react';\\nimport {\\n  Avatar,\\n  Brand,\\n  Button,\\n  ButtonVariant,\\n  Card,\\n  CardBody,\\n  Dropdown,\\n  DropdownGroup,\\n  DropdownToggle,\\n  DropdownItem,\\n  Gallery,\\n  GalleryItem,\\n  KebabToggle,\\n  Nav,\\n  NavItem,\\n  NavList,\\n  Page,\\n  PageHeader,\\n  PageSection,\\n  PageSectionVariants,\\n  PageSectionTypes,\\n  SkipToContent,\\n  TextContent,\\n  Text,\\n  PageHeaderTools,\\n  PageHeaderToolsGroup,\\n  PageHeaderToolsItem\\n} from '@patternfly/react-core';\\nimport { DashboardBreadcrumb } from './examples/DashboardWrapper';\\nimport CogIcon from '@patternfly/react-icons/dist/esm/icons/cog-icon';\\nimport HelpIcon from '@patternfly/react-icons/dist/esm/icons/help-icon';\\nimport QuestionCircleIcon from '@patternfly/react-icons/dist/esm/icons/question-circle-icon';\\nimport imgColorBrand from '@patternfly/react-core/src/demos/examples/pfColorLogo.svg';\\nimport imgAvatar from '@patternfly/react-core/src/components/Avatar/examples/avatarImg.svg';\\n\\nclass HorizontalNavWithSubnav extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      isDropdownOpen: false,\\n      isKebabDropdownOpen: false,\\n      activeItem: 0,\\n      activeSubNavItem: 7\\n    };\\n\\n    this.onDropdownToggle = isDropdownOpen => {\\n      this.setState({\\n        isDropdownOpen\\n      });\\n    };\\n\\n    this.onDropdownSelect = event => {\\n      this.setState({\\n        isDropdownOpen: !this.state.isDropdownOpen\\n      });\\n    };\\n\\n    this.onKebabDropdownToggle = isKebabDropdownOpen => {\\n      this.setState({\\n        isKebabDropdownOpen\\n      });\\n    };\\n\\n    this.onKebabDropdownSelect = event => {\\n      this.setState({\\n        isKebabDropdownOpen: !this.state.isKebabDropdownOpen\\n      });\\n    };\\n\\n    this.onNavSelect = result => {\\n      this.setState({\\n        activeItem: result.itemId\\n      });\\n    };\\n\\n    this.onSubNavSelect = result => {\\n      this.setState({\\n        activeSubNavItem: result.itemId\\n      });\\n    };\\n  }\\n\\n  render() {\\n    const { isDropdownOpen, isKebabDropdownOpen, activeItem, activeSubNavItem } = this.state;\\n\\n    const PageNav = (\\n      <Nav onSelect={this.onNavSelect} aria-label=\\\"Nav\\\" variant=\\\"horizontal\\\">\\n        <NavList>\\n          <NavItem itemId={0} isActive={activeItem === 0} to=\\\"#\\\">\\n            System Panel\\n          </NavItem>\\n          <NavItem itemId={1} isActive={activeItem === 1} to=\\\"#\\\">\\n            Policy\\n          </NavItem>\\n          <NavItem itemId={2} isActive={activeItem === 2} to=\\\"#\\\">\\n            Authentication\\n          </NavItem>\\n          <NavItem itemId={3} isActive={activeItem === 3} to=\\\"#\\\">\\n            Network Services\\n          </NavItem>\\n          <NavItem itemId={4} isActive={activeItem === 4} to=\\\"#\\\">\\n            Server\\n          </NavItem>\\n          <NavItem itemId={5} isActive={activeItem === 5} to=\\\"#\\\">\\n            Other horizontal nav item 1\\n          </NavItem>\\n          <NavItem itemId={6} isActive={activeItem === 6} to=\\\"#\\\">\\n            Other horizontal nav item 2\\n          </NavItem>\\n        </NavList>\\n      </Nav>\\n    );\\n    const kebabDropdownItems = [\\n      <DropdownItem>\\n        <CogIcon /> Settings\\n      </DropdownItem>,\\n      <DropdownItem>\\n        <HelpIcon /> Help\\n      </DropdownItem>\\n    ];\\n    const userDropdownItems = [\\n      <DropdownGroup key=\\\"group 2\\\">\\n        <DropdownItem key=\\\"group 2 profile\\\">My profile</DropdownItem>\\n        <DropdownItem key=\\\"group 2 user\\\" component=\\\"button\\\">\\n          User management\\n        </DropdownItem>\\n        <DropdownItem key=\\\"group 2 logout\\\">Logout</DropdownItem>\\n      </DropdownGroup>\\n    ];\\n    const headerTools = (\\n      <PageHeaderTools>\\n        <PageHeaderToolsGroup\\n          visibility={{\\n            default: 'hidden',\\n            lg: 'visible'\\n          }} /** the settings and help icon buttons are only visible on desktop sizes and replaced by a kebab dropdown for other sizes */\\n        >\\n          <PageHeaderToolsItem>\\n            <Button aria-label=\\\"Settings actions\\\" variant={ButtonVariant.plain}>\\n              <CogIcon />\\n            </Button>\\n          </PageHeaderToolsItem>\\n          <PageHeaderToolsItem>\\n            <Button aria-label=\\\"Help actions\\\" variant={ButtonVariant.plain}>\\n              <QuestionCircleIcon />\\n            </Button>\\n          </PageHeaderToolsItem>\\n        </PageHeaderToolsGroup>\\n        <PageHeaderToolsGroup>\\n          <PageHeaderToolsItem\\n            visibility={{\\n              lg: 'hidden'\\n            }} /** this kebab dropdown replaces the icon buttons and is hidden for desktop sizes */\\n          >\\n            <Dropdown\\n              isPlain\\n              position=\\\"right\\\"\\n              onSelect={this.onKebabDropdownSelect}\\n              toggle={<KebabToggle onToggle={this.onKebabDropdownToggle} />}\\n              isOpen={isKebabDropdownOpen}\\n              dropdownItems={kebabDropdownItems}\\n            />\\n          </PageHeaderToolsItem>\\n          <PageHeaderToolsItem\\n            visibility={{ default: 'hidden', md: 'visible' }} /** this user dropdown is hidden on mobile sizes */\\n          >\\n            <Dropdown\\n              isPlain\\n              position=\\\"right\\\"\\n              onSelect={this.onDropdownSelect}\\n              isOpen={isDropdownOpen}\\n              toggle={<DropdownToggle onToggle={this.onDropdownToggle}>John Smith</DropdownToggle>}\\n              dropdownItems={userDropdownItems}\\n            />\\n          </PageHeaderToolsItem>\\n        </PageHeaderToolsGroup>\\n        <Avatar src={imgAvatar} alt=\\\"Avatar image\\\" />\\n      </PageHeaderTools>\\n    );\\n\\n    const Header = (\\n      <PageHeader\\n        logo={<Brand src={imgColorBrand} alt=\\\"Patternfly Logo\\\" />}\\n        headerTools={headerTools}\\n        topNav={PageNav}\\n      />\\n    );\\n\\n    const pageId = 'main-content-page-layout-horizontal-nav';\\n    const PageSkipToContent = <SkipToContent href={`#${pageId}`}>Skip to content</SkipToContent>;\\n\\n    const SubNav = (\\n      <Nav onSelect={this.onSubNavSelect} aria-label=\\\"Nav\\\" variant=\\\"horizontal-subnav\\\">\\n        <NavList>\\n          <NavItem itemId={7} isActive={activeSubNavItem === 7} to=\\\"#\\\">\\n            Horizontal subnav item 1\\n          </NavItem>\\n          <NavItem itemId={8} isActive={activeSubNavItem === 8} to=\\\"#\\\">\\n            Horizontal subnav item 2\\n          </NavItem>\\n          <NavItem itemId={9} isActive={activeSubNavItem === 9} to=\\\"#\\\">\\n            Horizontal subnav item 3\\n          </NavItem>\\n          <NavItem itemId={10} isActive={activeSubNavItem === 10} to=\\\"#\\\">\\n            Horizontal subnav item 4\\n          </NavItem>\\n          <NavItem itemId={11} isActive={activeSubNavItem === 11} to=\\\"#\\\">\\n            Horizontal subnav item 5\\n          </NavItem>\\n          <NavItem itemId={12} isActive={activeSubNavItem === 12} to=\\\"#\\\">\\n            Horizontal subnav item 6\\n          </NavItem>\\n          <NavItem itemId={13} isActive={activeSubNavItem === 13} to=\\\"#\\\">\\n            Horizontal subnav item 7\\n          </NavItem>\\n        </NavList>\\n      </Nav>\\n    );\\n\\n    return (\\n      <React.Fragment>\\n        <Page header={Header} skipToContent={PageSkipToContent} mainContainerId={pageId}>\\n          <PageSection type={PageSectionTypes.subNav} isWidthLimited>\\n            {SubNav}\\n          </PageSection>\\n          <PageSection type={PageSectionTypes.breadcrumb} isWidthLimited>\\n            {DashboardBreadcrumb}\\n          </PageSection>\\n          <PageSection variant={PageSectionVariants.light}>\\n            <TextContent>\\n              <Text component=\\\"h1\\\">Main title</Text>\\n              <Text component=\\\"p\\\">\\n                Body text should be Overpass Regular at 16px. It should have leading of 24px because <br />\\n                of it’s relative line height of 1.5.\\n              </Text>\\n            </TextContent>\\n          </PageSection>\\n          <PageSection>\\n            <Gallery hasGutter>\\n              {Array.apply(0, Array(10)).map((x, i) => (\\n                <GalleryItem key={i}>\\n                  <Card>\\n                    <CardBody>This is a card</CardBody>\\n                  </Card>\\n                </GalleryItem>\\n              ))}\\n            </Gallery>\\n          </PageSection>\\n        </Page>\\n      </React.Fragment>\\n    );\\n  }\\n}\",\n      \"title\": \"Horizontal nav with horizontal subnav\",\n      \"lang\": \"js\",\n      \"isFullscreen\": true\n    }));\n  },\n  'Legacy tertiary nav': function LegacyTertiaryNav(props) {\n    return /*#__PURE__*/React.createElement(Example, _extends({}, pageData, props, {\n      thumbnail: srcImportlegacytertiarynav,\n      \"code\": \"import React from 'react';\\nimport {\\n  Card,\\n  CardBody,\\n  Gallery,\\n  GalleryItem,\\n  Nav,\\n  NavItem,\\n  NavList,\\n  Page,\\n  PageSection,\\n  PageSectionVariants,\\n  PageSidebar,\\n  SkipToContent,\\n  TextContent,\\n  Text\\n} from '@patternfly/react-core';\\nimport { DashboardBreadcrumb } from './examples/DashboardWrapper';\\nimport DashboardHeader from './examples/DashboardHeader';\\n\\nclass PageLayoutTertiaryNav extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      activeItem: 0\\n    };\\n\\n    this.onNavSelect = result => {\\n      this.setState({\\n        activeItem: result.itemId\\n      });\\n    };\\n  }\\n\\n  render() {\\n    const { activeItem } = this.state;\\n\\n    const PageNav = (\\n      <Nav variant=\\\"tertiary\\\" onSelect={this.onNavSelect} aria-label=\\\"Nav\\\">\\n        <NavList>\\n          <NavItem itemId={0} isActive={activeItem === 0} to=\\\"#\\\">\\n            System Panel\\n          </NavItem>\\n          <NavItem itemId={1} isActive={activeItem === 1} to=\\\"#\\\">\\n            Policy\\n          </NavItem>\\n          <NavItem itemId={2} isActive={activeItem === 2} to=\\\"#\\\">\\n            Authentication\\n          </NavItem>\\n          <NavItem itemId={3} isActive={activeItem === 3} to=\\\"#\\\">\\n            Network Services\\n          </NavItem>\\n          <NavItem itemId={4} isActive={activeItem === 4} to=\\\"#\\\">\\n            Server\\n          </NavItem>\\n        </NavList>\\n      </Nav>\\n    );\\n\\n    const pageId = 'main-content-page-layout-tertiary-nav';\\n    const PageSkipToContent = <SkipToContent href={`#${pageId}`}>Skip to content</SkipToContent>;\\n\\n    return (\\n      <React.Fragment>\\n        <Page\\n          header={<DashboardHeader />}\\n          breadcrumb={DashboardBreadcrumb}\\n          tertiaryNav={PageNav}\\n          isManagedSidebar\\n          isTertiaryNavWidthLimited\\n          skipToContent={PageSkipToContent}\\n          mainContainerId={pageId}\\n        >\\n          <PageSection variant={PageSectionVariants.light}>\\n            <TextContent>\\n              <Text component=\\\"h1\\\">Main title</Text>\\n              <Text component=\\\"p\\\">\\n                Body text should be Overpass Regular at 16px. It should have leading of 24px because <br />\\n                of its relative line height of 1.5.\\n              </Text>\\n            </TextContent>\\n          </PageSection>\\n          <PageSection>\\n            <Gallery hasGutter>\\n              {Array.apply(0, Array(10)).map((x, i) => (\\n                <GalleryItem key={i}>\\n                  <Card>\\n                    <CardBody>This is a card</CardBody>\\n                  </Card>\\n                </GalleryItem>\\n              ))}\\n            </Gallery>\\n          </PageSection>\\n        </Page>\\n      </React.Fragment>\\n    );\\n  }\\n}\",\n      \"title\": \"Legacy tertiary nav\",\n      \"lang\": \"js\",\n      \"isFullscreen\": true\n    }));\n  },\n  'Legacy/Light Nav': function LegacyLightNav(props) {\n    return /*#__PURE__*/React.createElement(Example, _extends({}, pageData, props, {\n      thumbnail: srcImportlegacylightnav,\n      \"code\": \"import React from 'react';\\nimport {\\n  Card,\\n  CardBody,\\n  Gallery,\\n  GalleryItem,\\n  Nav,\\n  NavItem,\\n  NavList,\\n  Page,\\n  PageSection,\\n  PageSectionVariants,\\n  PageSidebar,\\n  SkipToContent,\\n  TextContent,\\n  Text\\n} from '@patternfly/react-core';\\nimport DashboardHeader from './examples/DashboardHeader';\\n\\nclass PageLayoutLightNav extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      activeItem: 0\\n    };\\n\\n    this.onNavSelect = result => {\\n      this.setState({\\n        activeItem: result.itemId\\n      });\\n    };\\n  }\\n\\n  render() {\\n    const { activeItem } = this.state;\\n\\n    const PageNav = (\\n      <Nav onSelect={this.onNavSelect} aria-label=\\\"Nav\\\" theme=\\\"light\\\">\\n        <NavList>\\n          <NavItem itemId={0} isActive={activeItem === 0} to=\\\"#\\\">\\n            System Panel\\n          </NavItem>\\n          <NavItem itemId={1} isActive={activeItem === 1} to=\\\"#\\\">\\n            Policy\\n          </NavItem>\\n          <NavItem itemId={2} isActive={activeItem === 2} to=\\\"#\\\">\\n            Authentication\\n          </NavItem>\\n          <NavItem itemId={3} isActive={activeItem === 3} to=\\\"#\\\">\\n            Network Services\\n          </NavItem>\\n          <NavItem itemId={4} isActive={activeItem === 4} to=\\\"#\\\">\\n            Server\\n          </NavItem>\\n        </NavList>\\n      </Nav>\\n    );\\n\\n    const Sidebar = <PageSidebar nav={PageNav} theme=\\\"light\\\" />;\\n    const pageId = 'main-content-page-layout-simple-nav';\\n    const PageSkipToContent = <SkipToContent href={`#${pageId}`}>Skip to Content</SkipToContent>;\\n\\n    return (\\n      <React.Fragment>\\n        <Page\\n          header={<DashboardHeader />}\\n          sidebar={Sidebar}\\n          isManagedSidebar\\n          skipToContent={PageSkipToContent}\\n          mainContainerId={pageId}\\n        >\\n          <PageSection variant={PageSectionVariants.light}>\\n            <TextContent>\\n              <Text component=\\\"h1\\\">Main title</Text>\\n              <Text component=\\\"p\\\">\\n                Body text should be Overpass Regular at 16px. It should have leading of 24px because <br />\\n                of its relative line height of 1.5.\\n              </Text>\\n            </TextContent>\\n          </PageSection>\\n          <PageSection>\\n            <Gallery hasGutter>\\n              {Array.apply(0, Array(10)).map((x, i) => (\\n                <GalleryItem key={i}>\\n                  <Card>\\n                    <CardBody>This is a card</CardBody>\\n                  </Card>\\n                </GalleryItem>\\n              ))}\\n            </Gallery>\\n          </PageSection>\\n        </Page>\\n      </React.Fragment>\\n    );\\n  }\\n}\",\n      \"title\": \"Legacy/Light Nav\",\n      \"lang\": \"js\",\n      \"isFullscreen\": true\n    }));\n  },\n  'Manual nav': function ManualNav(props) {\n    return /*#__PURE__*/React.createElement(Example, _extends({}, pageData, props, {\n      thumbnail: srcImportmanualnav,\n      \"code\": \"import React from 'react';\\nimport {\\n  Avatar,\\n  Brand,\\n  Button,\\n  ButtonVariant,\\n  Card,\\n  CardBody,\\n  Dropdown,\\n  DropdownGroup,\\n  DropdownToggle,\\n  DropdownItem,\\n  Gallery,\\n  GalleryItem,\\n  KebabToggle,\\n  Nav,\\n  NavItem,\\n  NavList,\\n  Page,\\n  PageHeader,\\n  PageSection,\\n  PageSectionVariants,\\n  PageSidebar,\\n  SkipToContent,\\n  TextContent,\\n  Text,\\n  PageHeaderTools,\\n  PageHeaderToolsGroup,\\n  PageHeaderToolsItem\\n} from '@patternfly/react-core';\\nimport CogIcon from '@patternfly/react-icons/dist/esm/icons/cog-icon';\\nimport HelpIcon from '@patternfly/react-icons/dist/esm/icons/help-icon';\\nimport QuestionCircleIcon from '@patternfly/react-icons/dist/esm/icons/question-circle-icon';\\nimport imgBrand from '@patternfly/react-core/src/components/Brand/examples/pfLogo.svg';\\nimport imgAvatar from '@patternfly/react-core/src/components/Avatar/examples/avatarImg.svg';\\n\\nclass PageLayoutManualNav extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      isDropdownOpen: false,\\n      isKebabDropdownOpen: false,\\n      activeItem: 0,\\n      isMobileView: false,\\n      isNavOpenDesktop: true,\\n      isNavOpenMobile: false\\n    };\\n\\n    this.onDropdownToggle = isDropdownOpen => {\\n      this.setState({\\n        isDropdownOpen\\n      });\\n    };\\n\\n    this.onDropdownSelect = event => {\\n      this.setState({\\n        isDropdownOpen: !this.state.isDropdownOpen\\n      });\\n    };\\n\\n    this.onKebabDropdownToggle = isKebabDropdownOpen => {\\n      this.setState({\\n        isKebabDropdownOpen\\n      });\\n    };\\n\\n    this.onKebabDropdownSelect = event => {\\n      this.setState({\\n        isKebabDropdownOpen: !this.state.isKebabDropdownOpen\\n      });\\n    };\\n\\n    this.onNavSelect = result => {\\n      this.setState({\\n        activeItem: result.itemId\\n      });\\n    };\\n\\n    this.onNavToggleDesktop = () => {\\n      this.setState({\\n        isNavOpenDesktop: !this.state.isNavOpenDesktop\\n      });\\n    };\\n\\n    this.onNavToggleMobile = () => {\\n      this.setState({\\n        isNavOpenMobile: !this.state.isNavOpenMobile\\n      });\\n    };\\n\\n    this.onPageResize = ({ mobileView, windowSize }) => {\\n      this.setState({\\n        isMobileView: mobileView\\n      });\\n    };\\n  }\\n\\n  render() {\\n    const {\\n      isDropdownOpen,\\n      isKebabDropdownOpen,\\n      activeItem,\\n      isNavOpenDesktop,\\n      isNavOpenMobile,\\n      isMobileView\\n    } = this.state;\\n\\n    const PageNav = (\\n      <Nav onSelect={this.onNavSelect} aria-label=\\\"Nav\\\">\\n        <NavList>\\n          <NavItem itemId={0} isActive={activeItem === 0} to=\\\"#\\\">\\n            System Panel\\n          </NavItem>\\n          <NavItem itemId={1} isActive={activeItem === 1} to=\\\"#\\\">\\n            Policy\\n          </NavItem>\\n          <NavItem itemId={2} isActive={activeItem === 2} to=\\\"#\\\">\\n            Authentication\\n          </NavItem>\\n          <NavItem itemId={3} isActive={activeItem === 3} to=\\\"#\\\">\\n            Network Services\\n          </NavItem>\\n          <NavItem itemId={4} isActive={activeItem === 4} to=\\\"#\\\">\\n            Server\\n          </NavItem>\\n        </NavList>\\n      </Nav>\\n    );\\n    const kebabDropdownItems = [\\n      <DropdownItem>\\n        <CogIcon /> Settings\\n      </DropdownItem>,\\n      <DropdownItem>\\n        <HelpIcon /> Help\\n      </DropdownItem>\\n    ];\\n    const userDropdownItems = [\\n      <DropdownGroup key=\\\"group 2\\\">\\n        <DropdownItem key=\\\"group 2 profile\\\">My profile</DropdownItem>\\n        <DropdownItem key=\\\"group 2 user\\\" component=\\\"button\\\">\\n          User management\\n        </DropdownItem>\\n        <DropdownItem key=\\\"group 2 logout\\\">Logout</DropdownItem>\\n      </DropdownGroup>\\n    ];\\n    const headerTools = (\\n      <PageHeaderTools>\\n        <PageHeaderToolsGroup\\n          visibility={{\\n            default: 'hidden',\\n            lg: 'visible'\\n          }} /** the settings and help icon buttons are only visible on desktop sizes and replaced by a kebab dropdown for other sizes */\\n        >\\n          <PageHeaderToolsItem>\\n            <Button aria-label=\\\"Settings actions\\\" variant={ButtonVariant.plain}>\\n              <CogIcon />\\n            </Button>\\n          </PageHeaderToolsItem>\\n          <PageHeaderToolsItem>\\n            <Button aria-label=\\\"Help actions\\\" variant={ButtonVariant.plain}>\\n              <QuestionCircleIcon />\\n            </Button>\\n          </PageHeaderToolsItem>\\n        </PageHeaderToolsGroup>\\n        <PageHeaderToolsGroup>\\n          <PageHeaderToolsItem\\n            visibility={{\\n              default: 'hidden',\\n              breakpoint: 'lg'\\n            }} /** this kebab dropdown replaces the icon buttons and is hidden for desktop sizes */\\n          >\\n            <Dropdown\\n              isPlain\\n              position=\\\"right\\\"\\n              onSelect={this.onKebabDropdownSelect}\\n              toggle={<KebabToggle onToggle={this.onKebabDropdownToggle} />}\\n              isOpen={isKebabDropdownOpen}\\n              dropdownItems={kebabDropdownItems}\\n            />\\n          </PageHeaderToolsItem>\\n          <PageHeaderToolsItem\\n            visibility={{ default: 'hidden', md: 'visible' }} /** this user dropdown is hidden on mobile sizes */\\n          >\\n            <Dropdown\\n              isPlain\\n              position=\\\"right\\\"\\n              onSelect={this.onDropdownSelect}\\n              isOpen={isDropdownOpen}\\n              toggle={<DropdownToggle onToggle={this.onDropdownToggle}>John Smith</DropdownToggle>}\\n              dropdownItems={userDropdownItems}\\n            />\\n          </PageHeaderToolsItem>\\n        </PageHeaderToolsGroup>\\n        <Avatar src={imgAvatar} alt=\\\"Avatar image\\\" />\\n      </PageHeaderTools>\\n    );\\n\\n    const Header = (\\n      <PageHeader\\n        logo={<Brand src={imgBrand} alt=\\\"Patternfly Logo\\\" />}\\n        headerTools={headerTools}\\n        showNavToggle\\n        onNavToggle={isMobileView ? this.onNavToggleMobile : this.onNavToggleDesktop}\\n        isNavOpen={isMobileView ? isNavOpenMobile : isNavOpenDesktop}\\n      />\\n    );\\n    const Sidebar = <PageSidebar nav={PageNav} isNavOpen={isMobileView ? isNavOpenMobile : isNavOpenDesktop} />;\\n    const pageId = 'main-content-page-layout-manual-nav';\\n    const PageSkipToContent = <SkipToContent href={`#${pageId}`}>Skip to Content</SkipToContent>;\\n\\n    return (\\n      <React.Fragment>\\n        <Page\\n          header={Header}\\n          sidebar={Sidebar}\\n          onPageResize={this.onPageResize}\\n          skipToContent={PageSkipToContent}\\n          mainContainerId={pageId}\\n        >\\n          <PageSection variant={PageSectionVariants.light}>\\n            <TextContent>\\n              <Text component=\\\"h1\\\">Main title</Text>\\n              <Text component=\\\"p\\\">\\n                Body text should be Overpass Regular at 16px. It should have leading of 24px because <br />\\n                of its relative line height of 1.5.\\n              </Text>\\n            </TextContent>\\n          </PageSection>\\n          <PageSection>\\n            <Gallery hasGutter>\\n              {Array.apply(0, Array(10)).map((x, i) => (\\n                <GalleryItem key={i}>\\n                  <Card>\\n                    <CardBody>This is a card</CardBody>\\n                  </Card>\\n                </GalleryItem>\\n              ))}\\n            </Gallery>\\n          </PageSection>\\n        </Page>\\n      </React.Fragment>\\n    );\\n  }\\n}\",\n      \"title\": \"Manual nav\",\n      \"lang\": \"js\",\n      \"isFullscreen\": true\n    }));\n  },\n  'Flyout nav': function FlyoutNav(props) {\n    return /*#__PURE__*/React.createElement(Example, _extends({}, pageData, props, {\n      thumbnail: srcImportflyoutnav,\n      \"code\": \"import React from 'react';\\nimport {\\n  Page,\\n  Nav,\\n  NavList,\\n  NavItem,\\n  PageHeader,\\n  PageHeaderTools,\\n  PageSidebar,\\n  PageSection,\\n  PageSectionVariants,\\n  Menu,\\n  MenuContent,\\n  MenuList,\\n  MenuItem\\n} from '@patternfly/react-core';\\nimport DashboardHeader from './examples/DashboardHeader';\\n\\nclass VerticalPage extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      isNavOpen: true,\\n      activeItem: 0\\n    };\\n    this.onNavSelect = result => {\\n      this.setState({\\n        activeItem: result.itemId\\n      });\\n    };\\n    this.onMenuSelect = (event, itemId) => {\\n      this.setState({\\n        activeItem: itemId\\n      });\\n    };\\n  }\\n\\n  render() {\\n    const numFlyouts = 5;\\n    const FlyoutMenu = ({ depth, children }) => (\\n      <Menu key={depth} containsFlyout isNavFlyout id={`menu-${depth}`} onSelect={this.onMenuSelect}>\\n        <MenuContent>\\n          <MenuList>\\n            <MenuItem flyoutMenu={children} itemId={`next-menu-${depth}`} to={`#menu-link-${depth}`}>\\n              Additional settings\\n            </MenuItem>\\n            {[...Array(numFlyouts - depth).keys()].map(j => (\\n              <MenuItem key={`${depth}-${j}`} itemId={`${depth}-${j}`} to={`#menu-link-${depth}-${j}`}>\\n                Settings menu {depth} item {j}\\n              </MenuItem>\\n            ))}\\n            <MenuItem flyoutMenu={children} itemId={`next-menu-2-${depth}`} to={`#second-menu-link-${depth}`}>\\n              Additional settings\\n            </MenuItem>\\n          </MenuList>\\n        </MenuContent>\\n      </Menu>\\n    );\\n    let curFlyout = <FlyoutMenu depth={1} />;\\n    for (let i = 2; i < numFlyouts - 1; i++) {\\n      curFlyout = <FlyoutMenu depth={i}>{curFlyout}</FlyoutMenu>;\\n    }\\n\\n    const { activeItem } = this.state;\\n\\n    const Sidebar = (\\n      <PageSidebar\\n        nav={\\n          <Nav onSelect={this.onNavSelect}>\\n            <NavList>\\n              <NavItem id=\\\"flyout-link1\\\" to=\\\"#flyout-link1\\\" itemId={0} isActive={activeItem === 0}>\\n                System Panel\\n              </NavItem>\\n              <NavItem flyout={curFlyout} id=\\\"flyout-link2\\\" to=\\\"#flyout-link2\\\" itemId={1} isActive={activeItem === 1}>\\n                Settings\\n              </NavItem>\\n              <NavItem id=\\\"flyout-link3\\\" to=\\\"#flyout-link3\\\" itemId={2} isActive={activeItem === 2}>\\n                Authentication\\n              </NavItem>\\n            </NavList>\\n          </Nav>\\n        }\\n      />\\n    );\\n\\n    return (\\n      <Page header={<DashboardHeader />} sidebar={Sidebar} isManagedSidebar>\\n        <PageSection variant={PageSectionVariants.darker}>Section with darker background</PageSection>\\n        <PageSection variant={PageSectionVariants.dark}>Section with dark background</PageSection>\\n        <PageSection variant={PageSectionVariants.light}>Section with light background</PageSection>\\n      </Page>\\n    );\\n  }\\n}\",\n      \"title\": \"Flyout nav\",\n      \"lang\": \"js\",\n      \"isFullscreen\": true\n    }));\n  },\n  'Drilldown nav': function DrilldownNav(props) {\n    return /*#__PURE__*/React.createElement(Example, _extends({}, pageData, props, {\n      thumbnail: srcImportdrilldownnav,\n      \"code\": \"import React from 'react';\\n\\nimport {\\n  Page,\\n  PageSidebar,\\n  Nav,\\n  MenuContent,\\n  MenuItem,\\n  MenuList,\\n  DrilldownMenu,\\n  Menu,\\n  PageSection\\n} from '@patternfly/react-core';\\n\\nimport DashboardHeader from '../DashboardHeader';\\n\\ninterface MenuHeights {\\n  [menuId: string]: number;\\n}\\n\\nfunction getNavLayer(menuId: string): number {\\n  switch (menuId) {\\n    case 'rootMenu':\\n      return 1;\\n    case 'subMenu-1':\\n      return 2;\\n    case 'subMenu-2':\\n      return 3;\\n  }\\n}\\n\\nconst subMenuTwo: JSX.Element = (\\n  <DrilldownMenu id=\\\"subMenu-2\\\">\\n    <MenuItem itemId=\\\"subMenu-2-breadcrumb\\\" direction=\\\"up\\\">\\n      SubMenu 1 - Item 1\\n    </MenuItem>\\n    <MenuItem itemId=\\\"subMenu-2_item-1\\\" to=\\\"#subMenu-2_item-1\\\">\\n      SubMenu 2 - Item 1\\n    </MenuItem>\\n    <MenuItem itemId=\\\"subMenu-2_item-2\\\" to=\\\"#subMenu-2_item-2\\\">\\n      SubMenu 2 - Item 2\\n    </MenuItem>\\n    <MenuItem itemId=\\\"subMenu-2_item-3\\\" to=\\\"#subMenu-2_item-3\\\">\\n      SubMenu 2 - Item 3\\n    </MenuItem>\\n  </DrilldownMenu>\\n);\\n\\nconst subMenuOne: JSX.Element = (\\n  <DrilldownMenu id=\\\"subMenu-1\\\">\\n    <MenuItem itemId=\\\"subMenu-1-breadcrumb\\\" direction=\\\"up\\\">\\n      Item 1\\n    </MenuItem>\\n    <MenuItem itemId=\\\"subMenu-1_item-1\\\" description=\\\"SubMenu 2\\\" direction=\\\"down\\\" drilldownMenu={subMenuTwo}>\\n      SubMenu 1 - Item 1\\n    </MenuItem>\\n    <MenuItem itemId=\\\"subMenu-1_item-2\\\" to=\\\"#subMenu-1_item-2\\\">\\n      SubMenu 1 - Item 2\\n    </MenuItem>\\n    <MenuItem itemId=\\\"subMenu-1_item-3\\\" to=\\\"#subMenu-1_item-3\\\">\\n      SubMenu 1 - Item 3\\n    </MenuItem>\\n  </DrilldownMenu>\\n);\\n\\nexport const NavDrilldown: React.FunctionComponent = () => {\\n  const [menuDrilledIn, setMenuDrilledIn] = React.useState<string[]>([]);\\n  const [drilldownPath, setDrilldownPath] = React.useState<string[]>([]);\\n  const [menuHeights, setMenuHeights] = React.useState<MenuHeights>({});\\n  const [activeMenuId, setActiveMenuId] = React.useState('rootMenu');\\n  const navLayer = getNavLayer(activeMenuId);\\n\\n  const onDrillIn = (fromItemId: string, toItemId: string, itemId: string) => {\\n    setMenuDrilledIn(prevMenuDrilledIn => [...prevMenuDrilledIn, fromItemId]);\\n    setDrilldownPath(prevDrilldownPath => [...prevDrilldownPath, itemId]);\\n    setActiveMenuId(toItemId);\\n  };\\n\\n  const onDrillOut = (toItemId: string, _itemId: string) => {\\n    setMenuDrilledIn(prevMenuDrilledIn => prevMenuDrilledIn.slice(0, prevMenuDrilledIn.length - 1));\\n    setDrilldownPath(prevDrilldownPath => prevDrilldownPath.slice(0, prevDrilldownPath.length - 1));\\n    setActiveMenuId(toItemId);\\n  };\\n\\n  const onGetMenuHeight = (menuId: string, height: number) => {\\n    if (!menuHeights[menuId] && menuId !== 'rootMenu') {\\n      setMenuHeights(prevMenuHeights => ({ ...prevMenuHeights, [menuId]: height }));\\n    }\\n  };\\n\\n  const sidebar = (\\n    <PageSidebar\\n      nav={\\n        <Nav>\\n          <Menu\\n            id=\\\"rootMenu\\\"\\n            containsDrilldown\\n            drilldownItemPath={drilldownPath}\\n            drilledInMenus={menuDrilledIn}\\n            activeMenu={activeMenuId}\\n            onDrillIn={onDrillIn}\\n            onDrillOut={onDrillOut}\\n            onGetMenuHeight={onGetMenuHeight}\\n          >\\n            <MenuContent menuHeight={`${menuHeights[activeMenuId]}px`}>\\n              <MenuList>\\n                <MenuItem itemId=\\\"item-1\\\" direction=\\\"down\\\" description=\\\"SubMenu 1\\\" drilldownMenu={subMenuOne}>\\n                  Item 1\\n                </MenuItem>\\n                <MenuItem itemId=\\\"item-2\\\" to=\\\"#item-2\\\">\\n                  Item 2\\n                </MenuItem>\\n                <MenuItem itemId=\\\"item-3\\\" to=\\\"#item-3\\\">\\n                  Item 3\\n                </MenuItem>\\n              </MenuList>\\n            </MenuContent>\\n          </Menu>\\n        </Nav>\\n      }\\n    />\\n  );\\n\\n  return (\\n    <Page header={<DashboardHeader />} sidebar={sidebar}>\\n      <PageSection>\\n        <strong>Nav Layer: </strong>\\n        {navLayer}\\n      </PageSection>\\n    </Page>\\n  );\\n};\\n\",\n      \"title\": \"Drilldown nav\",\n      \"lang\": \"js\",\n      \"isBeta\": true,\n      \"isFullscreen\": true\n    }));\n  }\n};\n\nvar Component = function Component() {\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(AutoLinkHeader, {\n    \"id\": \"demos\",\n    \"size\": \"h2\",\n    \"className\": \"ws-title ws-h2\"\n  }, \"Demos\"), React.createElement(pageData.examples[\"Default nav\"]), React.createElement(pageData.examples[\"Grouped nav\"]), React.createElement(pageData.examples[\"Expandable nav\"]), React.createElement(pageData.examples[\"Horizontal nav\"]), React.createElement(pageData.examples[\"Horizontal subnav\"]), React.createElement(pageData.examples[\"Horizontal nav with horizontal subnav\"]), React.createElement(pageData.examples[\"Legacy tertiary nav\"]), React.createElement(pageData.examples[\"Legacy/Light Nav\"]), React.createElement(pageData.examples[\"Manual nav\"]), React.createElement(pageData.examples[\"Flyout nav\"]), React.createElement(pageData.examples[\"Drilldown nav\"]));\n};\n\nComponent.displayName = 'ComponentsNavigationReactDemosDocs';\nComponent.pageData = pageData;\nexport default Component;","map":{"version":3,"names":["React","AutoLinkHeader","Example","Link","PatternflyThemeLink","DashboardBreadcrumb","DashboardHeader","CogIcon","HelpIcon","QuestionCircleIcon","imgBrand","imgAvatar","imgColorBrand","srcImportdefaultnav","srcImportdrilldownnav","srcImportexpandablenav","srcImportflyoutnav","srcImportgroupednav","srcImporthorizontalnavwithhorizontalsubnav","srcImporthorizontalnav","srcImporthorizontalsubnav","srcImportlegacytertiarynav","srcImportlegacylightnav","srcImportmanualnav","srcImporttertiarynav","pageData","liveContext","examples","props","Component","createElement","displayName"],"sources":["/Users/jschuler/Code/patternfly-quickstarts/packages/docs/src/generated/components/navigation/react-demos.js"],"sourcesContent":["import React from 'react';\nimport { AutoLinkHeader, Example, Link as PatternflyThemeLink } from 'theme-patternfly-org/components';\nimport { DashboardBreadcrumb } from '../../../../node_modules/@patternfly/react-core/src/demos/./examples/DashboardWrapper';\nimport DashboardHeader from '../../../../node_modules/@patternfly/react-core/src/demos/./examples/DashboardHeader';\nimport CogIcon from '@patternfly/react-icons/dist/esm/icons/cog-icon';\nimport HelpIcon from '@patternfly/react-icons/dist/esm/icons/help-icon';\nimport QuestionCircleIcon from '@patternfly/react-icons/dist/esm/icons/question-circle-icon';\nimport imgBrand from '@patternfly/react-core/src/components/Brand/examples/pfLogo.svg';\nimport imgAvatar from '@patternfly/react-core/src/components/Avatar/examples/avatarImg.svg';\nimport imgColorBrand from '@patternfly/react-core/src/demos/examples/pfColorLogo.svg';\nimport srcImportdefaultnav from './react-demos/default-nav.png';\nimport srcImportdrilldownnav from './react-demos/drilldown-nav.png';\nimport srcImportexpandablenav from './react-demos/expandable-nav.png';\nimport srcImportflyoutnav from './react-demos/flyout-nav.png';\nimport srcImportgroupednav from './react-demos/grouped-nav.png';\nimport srcImporthorizontalnavwithhorizontalsubnav from './react-demos/horizontal-nav-with-horizontal-subnav.png';\nimport srcImporthorizontalnav from './react-demos/horizontal-nav.png';\nimport srcImporthorizontalsubnav from './react-demos/horizontal-subnav.png';\nimport srcImportlegacytertiarynav from './react-demos/legacy-tertiary-nav.png';\nimport srcImportlegacylightnav from './react-demos/legacylight-nav.png';\nimport srcImportmanualnav from './react-demos/manual-nav.png';\nimport srcImporttertiarynav from './react-demos/tertiary-nav.png';\nconst pageData = {\n  \"id\": \"Navigation\",\n  \"section\": \"components\",\n  \"source\": \"react-demos\",\n  \"slug\": \"/components/navigation/react-demos\",\n  \"sourceLink\": \"https://github.com/patternfly/patternfly-react/blob/main/packages/docs/packages/react-core/src/demos/Nav.md\",\n  \"fullscreenExamples\": [\n    \"Default nav\",\n    \"Grouped nav\",\n    \"Expandable nav\",\n    \"Horizontal nav\",\n    \"Horizontal subnav\",\n    \"Horizontal nav with horizontal subnav\",\n    \"Legacy tertiary nav\",\n    \"Legacy/Light Nav\",\n    \"Manual nav\",\n    \"Flyout nav\",\n    \"Drilldown nav\"\n  ]\n};\npageData.liveContext = {\n  DashboardBreadcrumb,\n  DashboardHeader,\n  CogIcon,\n  HelpIcon,\n  QuestionCircleIcon,\n  imgBrand,\n  imgAvatar,\n  imgColorBrand\n};\npageData.examples = {\n  'Default nav': props => \n    <Example {...pageData} {...props} thumbnail={srcImportdefaultnav} {...{\"code\":\"import React from 'react';\\nimport {\\n  Card,\\n  CardBody,\\n  Gallery,\\n  GalleryItem,\\n  Nav,\\n  NavItem,\\n  NavList,\\n  Page,\\n  PageSection,\\n  PageSectionVariants,\\n  PageSidebar,\\n  SkipToContent,\\n  TextContent,\\n  Text\\n} from '@patternfly/react-core';\\nimport { DashboardBreadcrumb } from './examples/DashboardWrapper';\\nimport DashboardHeader from './examples/DashboardHeader';\\n\\nclass PageLayoutDefaultNav extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      activeItem: 0\\n    };\\n\\n    this.onNavSelect = result => {\\n      this.setState({\\n        activeItem: result.itemId\\n      });\\n    };\\n  }\\n\\n  render() {\\n    const { activeItem } = this.state;\\n\\n    const PageNav = (\\n      <Nav onSelect={this.onNavSelect} aria-label=\\\"Nav\\\">\\n        <NavList>\\n          <NavItem itemId={0} isActive={activeItem === 0} to=\\\"#\\\">\\n            System Panel\\n          </NavItem>\\n          <NavItem itemId={1} isActive={activeItem === 1} to=\\\"#\\\">\\n            Policy\\n          </NavItem>\\n          <NavItem itemId={2} isActive={activeItem === 2} to=\\\"#\\\">\\n            Authentication\\n          </NavItem>\\n          <NavItem itemId={3} isActive={activeItem === 3} to=\\\"#\\\">\\n            Network Services\\n          </NavItem>\\n          <NavItem itemId={4} isActive={activeItem === 4} to=\\\"#\\\">\\n            Server\\n          </NavItem>\\n        </NavList>\\n      </Nav>\\n    );\\n\\n    const Sidebar = <PageSidebar nav={PageNav} />;\\n    const pageId = 'main-content-page-layout-default-nav';\\n    const PageSkipToContent = <SkipToContent href={`#${pageId}`}>Skip to content</SkipToContent>;\\n\\n    return (\\n      <React.Fragment>\\n        <Page\\n          header={<DashboardHeader />}\\n          sidebar={Sidebar}\\n          isManagedSidebar\\n          skipToContent={PageSkipToContent}\\n          breadcrumb={DashboardBreadcrumb}\\n          mainContainerId={pageId}\\n        >\\n          <PageSection variant={PageSectionVariants.light}>\\n            <TextContent>\\n              <Text component=\\\"h1\\\">Main title</Text>\\n              <Text component=\\\"p\\\">\\n                Body text should be Overpass Regular at 16px. It should have leading of 24px because <br />\\n                of its relative line height of 1.5.\\n              </Text>\\n            </TextContent>\\n          </PageSection>\\n          <PageSection>\\n            <Gallery hasGutter>\\n              {Array.apply(0, Array(10)).map((x, i) => (\\n                <GalleryItem key={i}>\\n                  <Card>\\n                    <CardBody>This is a card</CardBody>\\n                  </Card>\\n                </GalleryItem>\\n              ))}\\n            </Gallery>\\n          </PageSection>\\n        </Page>\\n      </React.Fragment>\\n    );\\n  }\\n}\",\"title\":\"Default nav\",\"lang\":\"js\",\"isFullscreen\":true}}>\n      \n    </Example>,\n  'Grouped nav': props => \n    <Example {...pageData} {...props} thumbnail={srcImportgroupednav} {...{\"code\":\"import React from 'react';\\nimport {\\n  Nav,\\n  NavGroup,\\n  NavItem,\\n  Page,\\n  PageSection,\\n  PageSectionVariants,\\n  PageSidebar,\\n  SkipToContent,\\n  TextContent,\\n  Text\\n} from '@patternfly/react-core';\\nimport DashboardHeader from './examples/DashboardHeader';\\n\\nclass PageLayoutGroupsNav extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      activeItem: 'grp-1_itm-1'\\n    };\\n\\n    this.onNavSelect = result => {\\n      this.setState({\\n        activeItem: result.itemId\\n      });\\n    };\\n  }\\n\\n  render() {\\n    const { activeItem } = this.state;\\n\\n    const PageNav = (\\n      <Nav onSelect={this.onNavSelect} aria-label=\\\"Nav\\\">\\n        <NavGroup title=\\\"System Panel\\\">\\n          <NavItem itemId=\\\"grp-1_itm-1\\\" isActive={activeItem === 'grp-1_itm-1'} to=\\\"#\\\">\\n            Overview\\n          </NavItem>\\n          <NavItem itemId=\\\"grp-1_itm-2\\\" isActive={activeItem === 'grp-1_itm-2'} to=\\\"#\\\">\\n            Resource Usage\\n          </NavItem>\\n          <NavItem itemId=\\\"grp-1_itm-3\\\" isActive={activeItem === 'grp-1_itm-3'} to=\\\"#\\\">\\n            Hypervisors\\n          </NavItem>\\n          <NavItem itemId=\\\"grp-1_itm-4\\\" isActive={activeItem === 'grp-1_itm-4'} to=\\\"#\\\">\\n            Instances\\n          </NavItem>\\n          <NavItem itemId=\\\"grp-1_itm-5\\\" isActive={activeItem === 'grp-1_itm-5'} to=\\\"#\\\">\\n            Volumes\\n          </NavItem>\\n          <NavItem itemId=\\\"grp-1_itm-6\\\" isActive={activeItem === 'grp-1_itm-6'} to=\\\"#\\\">\\n            Network\\n          </NavItem>\\n        </NavGroup>\\n        <NavGroup title=\\\"Policy\\\">\\n          <NavItem itemId=\\\"grp-2_itm-1\\\" isActive={activeItem === 'grp-2_itm-1'} to=\\\"#\\\">\\n            Hosts\\n          </NavItem>\\n          <NavItem itemId=\\\"grp-2_itm-2\\\" isActive={activeItem === 'grp-2_itm-2'} to=\\\"#\\\">\\n            Virtual Machines\\n          </NavItem>\\n          <NavItem itemId=\\\"grp-2_itm-3\\\" isActive={activeItem === 'grp-2_itm-3'} to=\\\"#\\\">\\n            Storage\\n          </NavItem>\\n        </NavGroup>\\n      </Nav>\\n    );\\n\\n    const Sidebar = <PageSidebar nav={PageNav} />;\\n    const pageId = 'main-content-page-layout-group-nav';\\n    const PageSkipToContent = <SkipToContent href={`#${pageId}`}>Skip to Content</SkipToContent>;\\n\\n    return (\\n      <React.Fragment>\\n        <Page\\n          header={<DashboardHeader />}\\n          sidebar={Sidebar}\\n          isManagedSidebar\\n          skipToContent={PageSkipToContent}\\n          mainContainerId={pageId}\\n        >\\n          <PageSection variant={PageSectionVariants.light}>\\n            <TextContent>\\n              <Text component=\\\"h1\\\">Main title</Text>\\n              <Text component=\\\"p\\\">\\n                Body text should be Overpass Regular at 16px. It should have leading of 24px because <br />\\n                of its relative line height of 1.5.\\n              </Text>\\n            </TextContent>\\n          </PageSection>\\n          <PageSection variant={PageSectionVariants.light}>Light</PageSection>\\n          <PageSection variant={PageSectionVariants.dark}>Dark</PageSection>\\n          <PageSection variant={PageSectionVariants.darker}>Darker</PageSection>\\n          <PageSection>Content</PageSection>\\n        </Page>\\n      </React.Fragment>\\n    );\\n  }\\n}\",\"title\":\"Grouped nav\",\"lang\":\"js\",\"isFullscreen\":true}}>\n      \n    </Example>,\n  'Expandable nav': props => \n    <Example {...pageData} {...props} thumbnail={srcImportexpandablenav} {...{\"code\":\"import React from 'react';\\nimport {\\n  Card,\\n  CardBody,\\n  Gallery,\\n  GalleryItem,\\n  Nav,\\n  NavExpandable,\\n  NavItem,\\n  NavList,\\n  Page,\\n  PageSection,\\n  PageSectionVariants,\\n  PageSidebar,\\n  SkipToContent,\\n  TextContent,\\n  Text\\n} from '@patternfly/react-core';\\nimport { DashboardBreadcrumb } from './examples/DashboardWrapper';\\nimport DashboardHeader from './examples/DashboardHeader';\\n\\nclass PageLayoutExpandableNav extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      activeGroup: 'grp-1',\\n      activeItem: 'grp-1_itm-1'\\n    };\\n\\n    this.onNavSelect = result => {\\n      this.setState({\\n        activeItem: result.itemId,\\n        activeGroup: result.groupId\\n      });\\n    };\\n  }\\n\\n  render() {\\n    const { activeItem, activeGroup } = this.state;\\n\\n    const PageNav = (\\n      <Nav onSelect={this.onNavSelect} aria-label=\\\"Nav\\\">\\n        <NavList>\\n          <NavExpandable title=\\\"System Panel\\\" groupId=\\\"grp-1\\\" isActive={activeGroup === 'grp-1'} isExpanded>\\n            <NavItem groupId=\\\"grp-1\\\" itemId=\\\"grp-1_itm-1\\\" isActive={activeItem === 'grp-1_itm-1'} to=\\\"#\\\">\\n              Overview\\n            </NavItem>\\n            <NavItem groupId=\\\"grp-1\\\" itemId=\\\"grp-1_itm-2\\\" isActive={activeItem === 'grp-1_itm-2'} to=\\\"#\\\">\\n              Resource usage\\n            </NavItem>\\n            <NavItem groupId=\\\"grp-1\\\" itemId=\\\"grp-1_itm-3\\\" isActive={activeItem === 'grp-1_itm-3'} to=\\\"#\\\">\\n              Hypervisors\\n            </NavItem>\\n            <NavItem groupId=\\\"grp-1\\\" itemId=\\\"grp-1_itm-4\\\" isActive={activeItem === 'grp-1_itm-4'} to=\\\"#\\\">\\n              Instances\\n            </NavItem>\\n            <NavItem groupId=\\\"grp-1\\\" itemId=\\\"grp-1_itm-5\\\" isActive={activeItem === 'grp-1_itm-5'} to=\\\"#\\\">\\n              Volumes\\n            </NavItem>\\n            <NavItem groupId=\\\"grp-1\\\" itemId=\\\"grp-1_itm-6\\\" isActive={activeItem === 'grp-1_itm-6'} to=\\\"#\\\">\\n              Network\\n            </NavItem>\\n          </NavExpandable>\\n          <NavExpandable title=\\\"Policy\\\" groupId=\\\"grp-2\\\" isActive={activeGroup === 'grp-2'} to=\\\"#\\\">\\n            <NavItem groupId=\\\"grp-2\\\" itemId=\\\"grp-2_itm-1\\\" isActive={activeItem === 'grp-2_itm-1'} to=\\\"#\\\">\\n              Subnav link 1\\n            </NavItem>\\n            <NavItem groupId=\\\"grp-2\\\" itemId=\\\"grp-2_itm-2\\\" isActive={activeItem === 'grp-2_itm-2'} to=\\\"#\\\">\\n              Subnav link 2\\n            </NavItem>\\n          </NavExpandable>\\n          <NavExpandable title=\\\"Authentication\\\" groupId=\\\"grp-3\\\" isActive={activeGroup === 'grp-3'}>\\n            <NavItem groupId=\\\"grp-3\\\" itemId=\\\"grp-3_itm-1\\\" isActive={activeItem === 'grp-3_itm-1'} to=\\\"#\\\">\\n              Subnav link 1\\n            </NavItem>\\n            <NavItem groupId=\\\"grp-3\\\" itemId=\\\"grp-3_itm-2\\\" isActive={activeItem === 'grp-3_itm-2'} to=\\\"#\\\">\\n              Subnav link 2\\n            </NavItem>\\n          </NavExpandable>\\n        </NavList>\\n      </Nav>\\n    );\\n\\n    const Sidebar = <PageSidebar nav={PageNav} />;\\n    const pageId = 'main-content-page-layout-expandable-nav';\\n    const PageSkipToContent = <SkipToContent href={`#${pageId}`}>Skip to content</SkipToContent>;\\n\\n    return (\\n      <React.Fragment>\\n        <Page\\n          header={<DashboardHeader />}\\n          sidebar={Sidebar}\\n          isManagedSidebar\\n          skipToContent={PageSkipToContent}\\n          breadcrumb={DashboardBreadcrumb}\\n          mainContainerId={pageId}\\n        >\\n          <PageSection variant={PageSectionVariants.light}>\\n            <TextContent>\\n              <Text component=\\\"h1\\\">Main title</Text>\\n              <Text component=\\\"p\\\">\\n                Body text should be Overpass Regular at 16px. It should have leading of 24px because <br />\\n                of its relative line height of 1.5.\\n              </Text>\\n            </TextContent>\\n          </PageSection>\\n          <PageSection>\\n            <Gallery hasGutter>\\n              {Array.apply(0, Array(10)).map((x, i) => (\\n                <GalleryItem key={i}>\\n                  <Card>\\n                    <CardBody>This is a card</CardBody>\\n                  </Card>\\n                </GalleryItem>\\n              ))}\\n            </Gallery>\\n          </PageSection>\\n        </Page>\\n      </React.Fragment>\\n    );\\n  }\\n}\",\"title\":\"Expandable nav\",\"lang\":\"js\",\"isFullscreen\":true}}>\n      \n    </Example>,\n  'Horizontal nav': props => \n    <Example {...pageData} {...props} thumbnail={srcImporthorizontalnav} {...{\"code\":\"import React from 'react';\\nimport {\\n  Avatar,\\n  Brand,\\n  Button,\\n  ButtonVariant,\\n  Card,\\n  CardBody,\\n  Dropdown,\\n  DropdownGroup,\\n  DropdownToggle,\\n  DropdownItem,\\n  Gallery,\\n  GalleryItem,\\n  KebabToggle,\\n  Nav,\\n  NavItem,\\n  NavList,\\n  Page,\\n  PageHeader,\\n  PageSection,\\n  PageSectionVariants,\\n  SkipToContent,\\n  TextContent,\\n  Text,\\n  PageHeaderTools,\\n  PageHeaderToolsGroup,\\n  PageHeaderToolsItem\\n} from '@patternfly/react-core';\\nimport { DashboardBreadcrumb } from './examples/DashboardWrapper';\\nimport CogIcon from '@patternfly/react-icons/dist/esm/icons/cog-icon';\\nimport HelpIcon from '@patternfly/react-icons/dist/esm/icons/help-icon';\\nimport QuestionCircleIcon from '@patternfly/react-icons/dist/esm/icons/question-circle-icon';\\nimport imgBrand from '@patternfly/react-core/src/components/Brand/examples/pfLogo.svg';\\nimport imgAvatar from '@patternfly/react-core/src/components/Avatar/examples/avatarImg.svg';\\n\\nclass PageLayoutHorizontalNav extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      isDropdownOpen: false,\\n      isKebabDropdownOpen: false,\\n      activeItem: 0\\n    };\\n\\n    this.onDropdownToggle = isDropdownOpen => {\\n      this.setState({\\n        isDropdownOpen\\n      });\\n    };\\n\\n    this.onDropdownSelect = event => {\\n      this.setState({\\n        isDropdownOpen: !this.state.isDropdownOpen\\n      });\\n    };\\n\\n    this.onKebabDropdownToggle = isKebabDropdownOpen => {\\n      this.setState({\\n        isKebabDropdownOpen\\n      });\\n    };\\n\\n    this.onKebabDropdownSelect = event => {\\n      this.setState({\\n        isKebabDropdownOpen: !this.state.isKebabDropdownOpen\\n      });\\n    };\\n\\n    this.onNavSelect = result => {\\n      this.setState({\\n        activeItem: result.itemId\\n      });\\n    };\\n  }\\n\\n  render() {\\n    const { isDropdownOpen, isKebabDropdownOpen, activeItem } = this.state;\\n\\n    const PageNav = (\\n      <Nav onSelect={this.onNavSelect} aria-label=\\\"Nav\\\" variant=\\\"horizontal\\\">\\n        <NavList>\\n          <NavItem itemId={0} isActive={activeItem === 0} to=\\\"#\\\">\\n            System Panel\\n          </NavItem>\\n          <NavItem itemId={1} isActive={activeItem === 1} to=\\\"#\\\">\\n            Policy\\n          </NavItem>\\n          <NavItem itemId={2} isActive={activeItem === 2} to=\\\"#\\\">\\n            Authentication\\n          </NavItem>\\n          <NavItem itemId={3} isActive={activeItem === 3} to=\\\"#\\\">\\n            Network Services\\n          </NavItem>\\n          <NavItem itemId={4} isActive={activeItem === 4} to=\\\"#\\\">\\n            Server\\n          </NavItem>\\n        </NavList>\\n      </Nav>\\n    );\\n    const kebabDropdownItems = [\\n      <DropdownItem>\\n        <CogIcon /> Settings\\n      </DropdownItem>,\\n      <DropdownItem>\\n        <HelpIcon /> Help\\n      </DropdownItem>\\n    ];\\n    const userDropdownItems = [\\n      <DropdownGroup key=\\\"group 2\\\">\\n        <DropdownItem key=\\\"group 2 profile\\\">My profile</DropdownItem>\\n        <DropdownItem key=\\\"group 2 user\\\" component=\\\"button\\\">\\n          User management\\n        </DropdownItem>\\n        <DropdownItem key=\\\"group 2 logout\\\">Logout</DropdownItem>\\n      </DropdownGroup>\\n    ];\\n    const headerTools = (\\n      <PageHeaderTools>\\n        <PageHeaderToolsGroup\\n          visibility={{\\n            default: 'hidden',\\n            lg: 'visible'\\n          }} /** the settings and help icon buttons are only visible on desktop sizes and replaced by a kebab dropdown for other sizes */\\n        >\\n          <PageHeaderToolsItem>\\n            <Button aria-label=\\\"Settings actions\\\" variant={ButtonVariant.plain}>\\n              <CogIcon />\\n            </Button>\\n          </PageHeaderToolsItem>\\n          <PageHeaderToolsItem>\\n            <Button aria-label=\\\"Help actions\\\" variant={ButtonVariant.plain}>\\n              <QuestionCircleIcon />\\n            </Button>\\n          </PageHeaderToolsItem>\\n        </PageHeaderToolsGroup>\\n        <PageHeaderToolsGroup>\\n          <PageHeaderToolsItem\\n            visibility={{\\n              lg: 'hidden'\\n            }} /** this kebab dropdown replaces the icon buttons and is hidden for desktop sizes */\\n          >\\n            <Dropdown\\n              isPlain\\n              position=\\\"right\\\"\\n              onSelect={this.onKebabDropdownSelect}\\n              toggle={<KebabToggle onToggle={this.onKebabDropdownToggle} />}\\n              isOpen={isKebabDropdownOpen}\\n              dropdownItems={kebabDropdownItems}\\n            />\\n          </PageHeaderToolsItem>\\n          <PageHeaderToolsItem\\n            visibility={{ default: 'hidden', md: 'visible' }} /** this user dropdown is hidden on mobile sizes */\\n          >\\n            <Dropdown\\n              isPlain\\n              position=\\\"right\\\"\\n              onSelect={this.onDropdownSelect}\\n              isOpen={isDropdownOpen}\\n              toggle={<DropdownToggle onToggle={this.onDropdownToggle}>John Smith</DropdownToggle>}\\n              dropdownItems={userDropdownItems}\\n            />\\n          </PageHeaderToolsItem>\\n        </PageHeaderToolsGroup>\\n        <Avatar src={imgAvatar} alt=\\\"Avatar image\\\" />\\n      </PageHeaderTools>\\n    );\\n\\n    const Header = (\\n      <PageHeader logo={<Brand src={imgBrand} alt=\\\"Patternfly Logo\\\" />} headerTools={headerTools} topNav={PageNav} />\\n    );\\n\\n    const pageId = 'main-content-page-layout-horizontal-nav';\\n    const PageSkipToContent = <SkipToContent href={`#${pageId}`}>Skip to content</SkipToContent>;\\n\\n    return (\\n      <React.Fragment>\\n        <Page\\n          header={Header}\\n          skipToContent={PageSkipToContent}\\n          breadcrumb={DashboardBreadcrumb}\\n          mainContainerId={pageId}\\n        >\\n          <PageSection variant={PageSectionVariants.light}>\\n            <TextContent>\\n              <Text component=\\\"h1\\\">Main title</Text>\\n              <Text component=\\\"p\\\">\\n                Body text should be Overpass Regular at 16px. It should have leading of 24px because <br />\\n                of its relative line height of 1.5.\\n              </Text>\\n            </TextContent>\\n          </PageSection>\\n          <PageSection>\\n            <Gallery hasGutter>\\n              {Array.apply(0, Array(10)).map((x, i) => (\\n                <GalleryItem key={i}>\\n                  <Card>\\n                    <CardBody>This is a card</CardBody>\\n                  </Card>\\n                </GalleryItem>\\n              ))}\\n            </Gallery>\\n          </PageSection>\\n        </Page>\\n      </React.Fragment>\\n    );\\n  }\\n}\",\"title\":\"Horizontal nav\",\"lang\":\"js\",\"isFullscreen\":true}}>\n      \n    </Example>,\n  'Horizontal subnav': props => \n    <Example {...pageData} {...props} thumbnail={srcImporthorizontalsubnav} {...{\"code\":\"import React from 'react';\\nimport {\\n  Card,\\n  CardBody,\\n  Gallery,\\n  GalleryItem,\\n  Nav,\\n  NavItem,\\n  NavList,\\n  Page,\\n  PageSection,\\n  PageSectionVariants,\\n  PageSidebar,\\n  SkipToContent,\\n  TextContent,\\n  Text\\n} from '@patternfly/react-core';\\nimport { DashboardBreadcrumb } from './examples/DashboardWrapper';\\nimport DashboardHeader from './examples/DashboardHeader';\\n\\nclass VerticalNavWithSubnav extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      activeItem: 0,\\n      activeSubNavItem: 7\\n    };\\n\\n    this.onNavSelect = result => {\\n      this.setState({\\n        activeItem: result.itemId\\n      });\\n    };\\n\\n    this.onSubNavSelect = result => {\\n      this.setState({\\n        activeSubNavItem: result.itemId\\n      });\\n    };\\n  }\\n\\n  render() {\\n    const { activeItem, activeSubNavItem } = this.state;\\n\\n    const PageNav = (\\n      <Nav onSelect={this.onNavSelect} aria-label=\\\"Nav\\\">\\n        <NavList>\\n          <NavItem itemId={0} isActive={activeItem === 0} to=\\\"#\\\">\\n            System Panel\\n          </NavItem>\\n          <NavItem itemId={1} isActive={activeItem === 1} to=\\\"#\\\">\\n            Policy\\n          </NavItem>\\n          <NavItem itemId={2} isActive={activeItem === 2} to=\\\"#\\\">\\n            Authentication\\n          </NavItem>\\n          <NavItem itemId={3} isActive={activeItem === 3} to=\\\"#\\\">\\n            Network Services\\n          </NavItem>\\n          <NavItem itemId={4} isActive={activeItem === 4} to=\\\"#\\\">\\n            Server\\n          </NavItem>\\n        </NavList>\\n      </Nav>\\n    );\\n\\n    const Sidebar = <PageSidebar nav={PageNav} />;\\n    const pageId = 'main-content-page-layout-default-nav';\\n    const PageSkipToContent = <SkipToContent href={`#${pageId}`}>Skip to content</SkipToContent>;\\n\\n    const SubNav = (\\n      <Nav onSelect={this.onSubNavSelect} aria-label=\\\"Nav\\\" variant=\\\"horizontal-subnav\\\">\\n        <NavList>\\n          <NavItem itemId={7} isActive={activeSubNavItem === 7} to=\\\"#\\\">\\n            Horizontal subnav item 1\\n          </NavItem>\\n          <NavItem itemId={8} isActive={activeSubNavItem === 8} to=\\\"#\\\">\\n            Horizontal subnav item 2\\n          </NavItem>\\n          <NavItem itemId={9} isActive={activeSubNavItem === 9} to=\\\"#\\\">\\n            Horizontal subnav item 3\\n          </NavItem>\\n          <NavItem itemId={10} isActive={activeSubNavItem === 10} to=\\\"#\\\">\\n            Horizontal subnav item 4\\n          </NavItem>\\n          <NavItem itemId={11} isActive={activeSubNavItem === 11} to=\\\"#\\\">\\n            Horizontal subnav item 5\\n          </NavItem>\\n          <NavItem itemId={12} isActive={activeSubNavItem === 12} to=\\\"#\\\">\\n            Horizontal subnav item 6\\n          </NavItem>\\n          <NavItem itemId={13} isActive={activeSubNavItem === 13} to=\\\"#\\\">\\n            Horizontal subnav item 7\\n          </NavItem>\\n        </NavList>\\n      </Nav>\\n    );\\n\\n    return (\\n      <React.Fragment>\\n        <Page\\n          header={<DashboardHeader />}\\n          sidebar={Sidebar}\\n          isManagedSidebar\\n          skipToContent={PageSkipToContent}\\n          mainContainerId={pageId}\\n        >\\n          <PageSection type={PageSectionTypes.subNav} isWidthLimited>\\n            {SubNav}\\n          </PageSection>\\n          <PageSection type={PageSectionTypes.breadcrumb} isWidthLimited>\\n            {DashboardBreadcrumb}\\n          </PageSection>\\n          <PageSection variant={PageSectionVariants.light}>\\n            <TextContent>\\n              <Text component=\\\"h1\\\">Main title</Text>\\n              <Text component=\\\"p\\\">\\n                Body text should be Overpass Regular at 16px. It should have leading of 24px because <br />\\n                of it’s relative line height of 1.5.\\n              </Text>\\n            </TextContent>\\n          </PageSection>\\n          <PageSection>\\n            <Gallery hasGutter>\\n              {Array.apply(0, Array(10)).map((x, i) => (\\n                <GalleryItem key={i}>\\n                  <Card>\\n                    <CardBody>This is a card</CardBody>\\n                  </Card>\\n                </GalleryItem>\\n              ))}\\n            </Gallery>\\n          </PageSection>\\n        </Page>\\n      </React.Fragment>\\n    );\\n  }\\n}\",\"title\":\"Horizontal subnav\",\"lang\":\"js\",\"isFullscreen\":true}}>\n      \n    </Example>,\n  'Horizontal nav with horizontal subnav': props => \n    <Example {...pageData} {...props} thumbnail={srcImporthorizontalnavwithhorizontalsubnav} {...{\"code\":\"import React from 'react';\\nimport {\\n  Avatar,\\n  Brand,\\n  Button,\\n  ButtonVariant,\\n  Card,\\n  CardBody,\\n  Dropdown,\\n  DropdownGroup,\\n  DropdownToggle,\\n  DropdownItem,\\n  Gallery,\\n  GalleryItem,\\n  KebabToggle,\\n  Nav,\\n  NavItem,\\n  NavList,\\n  Page,\\n  PageHeader,\\n  PageSection,\\n  PageSectionVariants,\\n  PageSectionTypes,\\n  SkipToContent,\\n  TextContent,\\n  Text,\\n  PageHeaderTools,\\n  PageHeaderToolsGroup,\\n  PageHeaderToolsItem\\n} from '@patternfly/react-core';\\nimport { DashboardBreadcrumb } from './examples/DashboardWrapper';\\nimport CogIcon from '@patternfly/react-icons/dist/esm/icons/cog-icon';\\nimport HelpIcon from '@patternfly/react-icons/dist/esm/icons/help-icon';\\nimport QuestionCircleIcon from '@patternfly/react-icons/dist/esm/icons/question-circle-icon';\\nimport imgColorBrand from '@patternfly/react-core/src/demos/examples/pfColorLogo.svg';\\nimport imgAvatar from '@patternfly/react-core/src/components/Avatar/examples/avatarImg.svg';\\n\\nclass HorizontalNavWithSubnav extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      isDropdownOpen: false,\\n      isKebabDropdownOpen: false,\\n      activeItem: 0,\\n      activeSubNavItem: 7\\n    };\\n\\n    this.onDropdownToggle = isDropdownOpen => {\\n      this.setState({\\n        isDropdownOpen\\n      });\\n    };\\n\\n    this.onDropdownSelect = event => {\\n      this.setState({\\n        isDropdownOpen: !this.state.isDropdownOpen\\n      });\\n    };\\n\\n    this.onKebabDropdownToggle = isKebabDropdownOpen => {\\n      this.setState({\\n        isKebabDropdownOpen\\n      });\\n    };\\n\\n    this.onKebabDropdownSelect = event => {\\n      this.setState({\\n        isKebabDropdownOpen: !this.state.isKebabDropdownOpen\\n      });\\n    };\\n\\n    this.onNavSelect = result => {\\n      this.setState({\\n        activeItem: result.itemId\\n      });\\n    };\\n\\n    this.onSubNavSelect = result => {\\n      this.setState({\\n        activeSubNavItem: result.itemId\\n      });\\n    };\\n  }\\n\\n  render() {\\n    const { isDropdownOpen, isKebabDropdownOpen, activeItem, activeSubNavItem } = this.state;\\n\\n    const PageNav = (\\n      <Nav onSelect={this.onNavSelect} aria-label=\\\"Nav\\\" variant=\\\"horizontal\\\">\\n        <NavList>\\n          <NavItem itemId={0} isActive={activeItem === 0} to=\\\"#\\\">\\n            System Panel\\n          </NavItem>\\n          <NavItem itemId={1} isActive={activeItem === 1} to=\\\"#\\\">\\n            Policy\\n          </NavItem>\\n          <NavItem itemId={2} isActive={activeItem === 2} to=\\\"#\\\">\\n            Authentication\\n          </NavItem>\\n          <NavItem itemId={3} isActive={activeItem === 3} to=\\\"#\\\">\\n            Network Services\\n          </NavItem>\\n          <NavItem itemId={4} isActive={activeItem === 4} to=\\\"#\\\">\\n            Server\\n          </NavItem>\\n          <NavItem itemId={5} isActive={activeItem === 5} to=\\\"#\\\">\\n            Other horizontal nav item 1\\n          </NavItem>\\n          <NavItem itemId={6} isActive={activeItem === 6} to=\\\"#\\\">\\n            Other horizontal nav item 2\\n          </NavItem>\\n        </NavList>\\n      </Nav>\\n    );\\n    const kebabDropdownItems = [\\n      <DropdownItem>\\n        <CogIcon /> Settings\\n      </DropdownItem>,\\n      <DropdownItem>\\n        <HelpIcon /> Help\\n      </DropdownItem>\\n    ];\\n    const userDropdownItems = [\\n      <DropdownGroup key=\\\"group 2\\\">\\n        <DropdownItem key=\\\"group 2 profile\\\">My profile</DropdownItem>\\n        <DropdownItem key=\\\"group 2 user\\\" component=\\\"button\\\">\\n          User management\\n        </DropdownItem>\\n        <DropdownItem key=\\\"group 2 logout\\\">Logout</DropdownItem>\\n      </DropdownGroup>\\n    ];\\n    const headerTools = (\\n      <PageHeaderTools>\\n        <PageHeaderToolsGroup\\n          visibility={{\\n            default: 'hidden',\\n            lg: 'visible'\\n          }} /** the settings and help icon buttons are only visible on desktop sizes and replaced by a kebab dropdown for other sizes */\\n        >\\n          <PageHeaderToolsItem>\\n            <Button aria-label=\\\"Settings actions\\\" variant={ButtonVariant.plain}>\\n              <CogIcon />\\n            </Button>\\n          </PageHeaderToolsItem>\\n          <PageHeaderToolsItem>\\n            <Button aria-label=\\\"Help actions\\\" variant={ButtonVariant.plain}>\\n              <QuestionCircleIcon />\\n            </Button>\\n          </PageHeaderToolsItem>\\n        </PageHeaderToolsGroup>\\n        <PageHeaderToolsGroup>\\n          <PageHeaderToolsItem\\n            visibility={{\\n              lg: 'hidden'\\n            }} /** this kebab dropdown replaces the icon buttons and is hidden for desktop sizes */\\n          >\\n            <Dropdown\\n              isPlain\\n              position=\\\"right\\\"\\n              onSelect={this.onKebabDropdownSelect}\\n              toggle={<KebabToggle onToggle={this.onKebabDropdownToggle} />}\\n              isOpen={isKebabDropdownOpen}\\n              dropdownItems={kebabDropdownItems}\\n            />\\n          </PageHeaderToolsItem>\\n          <PageHeaderToolsItem\\n            visibility={{ default: 'hidden', md: 'visible' }} /** this user dropdown is hidden on mobile sizes */\\n          >\\n            <Dropdown\\n              isPlain\\n              position=\\\"right\\\"\\n              onSelect={this.onDropdownSelect}\\n              isOpen={isDropdownOpen}\\n              toggle={<DropdownToggle onToggle={this.onDropdownToggle}>John Smith</DropdownToggle>}\\n              dropdownItems={userDropdownItems}\\n            />\\n          </PageHeaderToolsItem>\\n        </PageHeaderToolsGroup>\\n        <Avatar src={imgAvatar} alt=\\\"Avatar image\\\" />\\n      </PageHeaderTools>\\n    );\\n\\n    const Header = (\\n      <PageHeader\\n        logo={<Brand src={imgColorBrand} alt=\\\"Patternfly Logo\\\" />}\\n        headerTools={headerTools}\\n        topNav={PageNav}\\n      />\\n    );\\n\\n    const pageId = 'main-content-page-layout-horizontal-nav';\\n    const PageSkipToContent = <SkipToContent href={`#${pageId}`}>Skip to content</SkipToContent>;\\n\\n    const SubNav = (\\n      <Nav onSelect={this.onSubNavSelect} aria-label=\\\"Nav\\\" variant=\\\"horizontal-subnav\\\">\\n        <NavList>\\n          <NavItem itemId={7} isActive={activeSubNavItem === 7} to=\\\"#\\\">\\n            Horizontal subnav item 1\\n          </NavItem>\\n          <NavItem itemId={8} isActive={activeSubNavItem === 8} to=\\\"#\\\">\\n            Horizontal subnav item 2\\n          </NavItem>\\n          <NavItem itemId={9} isActive={activeSubNavItem === 9} to=\\\"#\\\">\\n            Horizontal subnav item 3\\n          </NavItem>\\n          <NavItem itemId={10} isActive={activeSubNavItem === 10} to=\\\"#\\\">\\n            Horizontal subnav item 4\\n          </NavItem>\\n          <NavItem itemId={11} isActive={activeSubNavItem === 11} to=\\\"#\\\">\\n            Horizontal subnav item 5\\n          </NavItem>\\n          <NavItem itemId={12} isActive={activeSubNavItem === 12} to=\\\"#\\\">\\n            Horizontal subnav item 6\\n          </NavItem>\\n          <NavItem itemId={13} isActive={activeSubNavItem === 13} to=\\\"#\\\">\\n            Horizontal subnav item 7\\n          </NavItem>\\n        </NavList>\\n      </Nav>\\n    );\\n\\n    return (\\n      <React.Fragment>\\n        <Page header={Header} skipToContent={PageSkipToContent} mainContainerId={pageId}>\\n          <PageSection type={PageSectionTypes.subNav} isWidthLimited>\\n            {SubNav}\\n          </PageSection>\\n          <PageSection type={PageSectionTypes.breadcrumb} isWidthLimited>\\n            {DashboardBreadcrumb}\\n          </PageSection>\\n          <PageSection variant={PageSectionVariants.light}>\\n            <TextContent>\\n              <Text component=\\\"h1\\\">Main title</Text>\\n              <Text component=\\\"p\\\">\\n                Body text should be Overpass Regular at 16px. It should have leading of 24px because <br />\\n                of it’s relative line height of 1.5.\\n              </Text>\\n            </TextContent>\\n          </PageSection>\\n          <PageSection>\\n            <Gallery hasGutter>\\n              {Array.apply(0, Array(10)).map((x, i) => (\\n                <GalleryItem key={i}>\\n                  <Card>\\n                    <CardBody>This is a card</CardBody>\\n                  </Card>\\n                </GalleryItem>\\n              ))}\\n            </Gallery>\\n          </PageSection>\\n        </Page>\\n      </React.Fragment>\\n    );\\n  }\\n}\",\"title\":\"Horizontal nav with horizontal subnav\",\"lang\":\"js\",\"isFullscreen\":true}}>\n      \n    </Example>,\n  'Legacy tertiary nav': props => \n    <Example {...pageData} {...props} thumbnail={srcImportlegacytertiarynav} {...{\"code\":\"import React from 'react';\\nimport {\\n  Card,\\n  CardBody,\\n  Gallery,\\n  GalleryItem,\\n  Nav,\\n  NavItem,\\n  NavList,\\n  Page,\\n  PageSection,\\n  PageSectionVariants,\\n  PageSidebar,\\n  SkipToContent,\\n  TextContent,\\n  Text\\n} from '@patternfly/react-core';\\nimport { DashboardBreadcrumb } from './examples/DashboardWrapper';\\nimport DashboardHeader from './examples/DashboardHeader';\\n\\nclass PageLayoutTertiaryNav extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      activeItem: 0\\n    };\\n\\n    this.onNavSelect = result => {\\n      this.setState({\\n        activeItem: result.itemId\\n      });\\n    };\\n  }\\n\\n  render() {\\n    const { activeItem } = this.state;\\n\\n    const PageNav = (\\n      <Nav variant=\\\"tertiary\\\" onSelect={this.onNavSelect} aria-label=\\\"Nav\\\">\\n        <NavList>\\n          <NavItem itemId={0} isActive={activeItem === 0} to=\\\"#\\\">\\n            System Panel\\n          </NavItem>\\n          <NavItem itemId={1} isActive={activeItem === 1} to=\\\"#\\\">\\n            Policy\\n          </NavItem>\\n          <NavItem itemId={2} isActive={activeItem === 2} to=\\\"#\\\">\\n            Authentication\\n          </NavItem>\\n          <NavItem itemId={3} isActive={activeItem === 3} to=\\\"#\\\">\\n            Network Services\\n          </NavItem>\\n          <NavItem itemId={4} isActive={activeItem === 4} to=\\\"#\\\">\\n            Server\\n          </NavItem>\\n        </NavList>\\n      </Nav>\\n    );\\n\\n    const pageId = 'main-content-page-layout-tertiary-nav';\\n    const PageSkipToContent = <SkipToContent href={`#${pageId}`}>Skip to content</SkipToContent>;\\n\\n    return (\\n      <React.Fragment>\\n        <Page\\n          header={<DashboardHeader />}\\n          breadcrumb={DashboardBreadcrumb}\\n          tertiaryNav={PageNav}\\n          isManagedSidebar\\n          isTertiaryNavWidthLimited\\n          skipToContent={PageSkipToContent}\\n          mainContainerId={pageId}\\n        >\\n          <PageSection variant={PageSectionVariants.light}>\\n            <TextContent>\\n              <Text component=\\\"h1\\\">Main title</Text>\\n              <Text component=\\\"p\\\">\\n                Body text should be Overpass Regular at 16px. It should have leading of 24px because <br />\\n                of its relative line height of 1.5.\\n              </Text>\\n            </TextContent>\\n          </PageSection>\\n          <PageSection>\\n            <Gallery hasGutter>\\n              {Array.apply(0, Array(10)).map((x, i) => (\\n                <GalleryItem key={i}>\\n                  <Card>\\n                    <CardBody>This is a card</CardBody>\\n                  </Card>\\n                </GalleryItem>\\n              ))}\\n            </Gallery>\\n          </PageSection>\\n        </Page>\\n      </React.Fragment>\\n    );\\n  }\\n}\",\"title\":\"Legacy tertiary nav\",\"lang\":\"js\",\"isFullscreen\":true}}>\n      \n    </Example>,\n  'Legacy/Light Nav': props => \n    <Example {...pageData} {...props} thumbnail={srcImportlegacylightnav} {...{\"code\":\"import React from 'react';\\nimport {\\n  Card,\\n  CardBody,\\n  Gallery,\\n  GalleryItem,\\n  Nav,\\n  NavItem,\\n  NavList,\\n  Page,\\n  PageSection,\\n  PageSectionVariants,\\n  PageSidebar,\\n  SkipToContent,\\n  TextContent,\\n  Text\\n} from '@patternfly/react-core';\\nimport DashboardHeader from './examples/DashboardHeader';\\n\\nclass PageLayoutLightNav extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      activeItem: 0\\n    };\\n\\n    this.onNavSelect = result => {\\n      this.setState({\\n        activeItem: result.itemId\\n      });\\n    };\\n  }\\n\\n  render() {\\n    const { activeItem } = this.state;\\n\\n    const PageNav = (\\n      <Nav onSelect={this.onNavSelect} aria-label=\\\"Nav\\\" theme=\\\"light\\\">\\n        <NavList>\\n          <NavItem itemId={0} isActive={activeItem === 0} to=\\\"#\\\">\\n            System Panel\\n          </NavItem>\\n          <NavItem itemId={1} isActive={activeItem === 1} to=\\\"#\\\">\\n            Policy\\n          </NavItem>\\n          <NavItem itemId={2} isActive={activeItem === 2} to=\\\"#\\\">\\n            Authentication\\n          </NavItem>\\n          <NavItem itemId={3} isActive={activeItem === 3} to=\\\"#\\\">\\n            Network Services\\n          </NavItem>\\n          <NavItem itemId={4} isActive={activeItem === 4} to=\\\"#\\\">\\n            Server\\n          </NavItem>\\n        </NavList>\\n      </Nav>\\n    );\\n\\n    const Sidebar = <PageSidebar nav={PageNav} theme=\\\"light\\\" />;\\n    const pageId = 'main-content-page-layout-simple-nav';\\n    const PageSkipToContent = <SkipToContent href={`#${pageId}`}>Skip to Content</SkipToContent>;\\n\\n    return (\\n      <React.Fragment>\\n        <Page\\n          header={<DashboardHeader />}\\n          sidebar={Sidebar}\\n          isManagedSidebar\\n          skipToContent={PageSkipToContent}\\n          mainContainerId={pageId}\\n        >\\n          <PageSection variant={PageSectionVariants.light}>\\n            <TextContent>\\n              <Text component=\\\"h1\\\">Main title</Text>\\n              <Text component=\\\"p\\\">\\n                Body text should be Overpass Regular at 16px. It should have leading of 24px because <br />\\n                of its relative line height of 1.5.\\n              </Text>\\n            </TextContent>\\n          </PageSection>\\n          <PageSection>\\n            <Gallery hasGutter>\\n              {Array.apply(0, Array(10)).map((x, i) => (\\n                <GalleryItem key={i}>\\n                  <Card>\\n                    <CardBody>This is a card</CardBody>\\n                  </Card>\\n                </GalleryItem>\\n              ))}\\n            </Gallery>\\n          </PageSection>\\n        </Page>\\n      </React.Fragment>\\n    );\\n  }\\n}\",\"title\":\"Legacy/Light Nav\",\"lang\":\"js\",\"isFullscreen\":true}}>\n      \n    </Example>,\n  'Manual nav': props => \n    <Example {...pageData} {...props} thumbnail={srcImportmanualnav} {...{\"code\":\"import React from 'react';\\nimport {\\n  Avatar,\\n  Brand,\\n  Button,\\n  ButtonVariant,\\n  Card,\\n  CardBody,\\n  Dropdown,\\n  DropdownGroup,\\n  DropdownToggle,\\n  DropdownItem,\\n  Gallery,\\n  GalleryItem,\\n  KebabToggle,\\n  Nav,\\n  NavItem,\\n  NavList,\\n  Page,\\n  PageHeader,\\n  PageSection,\\n  PageSectionVariants,\\n  PageSidebar,\\n  SkipToContent,\\n  TextContent,\\n  Text,\\n  PageHeaderTools,\\n  PageHeaderToolsGroup,\\n  PageHeaderToolsItem\\n} from '@patternfly/react-core';\\nimport CogIcon from '@patternfly/react-icons/dist/esm/icons/cog-icon';\\nimport HelpIcon from '@patternfly/react-icons/dist/esm/icons/help-icon';\\nimport QuestionCircleIcon from '@patternfly/react-icons/dist/esm/icons/question-circle-icon';\\nimport imgBrand from '@patternfly/react-core/src/components/Brand/examples/pfLogo.svg';\\nimport imgAvatar from '@patternfly/react-core/src/components/Avatar/examples/avatarImg.svg';\\n\\nclass PageLayoutManualNav extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      isDropdownOpen: false,\\n      isKebabDropdownOpen: false,\\n      activeItem: 0,\\n      isMobileView: false,\\n      isNavOpenDesktop: true,\\n      isNavOpenMobile: false\\n    };\\n\\n    this.onDropdownToggle = isDropdownOpen => {\\n      this.setState({\\n        isDropdownOpen\\n      });\\n    };\\n\\n    this.onDropdownSelect = event => {\\n      this.setState({\\n        isDropdownOpen: !this.state.isDropdownOpen\\n      });\\n    };\\n\\n    this.onKebabDropdownToggle = isKebabDropdownOpen => {\\n      this.setState({\\n        isKebabDropdownOpen\\n      });\\n    };\\n\\n    this.onKebabDropdownSelect = event => {\\n      this.setState({\\n        isKebabDropdownOpen: !this.state.isKebabDropdownOpen\\n      });\\n    };\\n\\n    this.onNavSelect = result => {\\n      this.setState({\\n        activeItem: result.itemId\\n      });\\n    };\\n\\n    this.onNavToggleDesktop = () => {\\n      this.setState({\\n        isNavOpenDesktop: !this.state.isNavOpenDesktop\\n      });\\n    };\\n\\n    this.onNavToggleMobile = () => {\\n      this.setState({\\n        isNavOpenMobile: !this.state.isNavOpenMobile\\n      });\\n    };\\n\\n    this.onPageResize = ({ mobileView, windowSize }) => {\\n      this.setState({\\n        isMobileView: mobileView\\n      });\\n    };\\n  }\\n\\n  render() {\\n    const {\\n      isDropdownOpen,\\n      isKebabDropdownOpen,\\n      activeItem,\\n      isNavOpenDesktop,\\n      isNavOpenMobile,\\n      isMobileView\\n    } = this.state;\\n\\n    const PageNav = (\\n      <Nav onSelect={this.onNavSelect} aria-label=\\\"Nav\\\">\\n        <NavList>\\n          <NavItem itemId={0} isActive={activeItem === 0} to=\\\"#\\\">\\n            System Panel\\n          </NavItem>\\n          <NavItem itemId={1} isActive={activeItem === 1} to=\\\"#\\\">\\n            Policy\\n          </NavItem>\\n          <NavItem itemId={2} isActive={activeItem === 2} to=\\\"#\\\">\\n            Authentication\\n          </NavItem>\\n          <NavItem itemId={3} isActive={activeItem === 3} to=\\\"#\\\">\\n            Network Services\\n          </NavItem>\\n          <NavItem itemId={4} isActive={activeItem === 4} to=\\\"#\\\">\\n            Server\\n          </NavItem>\\n        </NavList>\\n      </Nav>\\n    );\\n    const kebabDropdownItems = [\\n      <DropdownItem>\\n        <CogIcon /> Settings\\n      </DropdownItem>,\\n      <DropdownItem>\\n        <HelpIcon /> Help\\n      </DropdownItem>\\n    ];\\n    const userDropdownItems = [\\n      <DropdownGroup key=\\\"group 2\\\">\\n        <DropdownItem key=\\\"group 2 profile\\\">My profile</DropdownItem>\\n        <DropdownItem key=\\\"group 2 user\\\" component=\\\"button\\\">\\n          User management\\n        </DropdownItem>\\n        <DropdownItem key=\\\"group 2 logout\\\">Logout</DropdownItem>\\n      </DropdownGroup>\\n    ];\\n    const headerTools = (\\n      <PageHeaderTools>\\n        <PageHeaderToolsGroup\\n          visibility={{\\n            default: 'hidden',\\n            lg: 'visible'\\n          }} /** the settings and help icon buttons are only visible on desktop sizes and replaced by a kebab dropdown for other sizes */\\n        >\\n          <PageHeaderToolsItem>\\n            <Button aria-label=\\\"Settings actions\\\" variant={ButtonVariant.plain}>\\n              <CogIcon />\\n            </Button>\\n          </PageHeaderToolsItem>\\n          <PageHeaderToolsItem>\\n            <Button aria-label=\\\"Help actions\\\" variant={ButtonVariant.plain}>\\n              <QuestionCircleIcon />\\n            </Button>\\n          </PageHeaderToolsItem>\\n        </PageHeaderToolsGroup>\\n        <PageHeaderToolsGroup>\\n          <PageHeaderToolsItem\\n            visibility={{\\n              default: 'hidden',\\n              breakpoint: 'lg'\\n            }} /** this kebab dropdown replaces the icon buttons and is hidden for desktop sizes */\\n          >\\n            <Dropdown\\n              isPlain\\n              position=\\\"right\\\"\\n              onSelect={this.onKebabDropdownSelect}\\n              toggle={<KebabToggle onToggle={this.onKebabDropdownToggle} />}\\n              isOpen={isKebabDropdownOpen}\\n              dropdownItems={kebabDropdownItems}\\n            />\\n          </PageHeaderToolsItem>\\n          <PageHeaderToolsItem\\n            visibility={{ default: 'hidden', md: 'visible' }} /** this user dropdown is hidden on mobile sizes */\\n          >\\n            <Dropdown\\n              isPlain\\n              position=\\\"right\\\"\\n              onSelect={this.onDropdownSelect}\\n              isOpen={isDropdownOpen}\\n              toggle={<DropdownToggle onToggle={this.onDropdownToggle}>John Smith</DropdownToggle>}\\n              dropdownItems={userDropdownItems}\\n            />\\n          </PageHeaderToolsItem>\\n        </PageHeaderToolsGroup>\\n        <Avatar src={imgAvatar} alt=\\\"Avatar image\\\" />\\n      </PageHeaderTools>\\n    );\\n\\n    const Header = (\\n      <PageHeader\\n        logo={<Brand src={imgBrand} alt=\\\"Patternfly Logo\\\" />}\\n        headerTools={headerTools}\\n        showNavToggle\\n        onNavToggle={isMobileView ? this.onNavToggleMobile : this.onNavToggleDesktop}\\n        isNavOpen={isMobileView ? isNavOpenMobile : isNavOpenDesktop}\\n      />\\n    );\\n    const Sidebar = <PageSidebar nav={PageNav} isNavOpen={isMobileView ? isNavOpenMobile : isNavOpenDesktop} />;\\n    const pageId = 'main-content-page-layout-manual-nav';\\n    const PageSkipToContent = <SkipToContent href={`#${pageId}`}>Skip to Content</SkipToContent>;\\n\\n    return (\\n      <React.Fragment>\\n        <Page\\n          header={Header}\\n          sidebar={Sidebar}\\n          onPageResize={this.onPageResize}\\n          skipToContent={PageSkipToContent}\\n          mainContainerId={pageId}\\n        >\\n          <PageSection variant={PageSectionVariants.light}>\\n            <TextContent>\\n              <Text component=\\\"h1\\\">Main title</Text>\\n              <Text component=\\\"p\\\">\\n                Body text should be Overpass Regular at 16px. It should have leading of 24px because <br />\\n                of its relative line height of 1.5.\\n              </Text>\\n            </TextContent>\\n          </PageSection>\\n          <PageSection>\\n            <Gallery hasGutter>\\n              {Array.apply(0, Array(10)).map((x, i) => (\\n                <GalleryItem key={i}>\\n                  <Card>\\n                    <CardBody>This is a card</CardBody>\\n                  </Card>\\n                </GalleryItem>\\n              ))}\\n            </Gallery>\\n          </PageSection>\\n        </Page>\\n      </React.Fragment>\\n    );\\n  }\\n}\",\"title\":\"Manual nav\",\"lang\":\"js\",\"isFullscreen\":true}}>\n      \n    </Example>,\n  'Flyout nav': props => \n    <Example {...pageData} {...props} thumbnail={srcImportflyoutnav} {...{\"code\":\"import React from 'react';\\nimport {\\n  Page,\\n  Nav,\\n  NavList,\\n  NavItem,\\n  PageHeader,\\n  PageHeaderTools,\\n  PageSidebar,\\n  PageSection,\\n  PageSectionVariants,\\n  Menu,\\n  MenuContent,\\n  MenuList,\\n  MenuItem\\n} from '@patternfly/react-core';\\nimport DashboardHeader from './examples/DashboardHeader';\\n\\nclass VerticalPage extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      isNavOpen: true,\\n      activeItem: 0\\n    };\\n    this.onNavSelect = result => {\\n      this.setState({\\n        activeItem: result.itemId\\n      });\\n    };\\n    this.onMenuSelect = (event, itemId) => {\\n      this.setState({\\n        activeItem: itemId\\n      });\\n    };\\n  }\\n\\n  render() {\\n    const numFlyouts = 5;\\n    const FlyoutMenu = ({ depth, children }) => (\\n      <Menu key={depth} containsFlyout isNavFlyout id={`menu-${depth}`} onSelect={this.onMenuSelect}>\\n        <MenuContent>\\n          <MenuList>\\n            <MenuItem flyoutMenu={children} itemId={`next-menu-${depth}`} to={`#menu-link-${depth}`}>\\n              Additional settings\\n            </MenuItem>\\n            {[...Array(numFlyouts - depth).keys()].map(j => (\\n              <MenuItem key={`${depth}-${j}`} itemId={`${depth}-${j}`} to={`#menu-link-${depth}-${j}`}>\\n                Settings menu {depth} item {j}\\n              </MenuItem>\\n            ))}\\n            <MenuItem flyoutMenu={children} itemId={`next-menu-2-${depth}`} to={`#second-menu-link-${depth}`}>\\n              Additional settings\\n            </MenuItem>\\n          </MenuList>\\n        </MenuContent>\\n      </Menu>\\n    );\\n    let curFlyout = <FlyoutMenu depth={1} />;\\n    for (let i = 2; i < numFlyouts - 1; i++) {\\n      curFlyout = <FlyoutMenu depth={i}>{curFlyout}</FlyoutMenu>;\\n    }\\n\\n    const { activeItem } = this.state;\\n\\n    const Sidebar = (\\n      <PageSidebar\\n        nav={\\n          <Nav onSelect={this.onNavSelect}>\\n            <NavList>\\n              <NavItem id=\\\"flyout-link1\\\" to=\\\"#flyout-link1\\\" itemId={0} isActive={activeItem === 0}>\\n                System Panel\\n              </NavItem>\\n              <NavItem flyout={curFlyout} id=\\\"flyout-link2\\\" to=\\\"#flyout-link2\\\" itemId={1} isActive={activeItem === 1}>\\n                Settings\\n              </NavItem>\\n              <NavItem id=\\\"flyout-link3\\\" to=\\\"#flyout-link3\\\" itemId={2} isActive={activeItem === 2}>\\n                Authentication\\n              </NavItem>\\n            </NavList>\\n          </Nav>\\n        }\\n      />\\n    );\\n\\n    return (\\n      <Page header={<DashboardHeader />} sidebar={Sidebar} isManagedSidebar>\\n        <PageSection variant={PageSectionVariants.darker}>Section with darker background</PageSection>\\n        <PageSection variant={PageSectionVariants.dark}>Section with dark background</PageSection>\\n        <PageSection variant={PageSectionVariants.light}>Section with light background</PageSection>\\n      </Page>\\n    );\\n  }\\n}\",\"title\":\"Flyout nav\",\"lang\":\"js\",\"isFullscreen\":true}}>\n      \n    </Example>,\n  'Drilldown nav': props => \n    <Example {...pageData} {...props} thumbnail={srcImportdrilldownnav} {...{\"code\":\"import React from 'react';\\n\\nimport {\\n  Page,\\n  PageSidebar,\\n  Nav,\\n  MenuContent,\\n  MenuItem,\\n  MenuList,\\n  DrilldownMenu,\\n  Menu,\\n  PageSection\\n} from '@patternfly/react-core';\\n\\nimport DashboardHeader from '../DashboardHeader';\\n\\ninterface MenuHeights {\\n  [menuId: string]: number;\\n}\\n\\nfunction getNavLayer(menuId: string): number {\\n  switch (menuId) {\\n    case 'rootMenu':\\n      return 1;\\n    case 'subMenu-1':\\n      return 2;\\n    case 'subMenu-2':\\n      return 3;\\n  }\\n}\\n\\nconst subMenuTwo: JSX.Element = (\\n  <DrilldownMenu id=\\\"subMenu-2\\\">\\n    <MenuItem itemId=\\\"subMenu-2-breadcrumb\\\" direction=\\\"up\\\">\\n      SubMenu 1 - Item 1\\n    </MenuItem>\\n    <MenuItem itemId=\\\"subMenu-2_item-1\\\" to=\\\"#subMenu-2_item-1\\\">\\n      SubMenu 2 - Item 1\\n    </MenuItem>\\n    <MenuItem itemId=\\\"subMenu-2_item-2\\\" to=\\\"#subMenu-2_item-2\\\">\\n      SubMenu 2 - Item 2\\n    </MenuItem>\\n    <MenuItem itemId=\\\"subMenu-2_item-3\\\" to=\\\"#subMenu-2_item-3\\\">\\n      SubMenu 2 - Item 3\\n    </MenuItem>\\n  </DrilldownMenu>\\n);\\n\\nconst subMenuOne: JSX.Element = (\\n  <DrilldownMenu id=\\\"subMenu-1\\\">\\n    <MenuItem itemId=\\\"subMenu-1-breadcrumb\\\" direction=\\\"up\\\">\\n      Item 1\\n    </MenuItem>\\n    <MenuItem itemId=\\\"subMenu-1_item-1\\\" description=\\\"SubMenu 2\\\" direction=\\\"down\\\" drilldownMenu={subMenuTwo}>\\n      SubMenu 1 - Item 1\\n    </MenuItem>\\n    <MenuItem itemId=\\\"subMenu-1_item-2\\\" to=\\\"#subMenu-1_item-2\\\">\\n      SubMenu 1 - Item 2\\n    </MenuItem>\\n    <MenuItem itemId=\\\"subMenu-1_item-3\\\" to=\\\"#subMenu-1_item-3\\\">\\n      SubMenu 1 - Item 3\\n    </MenuItem>\\n  </DrilldownMenu>\\n);\\n\\nexport const NavDrilldown: React.FunctionComponent = () => {\\n  const [menuDrilledIn, setMenuDrilledIn] = React.useState<string[]>([]);\\n  const [drilldownPath, setDrilldownPath] = React.useState<string[]>([]);\\n  const [menuHeights, setMenuHeights] = React.useState<MenuHeights>({});\\n  const [activeMenuId, setActiveMenuId] = React.useState('rootMenu');\\n  const navLayer = getNavLayer(activeMenuId);\\n\\n  const onDrillIn = (fromItemId: string, toItemId: string, itemId: string) => {\\n    setMenuDrilledIn(prevMenuDrilledIn => [...prevMenuDrilledIn, fromItemId]);\\n    setDrilldownPath(prevDrilldownPath => [...prevDrilldownPath, itemId]);\\n    setActiveMenuId(toItemId);\\n  };\\n\\n  const onDrillOut = (toItemId: string, _itemId: string) => {\\n    setMenuDrilledIn(prevMenuDrilledIn => prevMenuDrilledIn.slice(0, prevMenuDrilledIn.length - 1));\\n    setDrilldownPath(prevDrilldownPath => prevDrilldownPath.slice(0, prevDrilldownPath.length - 1));\\n    setActiveMenuId(toItemId);\\n  };\\n\\n  const onGetMenuHeight = (menuId: string, height: number) => {\\n    if (!menuHeights[menuId] && menuId !== 'rootMenu') {\\n      setMenuHeights(prevMenuHeights => ({ ...prevMenuHeights, [menuId]: height }));\\n    }\\n  };\\n\\n  const sidebar = (\\n    <PageSidebar\\n      nav={\\n        <Nav>\\n          <Menu\\n            id=\\\"rootMenu\\\"\\n            containsDrilldown\\n            drilldownItemPath={drilldownPath}\\n            drilledInMenus={menuDrilledIn}\\n            activeMenu={activeMenuId}\\n            onDrillIn={onDrillIn}\\n            onDrillOut={onDrillOut}\\n            onGetMenuHeight={onGetMenuHeight}\\n          >\\n            <MenuContent menuHeight={`${menuHeights[activeMenuId]}px`}>\\n              <MenuList>\\n                <MenuItem itemId=\\\"item-1\\\" direction=\\\"down\\\" description=\\\"SubMenu 1\\\" drilldownMenu={subMenuOne}>\\n                  Item 1\\n                </MenuItem>\\n                <MenuItem itemId=\\\"item-2\\\" to=\\\"#item-2\\\">\\n                  Item 2\\n                </MenuItem>\\n                <MenuItem itemId=\\\"item-3\\\" to=\\\"#item-3\\\">\\n                  Item 3\\n                </MenuItem>\\n              </MenuList>\\n            </MenuContent>\\n          </Menu>\\n        </Nav>\\n      }\\n    />\\n  );\\n\\n  return (\\n    <Page header={<DashboardHeader />} sidebar={sidebar}>\\n      <PageSection>\\n        <strong>Nav Layer: </strong>\\n        {navLayer}\\n      </PageSection>\\n    </Page>\\n  );\\n};\\n\",\"title\":\"Drilldown nav\",\"lang\":\"js\",\"isBeta\":true,\"isFullscreen\":true}}>\n      \n    </Example>\n};\n\nconst Component = () => (\n  <React.Fragment>\n    <AutoLinkHeader {...{\"id\":\"demos\",\"size\":\"h2\",\"className\":\"ws-title ws-h2\"}}>\n      {`Demos`}\n    </AutoLinkHeader>\n    {React.createElement(pageData.examples[\"Default nav\"])}\n    {React.createElement(pageData.examples[\"Grouped nav\"])}\n    {React.createElement(pageData.examples[\"Expandable nav\"])}\n    {React.createElement(pageData.examples[\"Horizontal nav\"])}\n    {React.createElement(pageData.examples[\"Horizontal subnav\"])}\n    {React.createElement(pageData.examples[\"Horizontal nav with horizontal subnav\"])}\n    {React.createElement(pageData.examples[\"Legacy tertiary nav\"])}\n    {React.createElement(pageData.examples[\"Legacy/Light Nav\"])}\n    {React.createElement(pageData.examples[\"Manual nav\"])}\n    {React.createElement(pageData.examples[\"Flyout nav\"])}\n    {React.createElement(pageData.examples[\"Drilldown nav\"])}\n  </React.Fragment>\n);\nComponent.displayName = 'ComponentsNavigationReactDemosDocs';\nComponent.pageData = pageData;\n\nexport default Component;\n"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,EAAyBC,OAAzB,EAAkCC,IAAI,IAAIC,mBAA1C,QAAqE,iCAArE;AACA,SAASC,mBAAT,QAAoC,uFAApC;AACA,OAAOC,eAAP,MAA4B,sFAA5B;AACA,OAAOC,OAAP,MAAoB,iDAApB;AACA,OAAOC,QAAP,MAAqB,kDAArB;AACA,OAAOC,kBAAP,MAA+B,6DAA/B;AACA,OAAOC,QAAP,MAAqB,iEAArB;AACA,OAAOC,SAAP,MAAsB,qEAAtB;AACA,OAAOC,aAAP,MAA0B,2DAA1B;AACA,OAAOC,mBAAP,MAAgC,+BAAhC;AACA,OAAOC,qBAAP,MAAkC,iCAAlC;AACA,OAAOC,sBAAP,MAAmC,kCAAnC;AACA,OAAOC,kBAAP,MAA+B,8BAA/B;AACA,OAAOC,mBAAP,MAAgC,+BAAhC;AACA,OAAOC,0CAAP,MAAuD,yDAAvD;AACA,OAAOC,sBAAP,MAAmC,kCAAnC;AACA,OAAOC,yBAAP,MAAsC,qCAAtC;AACA,OAAOC,0BAAP,MAAuC,uCAAvC;AACA,OAAOC,uBAAP,MAAoC,mCAApC;AACA,OAAOC,kBAAP,MAA+B,8BAA/B;AACA,OAAOC,oBAAP,MAAiC,gCAAjC;AACA,IAAMC,QAAQ,GAAG;EACf,MAAM,YADS;EAEf,WAAW,YAFI;EAGf,UAAU,aAHK;EAIf,QAAQ,oCAJO;EAKf,cAAc,6GALC;EAMf,sBAAsB,CACpB,aADoB,EAEpB,aAFoB,EAGpB,gBAHoB,EAIpB,gBAJoB,EAKpB,mBALoB,EAMpB,uCANoB,EAOpB,qBAPoB,EAQpB,kBARoB,EASpB,YAToB,EAUpB,YAVoB,EAWpB,eAXoB;AANP,CAAjB;AAoBAA,QAAQ,CAACC,WAAT,GAAuB;EACrBrB,mBAAmB,EAAnBA,mBADqB;EAErBC,eAAe,EAAfA,eAFqB;EAGrBC,OAAO,EAAPA,OAHqB;EAIrBC,QAAQ,EAARA,QAJqB;EAKrBC,kBAAkB,EAAlBA,kBALqB;EAMrBC,QAAQ,EAARA,QANqB;EAOrBC,SAAS,EAATA,SAPqB;EAQrBC,aAAa,EAAbA;AARqB,CAAvB;AAUAa,QAAQ,CAACE,QAAT,GAAoB;EAClB,eAAe,oBAAAC,KAAK;IAAA,oBAClB,oBAAC,OAAD,eAAaH,QAAb,EAA2BG,KAA3B;MAAkC,SAAS,EAAEf,mBAA7C;MAAuE,QAAO,+tFAA9E;MAA8yF,SAAQ,aAAtzF;MAAo0F,QAAO,IAA30F;MAAg1F,gBAAe;IAA/1F,GADkB;EAAA,CADF;EAKlB,eAAe,oBAAAe,KAAK;IAAA,oBAClB,oBAAC,OAAD,eAAaH,QAAb,EAA2BG,KAA3B;MAAkC,SAAS,EAAEX,mBAA7C;MAAuE,QAAO,ouGAA9E;MAAmzG,SAAQ,aAA3zG;MAAy0G,QAAO,IAAh1G;MAAq1G,gBAAe;IAAp2G,GADkB;EAAA,CALF;EASlB,kBAAkB,uBAAAW,KAAK;IAAA,oBACrB,oBAAC,OAAD,eAAaH,QAAb,EAA2BG,KAA3B;MAAkC,SAAS,EAAEb,sBAA7C;MAA0E,QAAO,+wIAAjF;MAAi2I,SAAQ,gBAAz2I;MAA03I,QAAO,IAAj4I;MAAs4I,gBAAe;IAAr5I,GADqB;EAAA,CATL;EAalB,kBAAkB,uBAAAa,KAAK;IAAA,oBACrB,oBAAC,OAAD,eAAaH,QAAb,EAA2BG,KAA3B;MAAkC,SAAS,EAAET,sBAA7C;MAA0E,QAAO,s8MAAjF;MAAwhN,SAAQ,gBAAhiN;MAAijN,QAAO,IAAxjN;MAA6jN,gBAAe;IAA5kN,GADqB;EAAA,CAbL;EAiBlB,qBAAqB,0BAAAS,KAAK;IAAA,oBACxB,oBAAC,OAAD,eAAaH,QAAb,EAA2BG,KAA3B;MAAkC,SAAS,EAAER,yBAA7C;MAA6E,QAAO,ysIAApF;MAA8xI,SAAQ,mBAAtyI;MAA0zI,QAAO,IAAj0I;MAAs0I,gBAAe;IAAr1I,GADwB;EAAA,CAjBR;EAqBlB,yCAAyC,2CAAAQ,KAAK;IAAA,oBAC5C,oBAAC,OAAD,eAAaH,QAAb,EAA2BG,KAA3B;MAAkC,SAAS,EAAEV,0CAA7C;MAA8F,QAAO,usQAArG;MAA6yQ,SAAQ,uCAArzQ;MAA61Q,QAAO,IAAp2Q;MAAy2Q,gBAAe;IAAx3Q,GAD4C;EAAA,CArB5B;EAyBlB,uBAAuB,2BAAAU,KAAK;IAAA,oBAC1B,oBAAC,OAAD,eAAaH,QAAb,EAA2BG,KAA3B;MAAkC,SAAS,EAAEP,0BAA7C;MAA8E,QAAO,2uFAArF;MAAi0F,SAAQ,qBAAz0F;MAA+1F,QAAO,IAAt2F;MAA22F,gBAAe;IAA13F,GAD0B;EAAA,CAzBV;EA6BlB,oBAAoB,wBAAAO,KAAK;IAAA,oBACvB,oBAAC,OAAD,eAAaH,QAAb,EAA2BG,KAA3B;MAAkC,SAAS,EAAEN,uBAA7C;MAA2E,QAAO,4oFAAlF;MAA+tF,SAAQ,kBAAvuF;MAA0vF,QAAO,IAAjwF;MAAswF,gBAAe;IAArxF,GADuB;EAAA,CA7BP;EAiClB,cAAc,mBAAAM,KAAK;IAAA,oBACjB,oBAAC,OAAD,eAAaH,QAAb,EAA2BG,KAA3B;MAAkC,SAAS,EAAEL,kBAA7C;MAAsE,QAAO,yzOAA7E;MAAu4O,SAAQ,YAA/4O;MAA45O,QAAO,IAAn6O;MAAw6O,gBAAe;IAAv7O,GADiB;EAAA,CAjCD;EAqClB,cAAc,mBAAAK,KAAK;IAAA,oBACjB,oBAAC,OAAD,eAAaH,QAAb,EAA2BG,KAA3B;MAAkC,SAAS,EAAEZ,kBAA7C;MAAsE,QAAO,+4FAA7E;MAA69F,SAAQ,YAAr+F;MAAk/F,QAAO,IAAz/F;MAA8/F,gBAAe;IAA7gG,GADiB;EAAA,CArCD;EAyClB,iBAAiB,sBAAAY,KAAK;IAAA,oBACpB,oBAAC,OAAD,eAAaH,QAAb,EAA2BG,KAA3B;MAAkC,SAAS,EAAEd,qBAA7C;MAAyE,QAAO,w9HAAhF;MAAyiI,SAAQ,eAAjjI;MAAikI,QAAO,IAAxkI;MAA6kI,UAAS,IAAtlI;MAA2lI,gBAAe;IAA1mI,GADoB;EAAA;AAzCJ,CAApB;;AA+CA,IAAMe,SAAS,GAAG,SAAZA,SAAY;EAAA,oBAChB,oBAAC,KAAD,CAAO,QAAP,qBACE,oBAAC,cAAD;IAAqB,MAAK,OAA1B;IAAkC,QAAO,IAAzC;IAA8C,aAAY;EAA1D,WADF,EAIG7B,KAAK,CAAC8B,aAAN,CAAoBL,QAAQ,CAACE,QAAT,CAAkB,aAAlB,CAApB,CAJH,EAKG3B,KAAK,CAAC8B,aAAN,CAAoBL,QAAQ,CAACE,QAAT,CAAkB,aAAlB,CAApB,CALH,EAMG3B,KAAK,CAAC8B,aAAN,CAAoBL,QAAQ,CAACE,QAAT,CAAkB,gBAAlB,CAApB,CANH,EAOG3B,KAAK,CAAC8B,aAAN,CAAoBL,QAAQ,CAACE,QAAT,CAAkB,gBAAlB,CAApB,CAPH,EAQG3B,KAAK,CAAC8B,aAAN,CAAoBL,QAAQ,CAACE,QAAT,CAAkB,mBAAlB,CAApB,CARH,EASG3B,KAAK,CAAC8B,aAAN,CAAoBL,QAAQ,CAACE,QAAT,CAAkB,uCAAlB,CAApB,CATH,EAUG3B,KAAK,CAAC8B,aAAN,CAAoBL,QAAQ,CAACE,QAAT,CAAkB,qBAAlB,CAApB,CAVH,EAWG3B,KAAK,CAAC8B,aAAN,CAAoBL,QAAQ,CAACE,QAAT,CAAkB,kBAAlB,CAApB,CAXH,EAYG3B,KAAK,CAAC8B,aAAN,CAAoBL,QAAQ,CAACE,QAAT,CAAkB,YAAlB,CAApB,CAZH,EAaG3B,KAAK,CAAC8B,aAAN,CAAoBL,QAAQ,CAACE,QAAT,CAAkB,YAAlB,CAApB,CAbH,EAcG3B,KAAK,CAAC8B,aAAN,CAAoBL,QAAQ,CAACE,QAAT,CAAkB,eAAlB,CAApB,CAdH,CADgB;AAAA,CAAlB;;AAkBAE,SAAS,CAACE,WAAV,GAAwB,oCAAxB;AACAF,SAAS,CAACJ,QAAV,GAAqBA,QAArB;AAEA,eAAeI,SAAf"},"metadata":{},"sourceType":"module"}