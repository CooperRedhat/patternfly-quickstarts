{"ast":null,"code":"function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport { AutoLinkHeader, Example, Link as PatternflyThemeLink } from 'theme-patternfly-org/components';\nimport InfoCircleIcon from '@patternfly/react-icons/dist/esm/icons/info-circle-icon';\nvar pageData = {\n  \"id\": \"Label group\",\n  \"section\": \"components\",\n  \"source\": \"react\",\n  \"slug\": \"/components/label-group/react\",\n  \"sourceLink\": \"https://github.com/patternfly/patternfly-react/blob/main/packages/docs/packages/react-core/src/components/LabelGroup/examples/LabelGroup.md\",\n  \"propComponents\": [{\n    \"name\": \"LabelGroup\",\n    \"description\": \"\",\n    \"props\": [{\n      \"name\": \"aria-label\",\n      \"type\": \"string\",\n      \"description\": \"Aria label for label group that does not have a category name\",\n      \"defaultValue\": \"'Label group category'\"\n    }, {\n      \"name\": \"categoryName\",\n      \"type\": \"string\",\n      \"description\": \"Category name text for the label group category.  If this prop is supplied the label group with have a label and category styling applied\",\n      \"defaultValue\": \"''\"\n    }, {\n      \"name\": \"children\",\n      \"type\": \"React.ReactNode\",\n      \"description\": \"Content rendered inside the label group. Should be <Label> elements.\"\n    }, {\n      \"name\": \"className\",\n      \"type\": \"string\",\n      \"description\": \"Additional classes added to the label item\"\n    }, {\n      \"name\": \"closeBtnAriaLabel\",\n      \"type\": \"string\",\n      \"description\": \"Aria label for close button\",\n      \"defaultValue\": \"'Close label group'\"\n    }, {\n      \"name\": \"collapsedText\",\n      \"type\": \"string\",\n      \"description\": \"Customizeable template string. Use variable \\\"${remaining}\\\" for the overflow label count.\",\n      \"defaultValue\": \"'${remaining} more'\"\n    }, {\n      \"name\": \"defaultIsOpen\",\n      \"type\": \"boolean\",\n      \"description\": \"Flag for having the label group default to expanded\",\n      \"defaultValue\": \"false\"\n    }, {\n      \"name\": \"editableTextAreaProps\",\n      \"type\": \"any\",\n      \"description\": \"Additional props passed to the editable textarea.\",\n      \"beta\": true\n    }, {\n      \"name\": \"expandedText\",\n      \"type\": \"string\",\n      \"description\": \"Customizable \\\"Show Less\\\" text string\",\n      \"defaultValue\": \"'Show Less'\"\n    }, {\n      \"name\": \"hasEditableTextArea\",\n      \"type\": \"boolean\",\n      \"description\": \"Flag indicating the editable label group should be appended with a textarea.\",\n      \"defaultValue\": \"false\",\n      \"beta\": true\n    }, {\n      \"name\": \"isClosable\",\n      \"type\": \"boolean\",\n      \"description\": \"Flag if label group can be closed\",\n      \"defaultValue\": \"false\"\n    }, {\n      \"name\": \"isCompact\",\n      \"type\": \"boolean\",\n      \"description\": \"Flag indicating the labels in the group are compact\",\n      \"defaultValue\": \"false\"\n    }, {\n      \"name\": \"isEditable\",\n      \"type\": \"boolean\",\n      \"description\": \"Flag indicating contained labels are editable. Allows spacing for a text input after the labels.\",\n      \"defaultValue\": \"false\",\n      \"beta\": true\n    }, {\n      \"name\": \"isVertical\",\n      \"type\": \"boolean\",\n      \"description\": \"Flag to implement a vertical layout\",\n      \"defaultValue\": \"false\"\n    }, {\n      \"name\": \"numLabels\",\n      \"type\": \"number\",\n      \"description\": \"Set number of labels to show before overflow\",\n      \"defaultValue\": \"3\"\n    }, {\n      \"name\": \"onClick\",\n      \"type\": \"(event: React.MouseEvent) => void\",\n      \"description\": \"Function that is called when clicking on the label group close button\",\n      \"defaultValue\": \"(_e: React.MouseEvent) => undefined as any\"\n    }, {\n      \"name\": \"tooltipPosition\",\n      \"type\": \"| TooltipPosition\\n| 'auto'\\n| 'top'\\n| 'bottom'\\n| 'left'\\n| 'right'\\n| 'top-start'\\n| 'top-end'\\n| 'bottom-start'\\n| 'bottom-end'\\n| 'left-start'\\n| 'left-end'\\n| 'right-start'\\n| 'right-end'\",\n      \"description\": \"Position of the tooltip which is displayed if the category name text is longer\",\n      \"defaultValue\": \"'top'\"\n    }]\n  }, {\n    \"name\": \"Label\",\n    \"description\": \"\",\n    \"props\": [{\n      \"name\": \"children\",\n      \"type\": \"React.ReactNode\",\n      \"description\": \"Content rendered inside the label.\"\n    }, {\n      \"name\": \"className\",\n      \"type\": \"string\",\n      \"description\": \"Additional classes added to the label.\",\n      \"defaultValue\": \"''\"\n    }, {\n      \"name\": \"closeBtn\",\n      \"type\": \"React.ReactNode\",\n      \"description\": \"Node for custom close button.\"\n    }, {\n      \"name\": \"closeBtnAriaLabel\",\n      \"type\": \"string\",\n      \"description\": \"Aria label for close button\"\n    }, {\n      \"name\": \"closeBtnProps\",\n      \"type\": \"any\",\n      \"description\": \"Additional properties for the default close button.\"\n    }, {\n      \"name\": \"color\",\n      \"type\": \"'blue' | 'cyan' | 'green' | 'orange' | 'purple' | 'red' | 'grey'\",\n      \"description\": \"Color of the label.\",\n      \"defaultValue\": \"'grey'\"\n    }, {\n      \"name\": \"editableProps\",\n      \"type\": \"any\",\n      \"description\": \"Additional props passed to the editable label text div. Optionally passing onInput and onBlur callbacks will allow finer custom text input control.\",\n      \"beta\": true\n    }, {\n      \"name\": \"href\",\n      \"type\": \"string\",\n      \"description\": \"Href for a label that is a link. If present, the label will change to an anchor element.\"\n    }, {\n      \"name\": \"icon\",\n      \"type\": \"React.ReactNode\",\n      \"description\": \"Icon added to the left of the label text.\"\n    }, {\n      \"name\": \"isCompact\",\n      \"type\": \"boolean\",\n      \"description\": \"Flag indicating the label is compact.\",\n      \"defaultValue\": \"false\"\n    }, {\n      \"name\": \"isEditable\",\n      \"type\": \"boolean\",\n      \"description\": \"Flag indicating the label is editable.\",\n      \"defaultValue\": \"false\",\n      \"beta\": true\n    }, {\n      \"name\": \"isOverflowLabel\",\n      \"type\": \"boolean\",\n      \"description\": \"Flag indicating if the label is an overflow label\"\n    }, {\n      \"name\": \"isTruncated\",\n      \"type\": \"boolean\",\n      \"description\": \"Flag indicating the label text should be truncated.\",\n      \"defaultValue\": \"false\"\n    }, {\n      \"name\": \"onClose\",\n      \"type\": \"(event: React.MouseEvent) => void\",\n      \"description\": \"Close click callback for removable labels. If present, label will have a close button.\"\n    }, {\n      \"name\": \"onEditCancel\",\n      \"type\": \"(previousText: string) => void\",\n      \"description\": \"Callback when an editable label cancels an edit.\",\n      \"beta\": true\n    }, {\n      \"name\": \"onEditComplete\",\n      \"type\": \"(newText: string) => void\",\n      \"description\": \"Callback when an editable label completes an edit.\",\n      \"beta\": true\n    }, {\n      \"name\": \"render\",\n      \"type\": \"({\\n  className,\\n  content,\\n  componentRef\\n}: {\\n  className: string;\\n  content: React.ReactNode;\\n  componentRef: any;\\n}) => React.ReactNode\",\n      \"description\": \"Forwards the label content and className to rendered function.  Use this prop for react router support.\"\n    }, {\n      \"name\": \"tooltipPosition\",\n      \"type\": \"| TooltipPosition\\n| 'auto'\\n| 'top'\\n| 'bottom'\\n| 'left'\\n| 'right'\\n| 'top-start'\\n| 'top-end'\\n| 'bottom-start'\\n| 'bottom-end'\\n| 'left-start'\\n| 'left-end'\\n| 'right-start'\\n| 'right-end'\",\n      \"description\": \"Position of the tooltip which is displayed if text is truncated\"\n    }, {\n      \"name\": \"variant\",\n      \"type\": \"'outline' | 'filled'\",\n      \"description\": \"Variant of the label.\",\n      \"defaultValue\": \"'filled'\"\n    }]\n  }],\n  \"beta\": true,\n  \"cssPrefix\": [\"pf-c-label\"],\n  \"examples\": [\"Basic\", \"Overflow\", \"Category\", \"Category removable\", \"Vertical category overflow removable\", \"Editable labels\"]\n};\npageData.liveContext = {\n  InfoCircleIcon: InfoCircleIcon\n};\npageData.examples = {\n  'Basic': function Basic(props) {\n    return /*#__PURE__*/React.createElement(Example, _extends({}, pageData, props, {\n      \"code\": \"import React from 'react';\\nimport { Label, LabelGroup } from '@patternfly/react-core';\\nimport InfoCircleIcon from '@patternfly/react-icons/dist/esm/icons/info-circle-icon';\\n\\nconst Basic = () => (\\n  <LabelGroup>\\n    <Label icon={<InfoCircleIcon />}>Label 1</Label>\\n    <Label icon={<InfoCircleIcon />} color=\\\"blue\\\">\\n      Label 2\\n    </Label>\\n    <Label icon={<InfoCircleIcon />} color=\\\"green\\\">\\n      Label 3\\n    </Label>\\n  </LabelGroup>\\n)\",\n      \"title\": \"Basic\",\n      \"lang\": \"js\"\n    }));\n  },\n  'Overflow': function Overflow(props) {\n    return /*#__PURE__*/React.createElement(Example, _extends({}, pageData, props, {\n      \"code\": \"import React from 'react';\\nimport { Label, LabelGroup } from '@patternfly/react-core';\\nimport InfoCircleIcon from '@patternfly/react-icons/dist/esm/icons/info-circle-icon';\\n\\nconst Overflow = () => (\\n  <LabelGroup>\\n    <Label icon={<InfoCircleIcon />}>Label 1</Label>\\n    <Label icon={<InfoCircleIcon />} color=\\\"blue\\\">\\n      Label 2\\n    </Label>\\n    <Label icon={<InfoCircleIcon />} color=\\\"green\\\">\\n      Label 3\\n    </Label>\\n    <Label icon={<InfoCircleIcon />} color=\\\"orange\\\">\\n      Label 4\\n    </Label>\\n    <Label icon={<InfoCircleIcon />} color=\\\"red\\\">\\n      Label 5\\n    </Label>\\n    <Label icon={<InfoCircleIcon />} color=\\\"purple\\\">\\n      Label 6\\n    </Label>\\n  </LabelGroup>\\n)\",\n      \"title\": \"Overflow\",\n      \"lang\": \"js\"\n    }));\n  },\n  'Category': function Category(props) {\n    return /*#__PURE__*/React.createElement(Example, _extends({}, pageData, props, {\n      \"code\": \"import React from 'react';\\nimport { Label, LabelGroup } from '@patternfly/react-core';\\nimport InfoCircleIcon from '@patternfly/react-icons/dist/esm/icons/info-circle-icon';\\n\\nconst Category = () => (\\n  <LabelGroup categoryName=\\\"Group label\\\">\\n    <Label icon={<InfoCircleIcon />}>Label 1</Label>\\n    <Label icon={<InfoCircleIcon />} color=\\\"blue\\\">\\n      Label 2\\n    </Label>\\n    <Label icon={<InfoCircleIcon />} color=\\\"green\\\">\\n      Label 3\\n    </Label>\\n  </LabelGroup>\\n)\",\n      \"title\": \"Category\",\n      \"lang\": \"js\"\n    }));\n  },\n  'Category removable': function CategoryRemovable(props) {\n    return /*#__PURE__*/React.createElement(Example, _extends({}, pageData, props, {\n      \"code\": \"import React from 'react';\\nimport { Label, LabelGroup } from '@patternfly/react-core';\\nimport InfoCircleIcon from '@patternfly/react-icons/dist/esm/icons/info-circle-icon';\\n\\nCategoryLabelGroupRemovable = () => {\\n  const [labels, setLabels] = React.useState([\\n    ['Label 1', 'grey'],\\n    ['Label 2', 'blue'],\\n    ['Label 3', 'green'],\\n    ['Label 4', 'orange'],\\n    ['Label 5', 'red']\\n  ]);\\n  const deleteCategory = () => setLabels([]);\\n\\n  return (\\n    <LabelGroup categoryName=\\\"Group label\\\" isClosable onClick={deleteCategory}>\\n      {labels.map(([labelText, labelColor]) => (\\n        <Label icon={<InfoCircleIcon />} color={labelColor} key={labelText}>\\n          {labelText}\\n        </Label>\\n      ))}\\n    </LabelGroup>\\n  );\\n};\",\n      \"title\": \"Category removable\",\n      \"lang\": \"js\"\n    }));\n  },\n  'Vertical category overflow removable': function VerticalCategoryOverflowRemovable(props) {\n    return /*#__PURE__*/React.createElement(Example, _extends({}, pageData, props, {\n      \"code\": \"import React from 'react';\\nimport { Label, LabelGroup } from '@patternfly/react-core';\\nimport InfoCircleIcon from '@patternfly/react-icons/dist/esm/icons/info-circle-icon';\\n\\nVerticalCategoryLabelGroupOverflowRemovable = () => {\\n  const [labels, setLabels] = React.useState([\\n    ['Label 1', 'grey'],\\n    ['Label 2', 'blue'],\\n    ['Label 3', 'green'],\\n    ['Label 4', 'orange'],\\n    ['Label 5', 'red']\\n  ]);\\n  const deleteCategory = () => setLabels([]);\\n\\n  return (\\n    <LabelGroup categoryName=\\\"Group label with a very long name\\\" isVertical isClosable onClick={deleteCategory}>\\n      {labels.map(([labelText, labelColor]) => (\\n        <Label icon={<InfoCircleIcon />} color={labelColor} key={labelText}>\\n          {labelText}\\n        </Label>\\n      ))}\\n    </LabelGroup>\\n  );\\n};\",\n      \"title\": \"Vertical category overflow removable\",\n      \"lang\": \"js\"\n    }));\n  },\n  'Editable labels': function EditableLabels(props) {\n    return /*#__PURE__*/React.createElement(Example, _extends({}, pageData, props, {\n      \"code\": \"import React from 'react';\\nimport { LabelGroup, Label, TextArea } from '@patternfly/react-core';\\n\\nclass EditableLabelGroup extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      label1: 'Editable label',\\n      label2: 'Editable label 2',\\n      label3: 'Editable label 3'\\n    };\\n    this.onEditCancel = (prevText, label) => {\\n      this.setState({\\n        [label]: prevText\\n      });\\n    };\\n    this.onEditComplete = (newText, label) => {\\n      this.setState({\\n        [label]: newText\\n      });\\n    };\\n  }\\n\\n  render() {\\n    return (\\n      <LabelGroup numLabels={5} isEditable>\\n        <Label\\n          color=\\\"blue\\\"\\n          onClose={Function.prototype}\\n          onEditCancel={prevText => this.onEditCancel(prevText, 'label1')}\\n          onEditComplete={newText => this.onEditComplete(newText, 'label1')}\\n          isEditable\\n          editableProps={{\\n            'aria-label': 'Editable text',\\n            id: 'editable-label-1'\\n          }}\\n        >\\n          {this.state.label1}\\n        </Label>\\n        <Label color=\\\"green\\\">Static label</Label>\\n        <Label\\n          color=\\\"blue\\\"\\n          onClose={Function.prototype}\\n          onEditCancel={prevText => this.onEditCancel(prevText, 'label2')}\\n          onEditComplete={newText => this.onEditComplete(newText, 'label2')}\\n          isEditable\\n          editableProps={{\\n            'aria-label': 'Editable text 2',\\n            id: 'editable-label-2'\\n          }}\\n        >\\n          {this.state.label2}\\n        </Label>\\n        <Label\\n          color=\\\"blue\\\"\\n          onClose={Function.prototype}\\n          onEditCancel={prevText => this.onEditCancel(prevText, 'label3')}\\n          onEditComplete={newText => this.onEditComplete(newText, 'label3')}\\n          isEditable\\n          editableProps={{\\n            'aria-label': 'Editable text 3',\\n            id: 'editable-label-3'\\n          }}\\n        >\\n          {this.state.label3}\\n        </Label>\\n      </LabelGroup>\\n    );\\n  }\\n}\",\n      \"title\": \"Editable labels\",\n      \"lang\": \"js\",\n      \"isBeta\": true\n    }));\n  }\n};\n\nvar Component = function Component() {\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(AutoLinkHeader, {\n    \"id\": \"examples\",\n    \"size\": \"h2\",\n    \"className\": \"ws-title ws-h2\"\n  }, \"Examples\"), React.createElement(pageData.examples[\"Basic\"]), React.createElement(pageData.examples[\"Overflow\"]), React.createElement(pageData.examples[\"Category\"]), React.createElement(pageData.examples[\"Category removable\"]), React.createElement(pageData.examples[\"Vertical category overflow removable\"]), React.createElement(pageData.examples[\"Editable labels\"]));\n};\n\nComponent.displayName = 'ComponentsLabelGroupReactDocs';\nComponent.pageData = pageData;\nexport default Component;","map":{"version":3,"names":["React","AutoLinkHeader","Example","Link","PatternflyThemeLink","InfoCircleIcon","pageData","liveContext","examples","props","Component","createElement","displayName"],"sources":["/Users/jschuler/Code/patternfly-quickstarts/packages/docs/src/generated/components/label-group/react.js"],"sourcesContent":["import React from 'react';\nimport { AutoLinkHeader, Example, Link as PatternflyThemeLink } from 'theme-patternfly-org/components';\nimport InfoCircleIcon from '@patternfly/react-icons/dist/esm/icons/info-circle-icon';\nconst pageData = {\n  \"id\": \"Label group\",\n  \"section\": \"components\",\n  \"source\": \"react\",\n  \"slug\": \"/components/label-group/react\",\n  \"sourceLink\": \"https://github.com/patternfly/patternfly-react/blob/main/packages/docs/packages/react-core/src/components/LabelGroup/examples/LabelGroup.md\",\n  \"propComponents\": [\n    {\n      \"name\": \"LabelGroup\",\n      \"description\": \"\",\n      \"props\": [\n        {\n          \"name\": \"aria-label\",\n          \"type\": \"string\",\n          \"description\": \"Aria label for label group that does not have a category name\",\n          \"defaultValue\": \"'Label group category'\"\n        },\n        {\n          \"name\": \"categoryName\",\n          \"type\": \"string\",\n          \"description\": \"Category name text for the label group category.  If this prop is supplied the label group with have a label and category styling applied\",\n          \"defaultValue\": \"''\"\n        },\n        {\n          \"name\": \"children\",\n          \"type\": \"React.ReactNode\",\n          \"description\": \"Content rendered inside the label group. Should be <Label> elements.\"\n        },\n        {\n          \"name\": \"className\",\n          \"type\": \"string\",\n          \"description\": \"Additional classes added to the label item\"\n        },\n        {\n          \"name\": \"closeBtnAriaLabel\",\n          \"type\": \"string\",\n          \"description\": \"Aria label for close button\",\n          \"defaultValue\": \"'Close label group'\"\n        },\n        {\n          \"name\": \"collapsedText\",\n          \"type\": \"string\",\n          \"description\": \"Customizeable template string. Use variable \\\"${remaining}\\\" for the overflow label count.\",\n          \"defaultValue\": \"'${remaining} more'\"\n        },\n        {\n          \"name\": \"defaultIsOpen\",\n          \"type\": \"boolean\",\n          \"description\": \"Flag for having the label group default to expanded\",\n          \"defaultValue\": \"false\"\n        },\n        {\n          \"name\": \"editableTextAreaProps\",\n          \"type\": \"any\",\n          \"description\": \"Additional props passed to the editable textarea.\",\n          \"beta\": true\n        },\n        {\n          \"name\": \"expandedText\",\n          \"type\": \"string\",\n          \"description\": \"Customizable \\\"Show Less\\\" text string\",\n          \"defaultValue\": \"'Show Less'\"\n        },\n        {\n          \"name\": \"hasEditableTextArea\",\n          \"type\": \"boolean\",\n          \"description\": \"Flag indicating the editable label group should be appended with a textarea.\",\n          \"defaultValue\": \"false\",\n          \"beta\": true\n        },\n        {\n          \"name\": \"isClosable\",\n          \"type\": \"boolean\",\n          \"description\": \"Flag if label group can be closed\",\n          \"defaultValue\": \"false\"\n        },\n        {\n          \"name\": \"isCompact\",\n          \"type\": \"boolean\",\n          \"description\": \"Flag indicating the labels in the group are compact\",\n          \"defaultValue\": \"false\"\n        },\n        {\n          \"name\": \"isEditable\",\n          \"type\": \"boolean\",\n          \"description\": \"Flag indicating contained labels are editable. Allows spacing for a text input after the labels.\",\n          \"defaultValue\": \"false\",\n          \"beta\": true\n        },\n        {\n          \"name\": \"isVertical\",\n          \"type\": \"boolean\",\n          \"description\": \"Flag to implement a vertical layout\",\n          \"defaultValue\": \"false\"\n        },\n        {\n          \"name\": \"numLabels\",\n          \"type\": \"number\",\n          \"description\": \"Set number of labels to show before overflow\",\n          \"defaultValue\": \"3\"\n        },\n        {\n          \"name\": \"onClick\",\n          \"type\": \"(event: React.MouseEvent) => void\",\n          \"description\": \"Function that is called when clicking on the label group close button\",\n          \"defaultValue\": \"(_e: React.MouseEvent) => undefined as any\"\n        },\n        {\n          \"name\": \"tooltipPosition\",\n          \"type\": \"| TooltipPosition\\n| 'auto'\\n| 'top'\\n| 'bottom'\\n| 'left'\\n| 'right'\\n| 'top-start'\\n| 'top-end'\\n| 'bottom-start'\\n| 'bottom-end'\\n| 'left-start'\\n| 'left-end'\\n| 'right-start'\\n| 'right-end'\",\n          \"description\": \"Position of the tooltip which is displayed if the category name text is longer\",\n          \"defaultValue\": \"'top'\"\n        }\n      ]\n    },\n    {\n      \"name\": \"Label\",\n      \"description\": \"\",\n      \"props\": [\n        {\n          \"name\": \"children\",\n          \"type\": \"React.ReactNode\",\n          \"description\": \"Content rendered inside the label.\"\n        },\n        {\n          \"name\": \"className\",\n          \"type\": \"string\",\n          \"description\": \"Additional classes added to the label.\",\n          \"defaultValue\": \"''\"\n        },\n        {\n          \"name\": \"closeBtn\",\n          \"type\": \"React.ReactNode\",\n          \"description\": \"Node for custom close button.\"\n        },\n        {\n          \"name\": \"closeBtnAriaLabel\",\n          \"type\": \"string\",\n          \"description\": \"Aria label for close button\"\n        },\n        {\n          \"name\": \"closeBtnProps\",\n          \"type\": \"any\",\n          \"description\": \"Additional properties for the default close button.\"\n        },\n        {\n          \"name\": \"color\",\n          \"type\": \"'blue' | 'cyan' | 'green' | 'orange' | 'purple' | 'red' | 'grey'\",\n          \"description\": \"Color of the label.\",\n          \"defaultValue\": \"'grey'\"\n        },\n        {\n          \"name\": \"editableProps\",\n          \"type\": \"any\",\n          \"description\": \"Additional props passed to the editable label text div. Optionally passing onInput and onBlur callbacks will allow finer custom text input control.\",\n          \"beta\": true\n        },\n        {\n          \"name\": \"href\",\n          \"type\": \"string\",\n          \"description\": \"Href for a label that is a link. If present, the label will change to an anchor element.\"\n        },\n        {\n          \"name\": \"icon\",\n          \"type\": \"React.ReactNode\",\n          \"description\": \"Icon added to the left of the label text.\"\n        },\n        {\n          \"name\": \"isCompact\",\n          \"type\": \"boolean\",\n          \"description\": \"Flag indicating the label is compact.\",\n          \"defaultValue\": \"false\"\n        },\n        {\n          \"name\": \"isEditable\",\n          \"type\": \"boolean\",\n          \"description\": \"Flag indicating the label is editable.\",\n          \"defaultValue\": \"false\",\n          \"beta\": true\n        },\n        {\n          \"name\": \"isOverflowLabel\",\n          \"type\": \"boolean\",\n          \"description\": \"Flag indicating if the label is an overflow label\"\n        },\n        {\n          \"name\": \"isTruncated\",\n          \"type\": \"boolean\",\n          \"description\": \"Flag indicating the label text should be truncated.\",\n          \"defaultValue\": \"false\"\n        },\n        {\n          \"name\": \"onClose\",\n          \"type\": \"(event: React.MouseEvent) => void\",\n          \"description\": \"Close click callback for removable labels. If present, label will have a close button.\"\n        },\n        {\n          \"name\": \"onEditCancel\",\n          \"type\": \"(previousText: string) => void\",\n          \"description\": \"Callback when an editable label cancels an edit.\",\n          \"beta\": true\n        },\n        {\n          \"name\": \"onEditComplete\",\n          \"type\": \"(newText: string) => void\",\n          \"description\": \"Callback when an editable label completes an edit.\",\n          \"beta\": true\n        },\n        {\n          \"name\": \"render\",\n          \"type\": \"({\\n  className,\\n  content,\\n  componentRef\\n}: {\\n  className: string;\\n  content: React.ReactNode;\\n  componentRef: any;\\n}) => React.ReactNode\",\n          \"description\": \"Forwards the label content and className to rendered function.  Use this prop for react router support.\"\n        },\n        {\n          \"name\": \"tooltipPosition\",\n          \"type\": \"| TooltipPosition\\n| 'auto'\\n| 'top'\\n| 'bottom'\\n| 'left'\\n| 'right'\\n| 'top-start'\\n| 'top-end'\\n| 'bottom-start'\\n| 'bottom-end'\\n| 'left-start'\\n| 'left-end'\\n| 'right-start'\\n| 'right-end'\",\n          \"description\": \"Position of the tooltip which is displayed if text is truncated\"\n        },\n        {\n          \"name\": \"variant\",\n          \"type\": \"'outline' | 'filled'\",\n          \"description\": \"Variant of the label.\",\n          \"defaultValue\": \"'filled'\"\n        }\n      ]\n    }\n  ],\n  \"beta\": true,\n  \"cssPrefix\": [\n    \"pf-c-label\"\n  ],\n  \"examples\": [\n    \"Basic\",\n    \"Overflow\",\n    \"Category\",\n    \"Category removable\",\n    \"Vertical category overflow removable\",\n    \"Editable labels\"\n  ]\n};\npageData.liveContext = {\n  InfoCircleIcon\n};\npageData.examples = {\n  'Basic': props => \n    <Example {...pageData} {...props} {...{\"code\":\"import React from 'react';\\nimport { Label, LabelGroup } from '@patternfly/react-core';\\nimport InfoCircleIcon from '@patternfly/react-icons/dist/esm/icons/info-circle-icon';\\n\\nconst Basic = () => (\\n  <LabelGroup>\\n    <Label icon={<InfoCircleIcon />}>Label 1</Label>\\n    <Label icon={<InfoCircleIcon />} color=\\\"blue\\\">\\n      Label 2\\n    </Label>\\n    <Label icon={<InfoCircleIcon />} color=\\\"green\\\">\\n      Label 3\\n    </Label>\\n  </LabelGroup>\\n)\",\"title\":\"Basic\",\"lang\":\"js\"}}>\n      \n    </Example>,\n  'Overflow': props => \n    <Example {...pageData} {...props} {...{\"code\":\"import React from 'react';\\nimport { Label, LabelGroup } from '@patternfly/react-core';\\nimport InfoCircleIcon from '@patternfly/react-icons/dist/esm/icons/info-circle-icon';\\n\\nconst Overflow = () => (\\n  <LabelGroup>\\n    <Label icon={<InfoCircleIcon />}>Label 1</Label>\\n    <Label icon={<InfoCircleIcon />} color=\\\"blue\\\">\\n      Label 2\\n    </Label>\\n    <Label icon={<InfoCircleIcon />} color=\\\"green\\\">\\n      Label 3\\n    </Label>\\n    <Label icon={<InfoCircleIcon />} color=\\\"orange\\\">\\n      Label 4\\n    </Label>\\n    <Label icon={<InfoCircleIcon />} color=\\\"red\\\">\\n      Label 5\\n    </Label>\\n    <Label icon={<InfoCircleIcon />} color=\\\"purple\\\">\\n      Label 6\\n    </Label>\\n  </LabelGroup>\\n)\",\"title\":\"Overflow\",\"lang\":\"js\"}}>\n      \n    </Example>,\n  'Category': props => \n    <Example {...pageData} {...props} {...{\"code\":\"import React from 'react';\\nimport { Label, LabelGroup } from '@patternfly/react-core';\\nimport InfoCircleIcon from '@patternfly/react-icons/dist/esm/icons/info-circle-icon';\\n\\nconst Category = () => (\\n  <LabelGroup categoryName=\\\"Group label\\\">\\n    <Label icon={<InfoCircleIcon />}>Label 1</Label>\\n    <Label icon={<InfoCircleIcon />} color=\\\"blue\\\">\\n      Label 2\\n    </Label>\\n    <Label icon={<InfoCircleIcon />} color=\\\"green\\\">\\n      Label 3\\n    </Label>\\n  </LabelGroup>\\n)\",\"title\":\"Category\",\"lang\":\"js\"}}>\n      \n    </Example>,\n  'Category removable': props => \n    <Example {...pageData} {...props} {...{\"code\":\"import React from 'react';\\nimport { Label, LabelGroup } from '@patternfly/react-core';\\nimport InfoCircleIcon from '@patternfly/react-icons/dist/esm/icons/info-circle-icon';\\n\\nCategoryLabelGroupRemovable = () => {\\n  const [labels, setLabels] = React.useState([\\n    ['Label 1', 'grey'],\\n    ['Label 2', 'blue'],\\n    ['Label 3', 'green'],\\n    ['Label 4', 'orange'],\\n    ['Label 5', 'red']\\n  ]);\\n  const deleteCategory = () => setLabels([]);\\n\\n  return (\\n    <LabelGroup categoryName=\\\"Group label\\\" isClosable onClick={deleteCategory}>\\n      {labels.map(([labelText, labelColor]) => (\\n        <Label icon={<InfoCircleIcon />} color={labelColor} key={labelText}>\\n          {labelText}\\n        </Label>\\n      ))}\\n    </LabelGroup>\\n  );\\n};\",\"title\":\"Category removable\",\"lang\":\"js\"}}>\n      \n    </Example>,\n  'Vertical category overflow removable': props => \n    <Example {...pageData} {...props} {...{\"code\":\"import React from 'react';\\nimport { Label, LabelGroup } from '@patternfly/react-core';\\nimport InfoCircleIcon from '@patternfly/react-icons/dist/esm/icons/info-circle-icon';\\n\\nVerticalCategoryLabelGroupOverflowRemovable = () => {\\n  const [labels, setLabels] = React.useState([\\n    ['Label 1', 'grey'],\\n    ['Label 2', 'blue'],\\n    ['Label 3', 'green'],\\n    ['Label 4', 'orange'],\\n    ['Label 5', 'red']\\n  ]);\\n  const deleteCategory = () => setLabels([]);\\n\\n  return (\\n    <LabelGroup categoryName=\\\"Group label with a very long name\\\" isVertical isClosable onClick={deleteCategory}>\\n      {labels.map(([labelText, labelColor]) => (\\n        <Label icon={<InfoCircleIcon />} color={labelColor} key={labelText}>\\n          {labelText}\\n        </Label>\\n      ))}\\n    </LabelGroup>\\n  );\\n};\",\"title\":\"Vertical category overflow removable\",\"lang\":\"js\"}}>\n      \n    </Example>,\n  'Editable labels': props => \n    <Example {...pageData} {...props} {...{\"code\":\"import React from 'react';\\nimport { LabelGroup, Label, TextArea } from '@patternfly/react-core';\\n\\nclass EditableLabelGroup extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      label1: 'Editable label',\\n      label2: 'Editable label 2',\\n      label3: 'Editable label 3'\\n    };\\n    this.onEditCancel = (prevText, label) => {\\n      this.setState({\\n        [label]: prevText\\n      });\\n    };\\n    this.onEditComplete = (newText, label) => {\\n      this.setState({\\n        [label]: newText\\n      });\\n    };\\n  }\\n\\n  render() {\\n    return (\\n      <LabelGroup numLabels={5} isEditable>\\n        <Label\\n          color=\\\"blue\\\"\\n          onClose={Function.prototype}\\n          onEditCancel={prevText => this.onEditCancel(prevText, 'label1')}\\n          onEditComplete={newText => this.onEditComplete(newText, 'label1')}\\n          isEditable\\n          editableProps={{\\n            'aria-label': 'Editable text',\\n            id: 'editable-label-1'\\n          }}\\n        >\\n          {this.state.label1}\\n        </Label>\\n        <Label color=\\\"green\\\">Static label</Label>\\n        <Label\\n          color=\\\"blue\\\"\\n          onClose={Function.prototype}\\n          onEditCancel={prevText => this.onEditCancel(prevText, 'label2')}\\n          onEditComplete={newText => this.onEditComplete(newText, 'label2')}\\n          isEditable\\n          editableProps={{\\n            'aria-label': 'Editable text 2',\\n            id: 'editable-label-2'\\n          }}\\n        >\\n          {this.state.label2}\\n        </Label>\\n        <Label\\n          color=\\\"blue\\\"\\n          onClose={Function.prototype}\\n          onEditCancel={prevText => this.onEditCancel(prevText, 'label3')}\\n          onEditComplete={newText => this.onEditComplete(newText, 'label3')}\\n          isEditable\\n          editableProps={{\\n            'aria-label': 'Editable text 3',\\n            id: 'editable-label-3'\\n          }}\\n        >\\n          {this.state.label3}\\n        </Label>\\n      </LabelGroup>\\n    );\\n  }\\n}\",\"title\":\"Editable labels\",\"lang\":\"js\",\"isBeta\":true}}>\n      \n    </Example>\n};\n\nconst Component = () => (\n  <React.Fragment>\n    <AutoLinkHeader {...{\"id\":\"examples\",\"size\":\"h2\",\"className\":\"ws-title ws-h2\"}}>\n      {`Examples`}\n    </AutoLinkHeader>\n    {React.createElement(pageData.examples[\"Basic\"])}\n    {React.createElement(pageData.examples[\"Overflow\"])}\n    {React.createElement(pageData.examples[\"Category\"])}\n    {React.createElement(pageData.examples[\"Category removable\"])}\n    {React.createElement(pageData.examples[\"Vertical category overflow removable\"])}\n    {React.createElement(pageData.examples[\"Editable labels\"])}\n  </React.Fragment>\n);\nComponent.displayName = 'ComponentsLabelGroupReactDocs';\nComponent.pageData = pageData;\n\nexport default Component;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}