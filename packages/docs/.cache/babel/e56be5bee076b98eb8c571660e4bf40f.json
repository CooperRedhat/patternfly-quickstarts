{"ast":null,"code":"import React from 'react';\nimport { AutoLinkHeader, Example, Link as PatternflyThemeLink } from 'theme-patternfly-org/components';\nimport srcImport337 from '../../../content/design-guidelines/components/progress/./img/progress-bar-callouts.png';\nimport srcImport338 from '../../../content/design-guidelines/components/progress/./img/progress_bar_blue_animated.gif';\nimport srcImport339 from '../../../content/design-guidelines/components/progress/./img/progress-bar-in-progress.png';\nimport srcImport340 from '../../../content/design-guidelines/components/progress/./img/progress-bar-error-state.png';\nimport srcImport341 from '../../../content/design-guidelines/components/progress/./img/progress-bar-complete.png';\nimport srcImport342 from '../../../content/design-guidelines/components/progress/./img/progress-bar-right-aligned-progress-value.png';\nimport srcImport343 from '../../../content/design-guidelines/components/progress/./img/progress-bar-left-aligned-progress-value.png';\nimport srcImport344 from '../../../content/design-guidelines/components/progress/./img/progress-bar-do-dont.png';\nimport srcImport345 from '../../../content/design-guidelines/components/progress/./img/progress-bar-in-table.png';\nimport srcImport346 from '../../../content/design-guidelines/components/progress/./img/progress-bar-in-dashboard.png';\nimport srcImport347 from '../../../content/design-guidelines/components/progress/./img/progress-bar-during-file-download.png';\nimport srcImport348 from '../../../content/design-guidelines/components/progress/./img/progress-bar-in-wizard.png';\nvar pageData = {\n  \"id\": \"Progress\",\n  \"section\": \"components\",\n  \"source\": \"design-guidelines\",\n  \"slug\": \"/components/progress/design-guidelines\",\n  \"sourceLink\": \"https://github.com/patternfly/patternfly-org/blob/main/packages/docs/src/content/design-guidelines/components/progress/progress.md\"\n};\npageData.examples = {};\n\nvar Component = function Component() {\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"p\", {\n    \"className\": \"ws-p\"\n  }, \"A \", /*#__PURE__*/React.createElement(\"strong\", null, \"progress bar\"), \" informs users about the completion status of an ongoing process or task.\"), /*#__PURE__*/React.createElement(AutoLinkHeader, {\n    \"id\": \"elements\",\n    \"size\": \"h2\",\n    \"className\": \"ws-title ws-h2\"\n  }, \"Elements\"), /*#__PURE__*/React.createElement(\"img\", {\n    src: srcImport337,\n    height: srcImport337.height * 608 / srcImport337.width,\n    \"alt\": \"A progress bar with arrows pointing to each of its four elements: Its title, track, progress value, and indicator.\",\n    \"width\": \"608\",\n    \"className\": \"ws-img\"\n  }), /*#__PURE__*/React.createElement(\"ol\", {\n    \"className\": \"ws-ol\"\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    \"className\": \"ws-li\"\n  }, /*#__PURE__*/React.createElement(\"strong\", null, \"Title:\"), \" Describes the task or process underway.\"), /*#__PURE__*/React.createElement(\"li\", {\n    \"className\": \"ws-li\"\n  }, /*#__PURE__*/React.createElement(\"strong\", null, \"Track:\"), \" Illustrates the path from task start (empty) to task completion (full).\"), /*#__PURE__*/React.createElement(\"li\", {\n    \"className\": \"ws-li\"\n  }, /*#__PURE__*/React.createElement(\"strong\", null, \"Progress value:\"), \" Quantifies progress by sharing a completion percentage or time remaining. For long task sequences, progress value may be used to communicate where a user is in that sequence: \\u201CStep 1 of 6.\\u201D\"), /*#__PURE__*/React.createElement(\"li\", {\n    \"className\": \"ws-li\"\n  }, /*#__PURE__*/React.createElement(\"strong\", null, \"Indicator:\"), \" Animates the user\\u2019s progress toward completion.\")), /*#__PURE__*/React.createElement(AutoLinkHeader, {\n    \"id\": \"usage\",\n    \"size\": \"h2\",\n    \"className\": \"ws-title ws-h2\"\n  }, \"Usage\"), /*#__PURE__*/React.createElement(\"p\", {\n    \"className\": \"ws-p\"\n  }, \"Use a progress bar to keep users informed about how much effort or time they can expect to allocate for long or ongoing processes like loading or updating an app, submitting a form, or completing a multi-step tutorial.\"), /*#__PURE__*/React.createElement(\"p\", {\n    \"className\": \"ws-p\"\n  }, \"Use a progress bar when:\"), /*#__PURE__*/React.createElement(\"ul\", {\n    \"className\": \"ws-ul\"\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    \"className\": \"ws-li\"\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    \"className\": \"ws-p\"\n  }, \"A user must complete a series of tasks and will want indication that they are making progress.\")), /*#__PURE__*/React.createElement(\"li\", {\n    \"className\": \"ws-li\"\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    \"className\": \"ws-p\"\n  }, \"A user needs indication that the system is progressing through loading, saving, or downloading.\")), /*#__PURE__*/React.createElement(\"li\", {\n    \"className\": \"ws-li\"\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    \"className\": \"ws-p\"\n  }, \"A user needs to monitor a background process, especially if that process may take a long time.\"))), /*#__PURE__*/React.createElement(\"p\", {\n    \"className\": \"ws-p\"\n  }, \"Depending on your use case, you might choose between 2 types of loading indicators: Progress bars and \", /*#__PURE__*/React.createElement(PatternflyThemeLink, {\n    \"to\": \"/components/spinner\"\n  }, \"spinners\"), \". Never use a progress bar and spinner together.\"), /*#__PURE__*/React.createElement(\"p\", {\n    \"className\": \"ws-p\"\n  }, \"Default to progress bars for processes that take longer than 4 seconds or require more specific information about process completion. If a process takes less than four seconds, use a \", /*#__PURE__*/React.createElement(PatternflyThemeLink, {\n    \"to\": \"/components/spinner\"\n  }, \"spinner\"), \" instead.\"), /*#__PURE__*/React.createElement(AutoLinkHeader, {\n    \"id\": \"variations\",\n    \"size\": \"h2\",\n    \"className\": \"ws-title ws-h2\"\n  }, \"Variations\"), /*#__PURE__*/React.createElement(\"img\", {\n    src: srcImport338,\n    \"alt\": \"An animated progress bar demonstrates how a progress track fills and progress value increases as a process moves toward completion.\",\n    \"width\": \"500\",\n    \"height\": \"300\",\n    \"className\": \"ws-img\"\n  }), /*#__PURE__*/React.createElement(AutoLinkHeader, {\n    \"id\": \"determinate-progress-bar\",\n    \"size\": \"h3\",\n    \"className\": \"ws-title ws-h3\"\n  }, \"Determinate progress bar\"), /*#__PURE__*/React.createElement(\"p\", {\n    \"className\": \"ws-p\"\n  }, \"Whenever possible, use a determinate progress bar to communicate progress with measurable values like time or percentage.\"), /*#__PURE__*/React.createElement(\"p\", {\n    \"className\": \"ws-p\"\n  }, \"Use a percentage as a progress value if the process will take less than a minute to complete or a percentage will be more accurate than estimating a task\\u2019s duration.\"), /*#__PURE__*/React.createElement(\"p\", {\n    \"className\": \"ws-p\"\n  }, \"Use a time interval value such as \\u201C4 minutes remaining\\u201D to communicate progress if the process takes more than one minute to complete.\"), /*#__PURE__*/React.createElement(AutoLinkHeader, {\n    \"id\": \"indeterminate-progress-bar\",\n    \"size\": \"h3\",\n    \"className\": \"ws-title ws-h3\"\n  }, \"Indeterminate progress bar\"), /*#__PURE__*/React.createElement(\"p\", {\n    \"className\": \"ws-p\"\n  }, \"Avoid using indeterminate progress bars to communicate progress that can\\u2019t be measured. To track progress that can\\u2019t be quantified with a percentage, time, or step, use a \", /*#__PURE__*/React.createElement(PatternflyThemeLink, {\n    \"to\": \"/components/spinner\"\n  }, \"spinner\"), \" instead.\"), /*#__PURE__*/React.createElement(AutoLinkHeader, {\n    \"id\": \"styling-for-statuses\",\n    \"size\": \"h2\",\n    \"className\": \"ws-title ws-h2\"\n  }, \"Styling for statuses\"), /*#__PURE__*/React.createElement(\"p\", {\n    \"className\": \"ws-p\"\n  }, \"Styling for progress bar statuses should follow accessibility guidelines by communicating each state through several messaging types: Color, microcopy, and icons.\"), /*#__PURE__*/React.createElement(\"p\", {\n    \"className\": \"ws-p\"\n  }, \"Follow these general style guidelines when designing your progress bars. For information about writing progress bar titles for each status type, see the \", /*#__PURE__*/React.createElement(PatternflyThemeLink, {\n    \"to\": \"#content\"\n  }, \"Content\"), \" section.\"), /*#__PURE__*/React.createElement(AutoLinkHeader, {\n    \"id\": \"in-progress\",\n    \"size\": \"h3\",\n    \"className\": \"ws-title ws-h3\"\n  }, \"In progress\"), /*#__PURE__*/React.createElement(\"p\", {\n    \"className\": \"ws-p\"\n  }, \"A blue progress bar represents a process that is currently underway.\"), /*#__PURE__*/React.createElement(\"img\", {\n    src: srcImport339,\n    height: srcImport339.height * 560 / srcImport339.width,\n    \"alt\": \"An example of a progress bar in an 'in progress' state, with a blue track and a title that indicates its status: 'Validating account credentials.'\",\n    \"width\": \"560\",\n    \"className\": \"ws-img\"\n  }), /*#__PURE__*/React.createElement(AutoLinkHeader, {\n    \"id\": \"error-state-or-failure\",\n    \"size\": \"h3\",\n    \"className\": \"ws-title ws-h3\"\n  }, \"Error state or failure\"), /*#__PURE__*/React.createElement(\"p\", {\n    \"className\": \"ws-p\"\n  }, \"A red progress bar represents a process that has failed. Accompany a failed progress bar with a \", /*#__PURE__*/React.createElement(PatternflyThemeLink, {\n    \"to\": \"/guidelines/icons/#all-icons\"\n  }, \"red danger icon\"), \" to demonstrate that an error occurred in the process.\"), /*#__PURE__*/React.createElement(\"img\", {\n    src: srcImport340,\n    height: srcImport340.height * 560 / srcImport340.width,\n    \"alt\": \"An example of a progress bar in an error or failed state, with a red track, optional danger icon, and a title that indicates its status: 'Could not validate account credentials.'\",\n    \"width\": \"560\",\n    \"className\": \"ws-img\"\n  }), /*#__PURE__*/React.createElement(AutoLinkHeader, {\n    \"id\": \"complete-or-success\",\n    \"size\": \"h3\",\n    \"className\": \"ws-title ws-h3\"\n  }, \"Complete or success\"), /*#__PURE__*/React.createElement(\"p\", {\n    \"className\": \"ws-p\"\n  }, \"A green progress bar represents the successful completion of a process. Accompany a complete progress bar with a \", /*#__PURE__*/React.createElement(PatternflyThemeLink, {\n    \"to\": \"/guidelines/icons/#all-icons\"\n  }, \"green check-circle icon\"), \" to demonstrate that the process has finished with no errors.\"), /*#__PURE__*/React.createElement(\"img\", {\n    src: srcImport341,\n    height: srcImport341.height * 560 / srcImport341.width,\n    \"alt\": \"An example of a progress bar in a complete or successful state, with a green track, optional check-circle icon, and a title that indicates its status: 'Validated account credentials.'\",\n    \"width\": \"560\",\n    \"className\": \"ws-img\"\n  }), /*#__PURE__*/React.createElement(AutoLinkHeader, {\n    \"id\": \"spacing-and-alignment\",\n    \"size\": \"h2\",\n    \"className\": \"ws-title ws-h2\"\n  }, \"Spacing and alignment\"), /*#__PURE__*/React.createElement(\"p\", {\n    \"className\": \"ws-p\"\n  }, \"Right-align progress value text when it\\u2019s placed above the progress track, in line with the title.\"), /*#__PURE__*/React.createElement(\"img\", {\n    src: srcImport342,\n    height: srcImport342.height * 560 / srcImport342.width,\n    \"alt\": \"A visual example of a progress bar with right-aligned progress value text above the progress track.\",\n    \"width\": \"560\",\n    \"className\": \"ws-img\"\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    \"className\": \"ws-p\"\n  }, \"Left-align progress value text when it\\u2019s placed to the right of the track.\"), /*#__PURE__*/React.createElement(\"img\", {\n    src: srcImport343,\n    height: srcImport343.height * 616 / srcImport343.width,\n    \"alt\": \"A visual example of a progress bar with left-aligned progress value text in line with the progress track.\",\n    \"width\": \"616\",\n    \"className\": \"ws-img\"\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    \"className\": \"ws-p\"\n  }, \"Always set an \\u201Coutside fixed width measure\\u201D for determinate progress bars. This fixed spacing should solve alignment use cases in which stacked progress bar values vary in length.\"), /*#__PURE__*/React.createElement(AutoLinkHeader, {\n    \"id\": \"placement\",\n    \"size\": \"h2\",\n    \"className\": \"ws-title ws-h2\"\n  }, \"Placement\"), /*#__PURE__*/React.createElement(\"img\", {\n    src: srcImport344,\n    height: srcImport344.height * 1135 / srcImport344.width,\n    \"alt\": \"A visual example of how to successfully place a progress bar in your designs, side by side with an example of unsuccessful placement. Never isolate a progress bar above, below, or outside of its corresponding content view — always align it with its relevant content.\",\n    \"width\": \"1135\",\n    \"className\": \"ws-img\"\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    \"className\": \"ws-p\"\n  }, \"Always place progress bars in alignment with their relevant context, such as the feature, function, or task they reflect. Keep progress bars within the user\\u2019s line of sight: Never isolate a progress bar at the top or bottom of a page, or outside of its relevant content view.\"), /*#__PURE__*/React.createElement(\"p\", {\n    \"className\": \"ws-p\"\n  }, \"Use progress bars to communicate progress in a variety of contexts including:\"), /*#__PURE__*/React.createElement(\"ul\", {\n    \"className\": \"ws-ul\"\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    \"className\": \"ws-li\"\n  }, /*#__PURE__*/React.createElement(PatternflyThemeLink, {\n    \"to\": \"#in-a-table\"\n  }, \"In a table\")), /*#__PURE__*/React.createElement(\"li\", {\n    \"className\": \"ws-li\"\n  }, /*#__PURE__*/React.createElement(PatternflyThemeLink, {\n    \"to\": \"#in-a-dashboard-view\"\n  }, \"In a dashboard view\")), /*#__PURE__*/React.createElement(\"li\", {\n    \"className\": \"ws-li\"\n  }, /*#__PURE__*/React.createElement(PatternflyThemeLink, {\n    \"to\": \"#during-a-file-download\"\n  }, \"During a file download\")), /*#__PURE__*/React.createElement(\"li\", {\n    \"className\": \"ws-li\"\n  }, /*#__PURE__*/React.createElement(PatternflyThemeLink, {\n    \"to\": \"#in-a-wizard\"\n  }, \"In a wizard\"))), /*#__PURE__*/React.createElement(AutoLinkHeader, {\n    \"id\": \"in-a-table\",\n    \"size\": \"h3\",\n    \"className\": \"ws-title ws-h3\"\n  }, \"In a table\"), /*#__PURE__*/React.createElement(\"p\", {\n    \"className\": \"ws-p\"\n  }, \"Use a progress bar in a table to communicate the status of processes or tasks within it.\"), /*#__PURE__*/React.createElement(\"p\", {\n    \"className\": \"ws-p\"\n  }, \"Place a progress bar into a table just as you would other table content. If a progress bar records the progress of multiple line items, group these items in adjoining cells and keep the progress bar in-line with the first item it pertains to. For multi-item progress bars that apply to non-consecutive items, consider adding a progress bar in-line with each individual item.\"), /*#__PURE__*/React.createElement(\"p\", {\n    \"className\": \"ws-p\"\n  }, \"If your table includes multiple progress bars, designate a \\u201CStatus\\u201D or \\u201CProgress\\u201D column for each one.\"), /*#__PURE__*/React.createElement(\"img\", {\n    src: srcImport345,\n    height: srcImport345.height * 543 / srcImport345.width,\n    \"alt\": \"A visual example of how to successfully place progress bars in a table.\",\n    \"width\": \"543\",\n    \"className\": \"ws-img\"\n  }), /*#__PURE__*/React.createElement(AutoLinkHeader, {\n    \"id\": \"in-a-dashboard-view\",\n    \"size\": \"h3\",\n    \"className\": \"ws-title ws-h3\"\n  }, \"In a dashboard view\"), /*#__PURE__*/React.createElement(\"p\", {\n    \"className\": \"ws-p\"\n  }, \"Use a progress bar in a dashboard view to track the progress trends within each card component on a page.\"), /*#__PURE__*/React.createElement(\"img\", {\n    src: srcImport346,\n    height: srcImport346.height * 543 / srcImport346.width,\n    \"alt\": \"A visual example of how to successfully place progress bars in dashboard views.\",\n    \"width\": \"543\",\n    \"className\": \"ws-img\"\n  }), /*#__PURE__*/React.createElement(AutoLinkHeader, {\n    \"id\": \"during-a-file-download\",\n    \"size\": \"h3\",\n    \"className\": \"ws-title ws-h3\"\n  }, \"During a file download\"), /*#__PURE__*/React.createElement(\"p\", {\n    \"className\": \"ws-p\"\n  }, \"Use a \", /*#__PURE__*/React.createElement(PatternflyThemeLink, {\n    \"to\": \"/components/alert/design-guidelines/#using-toast-alerts\"\n  }, \"toast notification\"), \" and a progress bar to demonstrate progress during a file download.\"), /*#__PURE__*/React.createElement(\"img\", {\n    src: srcImport347,\n    height: srcImport347.height * 543 / srcImport347.width,\n    \"alt\": \"A visual example of how to successfully place progress bars in toast alerts to communicate progress during a file download.\",\n    \"width\": \"543\",\n    \"className\": \"ws-img\"\n  }), /*#__PURE__*/React.createElement(AutoLinkHeader, {\n    \"id\": \"in-a-wizard\",\n    \"size\": \"h3\",\n    \"className\": \"ws-title ws-h3\"\n  }, \"In a wizard\"), /*#__PURE__*/React.createElement(\"p\", {\n    \"className\": \"ws-p\"\n  }, /*#__PURE__*/React.createElement(\"strong\", null, \"Never\"), \" use a progress bar in a wizard to indicate progress through wizard steps, since a wizard\\u2019s steps sidebar already communicates this information.\"), /*#__PURE__*/React.createElement(\"p\", {\n    \"className\": \"ws-p\"\n  }, \"Only use a progress bar in a wizard if its final validation process will take more than a few seconds. As users wait for their changes to be processed, display a progress screen that includes a progress title, progress bar, and an optional 1-2 sentence description to provide more details about the validation step or give users a better idea of how long this process might take.\"), /*#__PURE__*/React.createElement(\"img\", {\n    src: srcImport348,\n    height: srcImport348.height * 543 / srcImport348.width,\n    \"alt\": \"A visual example of how to successfully place a progress bar in a wizard to express a final validation process.\",\n    \"width\": \"543\",\n    \"className\": \"ws-img\"\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    \"className\": \"ws-p\"\n  }, \"To learn more about using progress bars in wizard validation progress screens, see our \", /*#__PURE__*/React.createElement(PatternflyThemeLink, {\n    \"to\": \"/components/wizard/design-guidelines\"\n  }, \"wizard guidelines\"), \".\"), /*#__PURE__*/React.createElement(AutoLinkHeader, {\n    \"id\": \"content\",\n    \"size\": \"h2\",\n    \"className\": \"ws-title ws-h2\"\n  }, \"Content\"), /*#__PURE__*/React.createElement(\"p\", {\n    \"className\": \"ws-p\"\n  }, \"Progress bars should be self-explanatory and therefore include minimal written content: A title and an optional progress value.\"), /*#__PURE__*/React.createElement(\"p\", {\n    \"className\": \"ws-p\"\n  }, \"In some use cases, longer progress bars might feature multiple lines of copy that change as a process moves through several phases. Default to one title per progress bar, unless your progress bar measures a multi-step process or procedure that isn\\u2019t detailed elsewhere.\"), /*#__PURE__*/React.createElement(AutoLinkHeader, {\n    \"id\": \"titles\",\n    \"size\": \"h3\",\n    \"className\": \"ws-title ws-h3\"\n  }, \"Titles\"), /*#__PURE__*/React.createElement(\"p\", {\n    \"className\": \"ws-p\"\n  }, \"Keep progress bar titles short and specific, between 1-3 words. Use verbs that clearly communicate each process and avoid using generalizations like \\u201CThis may take a few minutes.\\u201D\"), /*#__PURE__*/React.createElement(\"p\", {\n    \"className\": \"ws-p\"\n  }, \"Never punctuate progress bar titles, since they consist of fragments, not full sentences. Avoid using ellipses to communicate a loading state \\u2014 progress bars indicate a process is \\u201Cin progress\\u201D on their own.\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ws-content-table\"\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    \"className\": \"ws-table pf-c-table pf-m-grid-lg pf-m-compact\",\n    \"role\": \"grid\"\n  }, /*#__PURE__*/React.createElement(\"thead\", null, /*#__PURE__*/React.createElement(\"tr\", {\n    \"role\": \"row\"\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    \"align\": \"center\",\n    \"className\": \" pf-m-wrap\",\n    \"role\": \"columnheader\",\n    \"scope\": \"col\"\n  }, /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(\"strong\", null, \"Do\"))), /*#__PURE__*/React.createElement(\"th\", {\n    \"align\": \"center\",\n    \"className\": \" pf-m-wrap\",\n    \"role\": \"columnheader\",\n    \"scope\": \"col\"\n  }, /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(\"strong\", null, \"Don't\"))))), /*#__PURE__*/React.createElement(\"tbody\", {\n    \"role\": \"rowgroup\"\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    \"role\": \"row\"\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    \"align\": \"center\",\n    \"role\": \"cell\",\n    \"data-label\": \"Do\"\n  }, /*#__PURE__*/React.createElement(\"div\", null, \"Downloading \", \"[application name]\")), /*#__PURE__*/React.createElement(\"td\", {\n    \"align\": \"center\",\n    \"role\": \"cell\",\n    \"data-label\": \"Don't\"\n  }, /*#__PURE__*/React.createElement(\"div\", null, \"Your application is downloading...\"))), /*#__PURE__*/React.createElement(\"tr\", {\n    \"role\": \"row\"\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    \"align\": \"center\",\n    \"role\": \"cell\",\n    \"data-label\": \"Do\"\n  }, /*#__PURE__*/React.createElement(\"div\", null, \"Creating cache\")), /*#__PURE__*/React.createElement(\"td\", {\n    \"align\": \"center\",\n    \"role\": \"cell\",\n    \"data-label\": \"Don't\"\n  }, /*#__PURE__*/React.createElement(\"div\", null, \"This may take a few minutes...\"))), /*#__PURE__*/React.createElement(\"tr\", {\n    \"role\": \"row\"\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    \"align\": \"center\",\n    \"role\": \"cell\",\n    \"data-label\": \"Do\"\n  }, /*#__PURE__*/React.createElement(\"div\", null, \"Validating account credentials\")), /*#__PURE__*/React.createElement(\"td\", {\n    \"align\": \"center\",\n    \"role\": \"cell\",\n    \"data-label\": \"Don't\"\n  }, /*#__PURE__*/React.createElement(\"div\", null, \"We're validating your account credentials\")))))), /*#__PURE__*/React.createElement(\"p\", {\n    \"className\": \"ws-p\"\n  }, \"In addition to status styling, use verb tense to communicate the state of a process: In progress, failed, or complete.\"), /*#__PURE__*/React.createElement(\"p\", {\n    \"className\": \"ws-p\"\n  }, \"For \", /*#__PURE__*/React.createElement(\"strong\", null, \"in progress\"), \" statuses, write your progress bar title with present participles (\\u2014ing) to share that a process is underway. Avoid passive voice by starting each title with the present participle (\\\"-ing\\\") form of your task\\u2019s verb.\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ws-content-table\"\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    \"className\": \"ws-table pf-c-table pf-m-grid-lg pf-m-compact\",\n    \"role\": \"grid\"\n  }, /*#__PURE__*/React.createElement(\"thead\", null, /*#__PURE__*/React.createElement(\"tr\", {\n    \"role\": \"row\"\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    \"align\": \"center\",\n    \"className\": \" pf-m-wrap\",\n    \"role\": \"columnheader\",\n    \"scope\": \"col\"\n  }, /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(\"strong\", null, \"Do\"))), /*#__PURE__*/React.createElement(\"th\", {\n    \"align\": \"center\",\n    \"className\": \" pf-m-wrap\",\n    \"role\": \"columnheader\",\n    \"scope\": \"col\"\n  }, /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(\"strong\", null, \"Don't\"))))), /*#__PURE__*/React.createElement(\"tbody\", {\n    \"role\": \"rowgroup\"\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    \"role\": \"row\"\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    \"align\": \"center\",\n    \"role\": \"cell\",\n    \"data-label\": \"Do\"\n  }, /*#__PURE__*/React.createElement(\"div\", null, \"Installing cluster\")), /*#__PURE__*/React.createElement(\"td\", {\n    \"align\": \"center\",\n    \"role\": \"cell\",\n    \"data-label\": \"Don't\"\n  }, /*#__PURE__*/React.createElement(\"div\", null, \"Cluster is installing\"))), /*#__PURE__*/React.createElement(\"tr\", {\n    \"role\": \"row\"\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    \"align\": \"center\",\n    \"role\": \"cell\",\n    \"data-label\": \"Do\"\n  }, /*#__PURE__*/React.createElement(\"div\", null, \"Creating cache\")), /*#__PURE__*/React.createElement(\"td\", {\n    \"align\": \"center\",\n    \"role\": \"cell\",\n    \"data-label\": \"Don't\"\n  }, /*#__PURE__*/React.createElement(\"div\", null, \"Cluster creation in progress\")))))), /*#__PURE__*/React.createElement(\"p\", {\n    \"className\": \"ws-p\"\n  }, \"For \", /*#__PURE__*/React.createElement(\"strong\", null, \"failed\"), \" statuses, write your progress bar title in past tense. Avoid telling users a process \\u201Cfailed\\u201D in favor of providing a more specific description.\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ws-content-table\"\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    \"className\": \"ws-table pf-c-table pf-m-grid-lg pf-m-compact\",\n    \"role\": \"grid\"\n  }, /*#__PURE__*/React.createElement(\"thead\", null, /*#__PURE__*/React.createElement(\"tr\", {\n    \"role\": \"row\"\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    \"align\": \"center\",\n    \"className\": \" pf-m-wrap\",\n    \"role\": \"columnheader\",\n    \"scope\": \"col\"\n  }, /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(\"strong\", null, \"Do\"))), /*#__PURE__*/React.createElement(\"th\", {\n    \"align\": \"center\",\n    \"className\": \" pf-m-wrap\",\n    \"role\": \"columnheader\",\n    \"scope\": \"col\"\n  }, /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(\"strong\", null, \"Don't\"))))), /*#__PURE__*/React.createElement(\"tbody\", {\n    \"role\": \"rowgroup\"\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    \"role\": \"row\"\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    \"align\": \"center\",\n    \"role\": \"cell\",\n    \"data-label\": \"Do\"\n  }, /*#__PURE__*/React.createElement(\"div\", null, \"Could not install cluster\")), /*#__PURE__*/React.createElement(\"td\", {\n    \"align\": \"center\",\n    \"role\": \"cell\",\n    \"data-label\": \"Don't\"\n  }, /*#__PURE__*/React.createElement(\"div\", null, \"Cluster installation failed\"))), /*#__PURE__*/React.createElement(\"tr\", {\n    \"role\": \"row\"\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    \"align\": \"center\",\n    \"role\": \"cell\",\n    \"data-label\": \"Do\"\n  }, /*#__PURE__*/React.createElement(\"div\", null, \"Could not validate account credentials\")), /*#__PURE__*/React.createElement(\"td\", {\n    \"align\": \"center\",\n    \"role\": \"cell\",\n    \"data-label\": \"Don't\"\n  }, /*#__PURE__*/React.createElement(\"div\", null, \"Account validation unsuccessful\")))))), /*#__PURE__*/React.createElement(\"p\", {\n    \"className\": \"ws-p\"\n  }, \"For \", /*#__PURE__*/React.createElement(\"strong\", null, \"complete\"), \" statuses, write your progress bar title in past tense. Use this brief line to confirm that a process or task succeeded. Avoid using adverbs like \\u201Csuccessfully\\u201D by simply stating the action happened.\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ws-content-table\"\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    \"className\": \"ws-table pf-c-table pf-m-grid-lg pf-m-compact\",\n    \"role\": \"grid\"\n  }, /*#__PURE__*/React.createElement(\"thead\", null, /*#__PURE__*/React.createElement(\"tr\", {\n    \"role\": \"row\"\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    \"align\": \"center\",\n    \"className\": \" pf-m-wrap\",\n    \"role\": \"columnheader\",\n    \"scope\": \"col\"\n  }, /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(\"strong\", null, \"Do\"))), /*#__PURE__*/React.createElement(\"th\", {\n    \"align\": \"center\",\n    \"className\": \" pf-m-wrap\",\n    \"role\": \"columnheader\",\n    \"scope\": \"col\"\n  }, /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(\"strong\", null, \"Don't\"))))), /*#__PURE__*/React.createElement(\"tbody\", {\n    \"role\": \"rowgroup\"\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    \"role\": \"row\"\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    \"align\": \"center\",\n    \"role\": \"cell\",\n    \"data-label\": \"Do\"\n  }, /*#__PURE__*/React.createElement(\"div\", null, \"Cluster installed\")), /*#__PURE__*/React.createElement(\"td\", {\n    \"align\": \"center\",\n    \"role\": \"cell\",\n    \"data-label\": \"Don't\"\n  }, /*#__PURE__*/React.createElement(\"div\", null, \"Installation is complete\"))), /*#__PURE__*/React.createElement(\"tr\", {\n    \"role\": \"row\"\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    \"align\": \"center\",\n    \"role\": \"cell\",\n    \"data-label\": \"Do\"\n  }, /*#__PURE__*/React.createElement(\"div\", null, \"Validated account credentials\")), /*#__PURE__*/React.createElement(\"td\", {\n    \"align\": \"center\",\n    \"role\": \"cell\",\n    \"data-label\": \"Don't\"\n  }, /*#__PURE__*/React.createElement(\"div\", null, \"Successfully validated account credentials\")))))), /*#__PURE__*/React.createElement(\"p\", {\n    \"className\": \"ws-p\"\n  }, \"Progress bars should only use content in their title and progress value. Never write additional content inside the progress track.\"));\n};\n\nComponent.displayName = 'ComponentsProgressDesignGuidelinesDocs';\nComponent.pageData = pageData;\nexport default Component;","map":{"version":3,"names":["React","AutoLinkHeader","Example","Link","PatternflyThemeLink","srcImport337","srcImport338","srcImport339","srcImport340","srcImport341","srcImport342","srcImport343","srcImport344","srcImport345","srcImport346","srcImport347","srcImport348","pageData","examples","Component","height","width","displayName"],"sources":["/Users/jschuler/Code/patternfly-quickstarts/packages/docs/src/generated/components/progress/design-guidelines.js"],"sourcesContent":["import React from 'react';\nimport { AutoLinkHeader, Example, Link as PatternflyThemeLink } from 'theme-patternfly-org/components';\nimport srcImport337 from '../../../content/design-guidelines/components/progress/./img/progress-bar-callouts.png';\nimport srcImport338 from '../../../content/design-guidelines/components/progress/./img/progress_bar_blue_animated.gif';\nimport srcImport339 from '../../../content/design-guidelines/components/progress/./img/progress-bar-in-progress.png';\nimport srcImport340 from '../../../content/design-guidelines/components/progress/./img/progress-bar-error-state.png';\nimport srcImport341 from '../../../content/design-guidelines/components/progress/./img/progress-bar-complete.png';\nimport srcImport342 from '../../../content/design-guidelines/components/progress/./img/progress-bar-right-aligned-progress-value.png';\nimport srcImport343 from '../../../content/design-guidelines/components/progress/./img/progress-bar-left-aligned-progress-value.png';\nimport srcImport344 from '../../../content/design-guidelines/components/progress/./img/progress-bar-do-dont.png';\nimport srcImport345 from '../../../content/design-guidelines/components/progress/./img/progress-bar-in-table.png';\nimport srcImport346 from '../../../content/design-guidelines/components/progress/./img/progress-bar-in-dashboard.png';\nimport srcImport347 from '../../../content/design-guidelines/components/progress/./img/progress-bar-during-file-download.png';\nimport srcImport348 from '../../../content/design-guidelines/components/progress/./img/progress-bar-in-wizard.png';\nconst pageData = {\n  \"id\": \"Progress\",\n  \"section\": \"components\",\n  \"source\": \"design-guidelines\",\n  \"slug\": \"/components/progress/design-guidelines\",\n  \"sourceLink\": \"https://github.com/patternfly/patternfly-org/blob/main/packages/docs/src/content/design-guidelines/components/progress/progress.md\"\n};\npageData.examples = {\n  \n};\n\nconst Component = () => (\n  <React.Fragment>\n    <p {...{\"className\":\"ws-p\"}}>\n      {`A `}\n      <strong>\n        {`progress bar`}\n      </strong>\n      {` informs users about the completion status of an ongoing process or task.`}\n    </p>\n    <AutoLinkHeader {...{\"id\":\"elements\",\"size\":\"h2\",\"className\":\"ws-title ws-h2\"}}>\n      {`Elements`}\n    </AutoLinkHeader>\n    <img src={srcImport337} height={srcImport337.height * 608 / srcImport337.width} {...{\"alt\":\"A progress bar with arrows pointing to each of its four elements: Its title, track, progress value, and indicator.\",\"width\":\"608\",\"className\":\"ws-img\"}}>\n    </img>\n    <ol {...{\"className\":\"ws-ol\"}}>\n      <li {...{\"className\":\"ws-li\"}}>\n        <strong>\n          {`Title:`}\n        </strong>\n        {` Describes the task or process underway.`}\n      </li>\n      <li {...{\"className\":\"ws-li\"}}>\n        <strong>\n          {`Track:`}\n        </strong>\n        {` Illustrates the path from task start (empty) to task completion (full).`}\n      </li>\n      <li {...{\"className\":\"ws-li\"}}>\n        <strong>\n          {`Progress value:`}\n        </strong>\n        {` Quantifies progress by sharing a completion percentage or time remaining. For long task sequences, progress value may be used to communicate where a user is in that sequence: “Step 1 of 6.”`}\n      </li>\n      <li {...{\"className\":\"ws-li\"}}>\n        <strong>\n          {`Indicator:`}\n        </strong>\n        {` Animates the user’s progress toward completion.`}\n      </li>\n    </ol>\n    <AutoLinkHeader {...{\"id\":\"usage\",\"size\":\"h2\",\"className\":\"ws-title ws-h2\"}}>\n      {`Usage`}\n    </AutoLinkHeader>\n    <p {...{\"className\":\"ws-p\"}}>\n      {`Use a progress bar to keep users informed about how much effort or time they can expect to allocate for long or ongoing processes like loading or updating an app, submitting a form, or completing a multi-step tutorial.`}\n    </p>\n    <p {...{\"className\":\"ws-p\"}}>\n      {`Use a progress bar when:`}\n    </p>\n    <ul {...{\"className\":\"ws-ul\"}}>\n      <li {...{\"className\":\"ws-li\"}}>\n        <p {...{\"className\":\"ws-p\"}}>\n          {`A user must complete a series of tasks and will want indication that they are making progress.`}\n        </p>\n      </li>\n      <li {...{\"className\":\"ws-li\"}}>\n        <p {...{\"className\":\"ws-p\"}}>\n          {`A user needs indication that the system is progressing through loading, saving, or downloading.`}\n        </p>\n      </li>\n      <li {...{\"className\":\"ws-li\"}}>\n        <p {...{\"className\":\"ws-p\"}}>\n          {`A user needs to monitor a background process, especially if that process may take a long time.`}\n        </p>\n      </li>\n    </ul>\n    <p {...{\"className\":\"ws-p\"}}>\n      {`Depending on your use case, you might choose between 2 types of loading indicators: Progress bars and `}\n      <PatternflyThemeLink {...{\"to\":\"/components/spinner\"}}>\n        {`spinners`}\n      </PatternflyThemeLink>\n      {`. Never use a progress bar and spinner together.`}\n    </p>\n    <p {...{\"className\":\"ws-p\"}}>\n      {`Default to progress bars for processes that take longer than 4 seconds or require more specific information about process completion. If a process takes less than four seconds, use a `}\n      <PatternflyThemeLink {...{\"to\":\"/components/spinner\"}}>\n        {`spinner`}\n      </PatternflyThemeLink>\n      {` instead.`}\n    </p>\n    <AutoLinkHeader {...{\"id\":\"variations\",\"size\":\"h2\",\"className\":\"ws-title ws-h2\"}}>\n      {`Variations`}\n    </AutoLinkHeader>\n    <img src={srcImport338} {...{\"alt\":\"An animated progress bar demonstrates how a progress track fills and progress value increases as a process moves toward completion.\",\"width\":\"500\",\"height\":\"300\",\"className\":\"ws-img\"}}>\n    </img>\n    <AutoLinkHeader {...{\"id\":\"determinate-progress-bar\",\"size\":\"h3\",\"className\":\"ws-title ws-h3\"}}>\n      {`Determinate progress bar`}\n    </AutoLinkHeader>\n    <p {...{\"className\":\"ws-p\"}}>\n      {`Whenever possible, use a determinate progress bar to communicate progress with measurable values like time or percentage.`}\n    </p>\n    <p {...{\"className\":\"ws-p\"}}>\n      {`Use a percentage as a progress value if the process will take less than a minute to complete or a percentage will be more accurate than estimating a task’s duration.`}\n    </p>\n    <p {...{\"className\":\"ws-p\"}}>\n      {`Use a time interval value such as “4 minutes remaining” to communicate progress if the process takes more than one minute to complete.`}\n    </p>\n    <AutoLinkHeader {...{\"id\":\"indeterminate-progress-bar\",\"size\":\"h3\",\"className\":\"ws-title ws-h3\"}}>\n      {`Indeterminate progress bar`}\n    </AutoLinkHeader>\n    <p {...{\"className\":\"ws-p\"}}>\n      {`Avoid using indeterminate progress bars to communicate progress that can’t be measured. To track progress that can’t be quantified with a percentage, time, or step, use a `}\n      <PatternflyThemeLink {...{\"to\":\"/components/spinner\"}}>\n        {`spinner`}\n      </PatternflyThemeLink>\n      {` instead.`}\n    </p>\n    <AutoLinkHeader {...{\"id\":\"styling-for-statuses\",\"size\":\"h2\",\"className\":\"ws-title ws-h2\"}}>\n      {`Styling for statuses`}\n    </AutoLinkHeader>\n    <p {...{\"className\":\"ws-p\"}}>\n      {`Styling for progress bar statuses should follow accessibility guidelines by communicating each state through several messaging types: Color, microcopy, and icons.`}\n    </p>\n    <p {...{\"className\":\"ws-p\"}}>\n      {`Follow these general style guidelines when designing your progress bars. For information about writing progress bar titles for each status type, see the `}\n      <PatternflyThemeLink {...{\"to\":\"#content\"}}>\n        {`Content`}\n      </PatternflyThemeLink>\n      {` section.`}\n    </p>\n    <AutoLinkHeader {...{\"id\":\"in-progress\",\"size\":\"h3\",\"className\":\"ws-title ws-h3\"}}>\n      {`In progress`}\n    </AutoLinkHeader>\n    <p {...{\"className\":\"ws-p\"}}>\n      {`A blue progress bar represents a process that is currently underway.`}\n    </p>\n    <img src={srcImport339} height={srcImport339.height * 560 / srcImport339.width} {...{\"alt\":\"An example of a progress bar in an 'in progress' state, with a blue track and a title that indicates its status: 'Validating account credentials.'\",\"width\":\"560\",\"className\":\"ws-img\"}}>\n    </img>\n    <AutoLinkHeader {...{\"id\":\"error-state-or-failure\",\"size\":\"h3\",\"className\":\"ws-title ws-h3\"}}>\n      {`Error state or failure`}\n    </AutoLinkHeader>\n    <p {...{\"className\":\"ws-p\"}}>\n      {`A red progress bar represents a process that has failed. Accompany a failed progress bar with a `}\n      <PatternflyThemeLink {...{\"to\":\"/guidelines/icons/#all-icons\"}}>\n        {`red danger icon`}\n      </PatternflyThemeLink>\n      {` to demonstrate that an error occurred in the process.`}\n    </p>\n    <img src={srcImport340} height={srcImport340.height * 560 / srcImport340.width} {...{\"alt\":\"An example of a progress bar in an error or failed state, with a red track, optional danger icon, and a title that indicates its status: 'Could not validate account credentials.'\",\"width\":\"560\",\"className\":\"ws-img\"}}>\n    </img>\n    <AutoLinkHeader {...{\"id\":\"complete-or-success\",\"size\":\"h3\",\"className\":\"ws-title ws-h3\"}}>\n      {`Complete or success`}\n    </AutoLinkHeader>\n    <p {...{\"className\":\"ws-p\"}}>\n      {`A green progress bar represents the successful completion of a process. Accompany a complete progress bar with a `}\n      <PatternflyThemeLink {...{\"to\":\"/guidelines/icons/#all-icons\"}}>\n        {`green check-circle icon`}\n      </PatternflyThemeLink>\n      {` to demonstrate that the process has finished with no errors.`}\n    </p>\n    <img src={srcImport341} height={srcImport341.height * 560 / srcImport341.width} {...{\"alt\":\"An example of a progress bar in a complete or successful state, with a green track, optional check-circle icon, and a title that indicates its status: 'Validated account credentials.'\",\"width\":\"560\",\"className\":\"ws-img\"}}>\n    </img>\n    <AutoLinkHeader {...{\"id\":\"spacing-and-alignment\",\"size\":\"h2\",\"className\":\"ws-title ws-h2\"}}>\n      {`Spacing and alignment`}\n    </AutoLinkHeader>\n    <p {...{\"className\":\"ws-p\"}}>\n      {`Right-align progress value text when it’s placed above the progress track, in line with the title.`}\n    </p>\n    <img src={srcImport342} height={srcImport342.height * 560 / srcImport342.width} {...{\"alt\":\"A visual example of a progress bar with right-aligned progress value text above the progress track.\",\"width\":\"560\",\"className\":\"ws-img\"}}>\n    </img>\n    <p {...{\"className\":\"ws-p\"}}>\n      {`Left-align progress value text when it’s placed to the right of the track.`}\n    </p>\n    <img src={srcImport343} height={srcImport343.height * 616 / srcImport343.width} {...{\"alt\":\"A visual example of a progress bar with left-aligned progress value text in line with the progress track.\",\"width\":\"616\",\"className\":\"ws-img\"}}>\n    </img>\n    <p {...{\"className\":\"ws-p\"}}>\n      {`Always set an “outside fixed width measure” for determinate progress bars. This fixed spacing should solve alignment use cases in which stacked progress bar values vary in length.`}\n    </p>\n    <AutoLinkHeader {...{\"id\":\"placement\",\"size\":\"h2\",\"className\":\"ws-title ws-h2\"}}>\n      {`Placement`}\n    </AutoLinkHeader>\n    <img src={srcImport344} height={srcImport344.height * 1135 / srcImport344.width} {...{\"alt\":\"A visual example of how to successfully place a progress bar in your designs, side by side with an example of unsuccessful placement. Never isolate a progress bar above, below, or outside of its corresponding content view — always align it with its relevant content.\",\"width\":\"1135\",\"className\":\"ws-img\"}}>\n    </img>\n    <p {...{\"className\":\"ws-p\"}}>\n      {`Always place progress bars in alignment with their relevant context, such as the feature, function, or task they reflect. Keep progress bars within the user’s line of sight: Never isolate a progress bar at the top or bottom of a page, or outside of its relevant content view.`}\n    </p>\n    <p {...{\"className\":\"ws-p\"}}>\n      {`Use progress bars to communicate progress in a variety of contexts including:`}\n    </p>\n    <ul {...{\"className\":\"ws-ul\"}}>\n      <li {...{\"className\":\"ws-li\"}}>\n        <PatternflyThemeLink {...{\"to\":\"#in-a-table\"}}>\n          {`In a table`}\n        </PatternflyThemeLink>\n      </li>\n      <li {...{\"className\":\"ws-li\"}}>\n        <PatternflyThemeLink {...{\"to\":\"#in-a-dashboard-view\"}}>\n          {`In a dashboard view`}\n        </PatternflyThemeLink>\n      </li>\n      <li {...{\"className\":\"ws-li\"}}>\n        <PatternflyThemeLink {...{\"to\":\"#during-a-file-download\"}}>\n          {`During a file download`}\n        </PatternflyThemeLink>\n      </li>\n      <li {...{\"className\":\"ws-li\"}}>\n        <PatternflyThemeLink {...{\"to\":\"#in-a-wizard\"}}>\n          {`In a wizard`}\n        </PatternflyThemeLink>\n      </li>\n    </ul>\n    <AutoLinkHeader {...{\"id\":\"in-a-table\",\"size\":\"h3\",\"className\":\"ws-title ws-h3\"}}>\n      {`In a table`}\n    </AutoLinkHeader>\n    <p {...{\"className\":\"ws-p\"}}>\n      {`Use a progress bar in a table to communicate the status of processes or tasks within it.`}\n    </p>\n    <p {...{\"className\":\"ws-p\"}}>\n      {`Place a progress bar into a table just as you would other table content. If a progress bar records the progress of multiple line items, group these items in adjoining cells and keep the progress bar in-line with the first item it pertains to. For multi-item progress bars that apply to non-consecutive items, consider adding a progress bar in-line with each individual item.`}\n    </p>\n    <p {...{\"className\":\"ws-p\"}}>\n      {`If your table includes multiple progress bars, designate a “Status” or “Progress” column for each one.`}\n    </p>\n    <img src={srcImport345} height={srcImport345.height * 543 / srcImport345.width} {...{\"alt\":\"A visual example of how to successfully place progress bars in a table.\",\"width\":\"543\",\"className\":\"ws-img\"}}>\n    </img>\n    <AutoLinkHeader {...{\"id\":\"in-a-dashboard-view\",\"size\":\"h3\",\"className\":\"ws-title ws-h3\"}}>\n      {`In a dashboard view`}\n    </AutoLinkHeader>\n    <p {...{\"className\":\"ws-p\"}}>\n      {`Use a progress bar in a dashboard view to track the progress trends within each card component on a page.`}\n    </p>\n    <img src={srcImport346} height={srcImport346.height * 543 / srcImport346.width} {...{\"alt\":\"A visual example of how to successfully place progress bars in dashboard views.\",\"width\":\"543\",\"className\":\"ws-img\"}}>\n    </img>\n    <AutoLinkHeader {...{\"id\":\"during-a-file-download\",\"size\":\"h3\",\"className\":\"ws-title ws-h3\"}}>\n      {`During a file download`}\n    </AutoLinkHeader>\n    <p {...{\"className\":\"ws-p\"}}>\n      {`Use a `}\n      <PatternflyThemeLink {...{\"to\":\"/components/alert/design-guidelines/#using-toast-alerts\"}}>\n        {`toast notification`}\n      </PatternflyThemeLink>\n      {` and a progress bar to demonstrate progress during a file download.`}\n    </p>\n    <img src={srcImport347} height={srcImport347.height * 543 / srcImport347.width} {...{\"alt\":\"A visual example of how to successfully place progress bars in toast alerts to communicate progress during a file download.\",\"width\":\"543\",\"className\":\"ws-img\"}}>\n    </img>\n    <AutoLinkHeader {...{\"id\":\"in-a-wizard\",\"size\":\"h3\",\"className\":\"ws-title ws-h3\"}}>\n      {`In a wizard`}\n    </AutoLinkHeader>\n    <p {...{\"className\":\"ws-p\"}}>\n      <strong>\n        {`Never`}\n      </strong>\n      {` use a progress bar in a wizard to indicate progress through wizard steps, since a wizard’s steps sidebar already communicates this information.`}\n    </p>\n    <p {...{\"className\":\"ws-p\"}}>\n      {`Only use a progress bar in a wizard if its final validation process will take more than a few seconds. As users wait for their changes to be processed, display a progress screen that includes a progress title, progress bar, and an optional 1-2 sentence description to provide more details about the validation step or give users a better idea of how long this process might take.`}\n    </p>\n    <img src={srcImport348} height={srcImport348.height * 543 / srcImport348.width} {...{\"alt\":\"A visual example of how to successfully place a progress bar in a wizard to express a final validation process.\",\"width\":\"543\",\"className\":\"ws-img\"}}>\n    </img>\n    <p {...{\"className\":\"ws-p\"}}>\n      {`To learn more about using progress bars in wizard validation progress screens, see our `}\n      <PatternflyThemeLink {...{\"to\":\"/components/wizard/design-guidelines\"}}>\n        {`wizard guidelines`}\n      </PatternflyThemeLink>\n      {`.`}\n    </p>\n    <AutoLinkHeader {...{\"id\":\"content\",\"size\":\"h2\",\"className\":\"ws-title ws-h2\"}}>\n      {`Content`}\n    </AutoLinkHeader>\n    <p {...{\"className\":\"ws-p\"}}>\n      {`Progress bars should be self-explanatory and therefore include minimal written content: A title and an optional progress value.`}\n    </p>\n    <p {...{\"className\":\"ws-p\"}}>\n      {`In some use cases, longer progress bars might feature multiple lines of copy that change as a process moves through several phases. Default to one title per progress bar, unless your progress bar measures a multi-step process or procedure that isn’t detailed elsewhere.`}\n    </p>\n    <AutoLinkHeader {...{\"id\":\"titles\",\"size\":\"h3\",\"className\":\"ws-title ws-h3\"}}>\n      {`Titles`}\n    </AutoLinkHeader>\n    <p {...{\"className\":\"ws-p\"}}>\n      {`Keep progress bar titles short and specific, between 1-3 words. Use verbs that clearly communicate each process and avoid using generalizations like “This may take a few minutes.”`}\n    </p>\n    <p {...{\"className\":\"ws-p\"}}>\n      {`Never punctuate progress bar titles, since they consist of fragments, not full sentences. Avoid using ellipses to communicate a loading state — progress bars indicate a process is “in progress” on their own.`}\n    </p>\n    <div className=\"ws-content-table\">\n      <table {...{\"className\":\"ws-table pf-c-table pf-m-grid-lg pf-m-compact\",\"role\":\"grid\"}}>\n        <thead>\n          <tr {...{\"role\":\"row\"}}>\n            <th {...{\"align\":\"center\",\"className\":\" pf-m-wrap\",\"role\":\"columnheader\",\"scope\":\"col\"}}>\n              <div>\n                <strong>\n                  {`Do`}\n                </strong>\n              </div>\n            </th>\n            <th {...{\"align\":\"center\",\"className\":\" pf-m-wrap\",\"role\":\"columnheader\",\"scope\":\"col\"}}>\n              <div>\n                <strong>\n                  {`Don't`}\n                </strong>\n              </div>\n            </th>\n          </tr>\n        </thead>\n        <tbody {...{\"role\":\"rowgroup\"}}>\n          <tr {...{\"role\":\"row\"}}>\n            <td {...{\"align\":\"center\",\"role\":\"cell\",\"data-label\":\"Do\"}}>\n              <div>\n                {`Downloading `}\n                {`[application name]`}\n              </div>\n            </td>\n            <td {...{\"align\":\"center\",\"role\":\"cell\",\"data-label\":\"Don't\"}}>\n              <div>\n                {`Your application is downloading...`}\n              </div>\n            </td>\n          </tr>\n          <tr {...{\"role\":\"row\"}}>\n            <td {...{\"align\":\"center\",\"role\":\"cell\",\"data-label\":\"Do\"}}>\n              <div>\n                {`Creating cache`}\n              </div>\n            </td>\n            <td {...{\"align\":\"center\",\"role\":\"cell\",\"data-label\":\"Don't\"}}>\n              <div>\n                {`This may take a few minutes...`}\n              </div>\n            </td>\n          </tr>\n          <tr {...{\"role\":\"row\"}}>\n            <td {...{\"align\":\"center\",\"role\":\"cell\",\"data-label\":\"Do\"}}>\n              <div>\n                {`Validating account credentials`}\n              </div>\n            </td>\n            <td {...{\"align\":\"center\",\"role\":\"cell\",\"data-label\":\"Don't\"}}>\n              <div>\n                {`We're validating your account credentials`}\n              </div>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n</div>\n    <p {...{\"className\":\"ws-p\"}}>\n      {`In addition to status styling, use verb tense to communicate the state of a process: In progress, failed, or complete.`}\n    </p>\n    <p {...{\"className\":\"ws-p\"}}>\n      {`For `}\n      <strong>\n        {`in progress`}\n      </strong>\n      {` statuses, write your progress bar title with present participles (—ing) to share that a process is underway. Avoid passive voice by starting each title with the present participle (\"-ing\") form of your task’s verb.`}\n    </p>\n    <div className=\"ws-content-table\">\n      <table {...{\"className\":\"ws-table pf-c-table pf-m-grid-lg pf-m-compact\",\"role\":\"grid\"}}>\n        <thead>\n          <tr {...{\"role\":\"row\"}}>\n            <th {...{\"align\":\"center\",\"className\":\" pf-m-wrap\",\"role\":\"columnheader\",\"scope\":\"col\"}}>\n              <div>\n                <strong>\n                  {`Do`}\n                </strong>\n              </div>\n            </th>\n            <th {...{\"align\":\"center\",\"className\":\" pf-m-wrap\",\"role\":\"columnheader\",\"scope\":\"col\"}}>\n              <div>\n                <strong>\n                  {`Don't`}\n                </strong>\n              </div>\n            </th>\n          </tr>\n        </thead>\n        <tbody {...{\"role\":\"rowgroup\"}}>\n          <tr {...{\"role\":\"row\"}}>\n            <td {...{\"align\":\"center\",\"role\":\"cell\",\"data-label\":\"Do\"}}>\n              <div>\n                {`Installing cluster`}\n              </div>\n            </td>\n            <td {...{\"align\":\"center\",\"role\":\"cell\",\"data-label\":\"Don't\"}}>\n              <div>\n                {`Cluster is installing`}\n              </div>\n            </td>\n          </tr>\n          <tr {...{\"role\":\"row\"}}>\n            <td {...{\"align\":\"center\",\"role\":\"cell\",\"data-label\":\"Do\"}}>\n              <div>\n                {`Creating cache`}\n              </div>\n            </td>\n            <td {...{\"align\":\"center\",\"role\":\"cell\",\"data-label\":\"Don't\"}}>\n              <div>\n                {`Cluster creation in progress`}\n              </div>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n</div>\n    <p {...{\"className\":\"ws-p\"}}>\n      {`For `}\n      <strong>\n        {`failed`}\n      </strong>\n      {` statuses, write your progress bar title in past tense. Avoid telling users a process “failed” in favor of providing a more specific description.`}\n    </p>\n    <div className=\"ws-content-table\">\n      <table {...{\"className\":\"ws-table pf-c-table pf-m-grid-lg pf-m-compact\",\"role\":\"grid\"}}>\n        <thead>\n          <tr {...{\"role\":\"row\"}}>\n            <th {...{\"align\":\"center\",\"className\":\" pf-m-wrap\",\"role\":\"columnheader\",\"scope\":\"col\"}}>\n              <div>\n                <strong>\n                  {`Do`}\n                </strong>\n              </div>\n            </th>\n            <th {...{\"align\":\"center\",\"className\":\" pf-m-wrap\",\"role\":\"columnheader\",\"scope\":\"col\"}}>\n              <div>\n                <strong>\n                  {`Don't`}\n                </strong>\n              </div>\n            </th>\n          </tr>\n        </thead>\n        <tbody {...{\"role\":\"rowgroup\"}}>\n          <tr {...{\"role\":\"row\"}}>\n            <td {...{\"align\":\"center\",\"role\":\"cell\",\"data-label\":\"Do\"}}>\n              <div>\n                {`Could not install cluster`}\n              </div>\n            </td>\n            <td {...{\"align\":\"center\",\"role\":\"cell\",\"data-label\":\"Don't\"}}>\n              <div>\n                {`Cluster installation failed`}\n              </div>\n            </td>\n          </tr>\n          <tr {...{\"role\":\"row\"}}>\n            <td {...{\"align\":\"center\",\"role\":\"cell\",\"data-label\":\"Do\"}}>\n              <div>\n                {`Could not validate account credentials`}\n              </div>\n            </td>\n            <td {...{\"align\":\"center\",\"role\":\"cell\",\"data-label\":\"Don't\"}}>\n              <div>\n                {`Account validation unsuccessful`}\n              </div>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n</div>\n    <p {...{\"className\":\"ws-p\"}}>\n      {`For `}\n      <strong>\n        {`complete`}\n      </strong>\n      {` statuses, write your progress bar title in past tense. Use this brief line to confirm that a process or task succeeded. Avoid using adverbs like “successfully” by simply stating the action happened.`}\n    </p>\n    <div className=\"ws-content-table\">\n      <table {...{\"className\":\"ws-table pf-c-table pf-m-grid-lg pf-m-compact\",\"role\":\"grid\"}}>\n        <thead>\n          <tr {...{\"role\":\"row\"}}>\n            <th {...{\"align\":\"center\",\"className\":\" pf-m-wrap\",\"role\":\"columnheader\",\"scope\":\"col\"}}>\n              <div>\n                <strong>\n                  {`Do`}\n                </strong>\n              </div>\n            </th>\n            <th {...{\"align\":\"center\",\"className\":\" pf-m-wrap\",\"role\":\"columnheader\",\"scope\":\"col\"}}>\n              <div>\n                <strong>\n                  {`Don't`}\n                </strong>\n              </div>\n            </th>\n          </tr>\n        </thead>\n        <tbody {...{\"role\":\"rowgroup\"}}>\n          <tr {...{\"role\":\"row\"}}>\n            <td {...{\"align\":\"center\",\"role\":\"cell\",\"data-label\":\"Do\"}}>\n              <div>\n                {`Cluster installed`}\n              </div>\n            </td>\n            <td {...{\"align\":\"center\",\"role\":\"cell\",\"data-label\":\"Don't\"}}>\n              <div>\n                {`Installation is complete`}\n              </div>\n            </td>\n          </tr>\n          <tr {...{\"role\":\"row\"}}>\n            <td {...{\"align\":\"center\",\"role\":\"cell\",\"data-label\":\"Do\"}}>\n              <div>\n                {`Validated account credentials`}\n              </div>\n            </td>\n            <td {...{\"align\":\"center\",\"role\":\"cell\",\"data-label\":\"Don't\"}}>\n              <div>\n                {`Successfully validated account credentials`}\n              </div>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n</div>\n    <p {...{\"className\":\"ws-p\"}}>\n      {`Progress bars should only use content in their title and progress value. Never write additional content inside the progress track.`}\n    </p>\n  </React.Fragment>\n);\nComponent.displayName = 'ComponentsProgressDesignGuidelinesDocs';\nComponent.pageData = pageData;\n\nexport default Component;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}