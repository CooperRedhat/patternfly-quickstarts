{"ast":null,"code":"function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport { AutoLinkHeader, Example, Link as PatternflyThemeLink } from 'theme-patternfly-org/components';\nimport CubesIcon from '@patternfly/react-icons/dist/esm/icons/cubes-icon';\nimport SearchIcon from '@patternfly/react-icons/dist/esm/icons/search-icon';\nvar pageData = {\n  \"id\": \"Empty state\",\n  \"section\": \"components\",\n  \"source\": \"react\",\n  \"slug\": \"/components/empty-state/react\",\n  \"sourceLink\": \"https://github.com/patternfly/patternfly-react/blob/main/packages/docs/packages/react-core/src/components/EmptyState/examples/EmptyState.md\",\n  \"propComponents\": [{\n    \"name\": \"EmptyState\",\n    \"description\": \"\",\n    \"props\": [{\n      \"name\": \"children\",\n      \"type\": \"React.ReactNode\",\n      \"description\": \"Content rendered inside the EmptyState\",\n      \"required\": true\n    }, {\n      \"name\": \"className\",\n      \"type\": \"string\",\n      \"description\": \"Additional classes added to the EmptyState\",\n      \"defaultValue\": \"''\"\n    }, {\n      \"name\": \"isFullHeight\",\n      \"type\": \"boolean\",\n      \"description\": \"Cause component to consume the available height of its container\"\n    }, {\n      \"name\": \"variant\",\n      \"type\": \"'xs' | 'small' | 'large' | 'xl' | 'full'\",\n      \"description\": \"Modifies EmptyState max-width\",\n      \"defaultValue\": \"EmptyStateVariant.full\"\n    }]\n  }, {\n    \"name\": \"EmptyStateBody\",\n    \"description\": \"\",\n    \"props\": [{\n      \"name\": \"children\",\n      \"type\": \"React.ReactNode\",\n      \"description\": \"Content rendered inside the EmptyState\"\n    }, {\n      \"name\": \"className\",\n      \"type\": \"string\",\n      \"description\": \"Additional classes added to the EmptyState\",\n      \"defaultValue\": \"''\"\n    }]\n  }, {\n    \"name\": \"EmptyStateIcon\",\n    \"description\": \"\",\n    \"props\": [{\n      \"name\": \"className\",\n      \"type\": \"string\",\n      \"description\": \"Additional classes added to the EmptyState\",\n      \"defaultValue\": \"''\"\n    }, {\n      \"name\": \"color\",\n      \"type\": \"string\",\n      \"description\": \"Changes the color of the icon.\"\n    }, {\n      \"name\": \"component\",\n      \"type\": \"React.ComponentType<any>\",\n      \"description\": \"Component to be rendered inside the EmptyState on container variant\"\n    }, {\n      \"name\": \"icon\",\n      \"type\": \"React.ComponentType<any>\",\n      \"description\": \"Icon component to be rendered inside the EmptyState on icon variant\\nUsually a CheckCircleIcon, ExclamationCircleIcon, LockIcon, PlusCircleIcon, RocketIcon\\nSearchIcon, or WrenchIcon\"\n    }, {\n      \"name\": \"variant\",\n      \"type\": \"'icon' | 'container'\",\n      \"description\": \"Adds empty state icon variant styles\",\n      \"defaultValue\": \"'icon'\"\n    }]\n  }, {\n    \"name\": \"EmptyStateSecondaryActions\",\n    \"description\": \"\",\n    \"props\": [{\n      \"name\": \"children\",\n      \"type\": \"React.ReactNode\",\n      \"description\": \"Content rendered inside the EmptyState\",\n      \"defaultValue\": \"null\"\n    }, {\n      \"name\": \"className\",\n      \"type\": \"string\",\n      \"description\": \"Additional classes added to the EmptyState\",\n      \"defaultValue\": \"''\"\n    }]\n  }],\n  \"cssPrefix\": [\"pf-c-empty-state\"],\n  \"examples\": [\"Basic\", \"Extra small\", \"Small\", \"Large\", \"Extra large\", \"Spinner\", \"No match found\"]\n};\npageData.liveContext = {\n  CubesIcon: CubesIcon,\n  SearchIcon: SearchIcon\n};\npageData.examples = {\n  'Basic': function Basic(props) {\n    return /*#__PURE__*/React.createElement(Example, _extends({}, pageData, props, {\n      \"code\": \"import React from 'react';\\nimport {\\n  Title,\\n  Button,\\n  EmptyState,\\n  EmptyStateIcon,\\n  EmptyStateBody,\\n  EmptyStateSecondaryActions\\n} from '@patternfly/react-core';\\nimport CubesIcon from '@patternfly/react-icons/dist/esm/icons/cubes-icon';\\n\\nconst Basic = () => (\\n  <EmptyState>\\n    <EmptyStateIcon icon={CubesIcon} />\\n    <Title headingLevel=\\\"h4\\\" size=\\\"lg\\\">\\n      Empty state\\n    </Title>\\n    <EmptyStateBody>\\n      This represents an the empty state pattern in Patternfly 4. Hopefully it's simple enough to use but flexible\\n      enough to meet a variety of needs.\\n    </EmptyStateBody>\\n    <Button variant=\\\"primary\\\">Primary action</Button>\\n    <EmptyStateSecondaryActions>\\n      <Button variant=\\\"link\\\">Multiple</Button>\\n      <Button variant=\\\"link\\\">Action Buttons</Button>\\n      <Button variant=\\\"link\\\">Can</Button>\\n      <Button variant=\\\"link\\\">Go here</Button>\\n      <Button variant=\\\"link\\\">In the secondary</Button>\\n      <Button variant=\\\"link\\\">Action area</Button>\\n    </EmptyStateSecondaryActions>\\n  </EmptyState>\\n)\",\n      \"title\": \"Basic\",\n      \"lang\": \"js\"\n    }));\n  },\n  'Extra small': function ExtraSmall(props) {\n    return /*#__PURE__*/React.createElement(Example, _extends({}, pageData, props, {\n      \"code\": \"import React from 'react';\\nimport {\\n  Title,\\n  Button,\\n  EmptyState,\\n  EmptyStateVariant,\\n  EmptyStateBody,\\n  EmptyStateSecondaryActions\\n} from '@patternfly/react-core';\\n\\nconst ExtraSmall = () => (\\n  <EmptyState variant={EmptyStateVariant.xs}>\\n    <Title headingLevel=\\\"h4\\\" size=\\\"md\\\">\\n      Empty state\\n    </Title>\\n    <EmptyStateBody>\\n      This represents an the empty state pattern in Patternfly 4. Hopefully it's simple enough to use but flexible\\n      enough to meet a variety of needs.\\n    </EmptyStateBody>\\n    <EmptyStateSecondaryActions>\\n      <Button variant=\\\"link\\\">Multiple</Button>\\n      <Button variant=\\\"link\\\">Action Buttons</Button>\\n      <Button variant=\\\"link\\\">Can</Button>\\n      <Button variant=\\\"link\\\">Go here</Button>\\n      <Button variant=\\\"link\\\">In the secondary</Button>\\n      <Button variant=\\\"link\\\">Action area</Button>\\n    </EmptyStateSecondaryActions>\\n  </EmptyState>\\n)\",\n      \"title\": \"Extra small\",\n      \"lang\": \"js\"\n    }));\n  },\n  'Small': function Small(props) {\n    return /*#__PURE__*/React.createElement(Example, _extends({}, pageData, props, {\n      \"code\": \"import React from 'react';\\nimport {\\n  Title,\\n  Button,\\n  EmptyState,\\n  EmptyStateVariant,\\n  EmptyStateIcon,\\n  EmptyStateBody,\\n  EmptyStateSecondaryActions\\n} from '@patternfly/react-core';\\nimport CubesIcon from '@patternfly/react-icons/dist/esm/icons/cubes-icon';\\n\\nconst Small = () => (\\n  <EmptyState variant={EmptyStateVariant.small}>\\n    <EmptyStateIcon icon={CubesIcon} />\\n    <Title headingLevel=\\\"h4\\\" size=\\\"lg\\\">\\n      Empty state\\n    </Title>\\n    <EmptyStateBody>\\n      This represents an the empty state pattern in Patternfly 4. Hopefully it's simple enough to use but flexible\\n      enough to meet a variety of needs.\\n    </EmptyStateBody>\\n    <Button variant=\\\"primary\\\">Primary action</Button>\\n    <EmptyStateSecondaryActions>\\n      <Button variant=\\\"link\\\">Multiple</Button>\\n      <Button variant=\\\"link\\\">Action Buttons</Button>\\n      <Button variant=\\\"link\\\">Can</Button>\\n      <Button variant=\\\"link\\\">Go here</Button>\\n      <Button variant=\\\"link\\\">In the secondary</Button>\\n      <Button variant=\\\"link\\\">Action area</Button>\\n    </EmptyStateSecondaryActions>\\n  </EmptyState>\\n)\",\n      \"title\": \"Small\",\n      \"lang\": \"js\"\n    }));\n  },\n  'Large': function Large(props) {\n    return /*#__PURE__*/React.createElement(Example, _extends({}, pageData, props, {\n      \"code\": \"import React from 'react';\\nimport {\\n  Title,\\n  Button,\\n  EmptyState,\\n  EmptyStateVariant,\\n  EmptyStateIcon,\\n  EmptyStateBody,\\n  EmptyStateSecondaryActions\\n} from '@patternfly/react-core';\\nimport CubesIcon from '@patternfly/react-icons/dist/esm/icons/cubes-icon';\\n\\nconst Large = () => (\\n  <EmptyState variant={EmptyStateVariant.large}>\\n    <EmptyStateIcon icon={CubesIcon} />\\n    <Title headingLevel=\\\"h4\\\" size=\\\"lg\\\">\\n      Empty state\\n    </Title>\\n    <EmptyStateBody>\\n      This represents an the empty state pattern in Patternfly 4. Hopefully it's simple enough to use but flexible\\n      enough to meet a variety of needs.\\n    </EmptyStateBody>\\n    <Button variant=\\\"primary\\\">Primary action</Button>\\n    <EmptyStateSecondaryActions>\\n      <Button variant=\\\"link\\\">Multiple</Button>\\n      <Button variant=\\\"link\\\">Action Buttons</Button>\\n      <Button variant=\\\"link\\\">Can</Button>\\n      <Button variant=\\\"link\\\">Go here</Button>\\n      <Button variant=\\\"link\\\">In the secondary</Button>\\n      <Button variant=\\\"link\\\">Action area</Button>\\n    </EmptyStateSecondaryActions>\\n  </EmptyState>\\n)\",\n      \"title\": \"Large\",\n      \"lang\": \"js\"\n    }));\n  },\n  'Extra large': function ExtraLarge(props) {\n    return /*#__PURE__*/React.createElement(Example, _extends({}, pageData, props, {\n      \"code\": \"import React from 'react';\\nimport {\\n  Title,\\n  Button,\\n  EmptyState,\\n  EmptyStateVariant,\\n  EmptyStateIcon,\\n  EmptyStateBody,\\n  EmptyStateSecondaryActions\\n} from '@patternfly/react-core';\\nimport CubesIcon from '@patternfly/react-icons/dist/esm/icons/cubes-icon';\\n\\nconst ExtraLarge = () => (\\n  <EmptyState variant={EmptyStateVariant.xl}>\\n    <EmptyStateIcon icon={CubesIcon} />\\n    <Title headingLevel=\\\"h5\\\" size=\\\"4xl\\\">\\n      Empty state\\n    </Title>\\n    <EmptyStateBody>\\n      This represents an the empty state pattern in Patternfly 4. Hopefully it's simple enough to use but flexible\\n      enough to meet a variety of needs.\\n    </EmptyStateBody>\\n    <Button variant=\\\"primary\\\">Primary action</Button>\\n    <EmptyStateSecondaryActions>\\n      <Button variant=\\\"link\\\">Multiple</Button>\\n      <Button variant=\\\"link\\\">Action Buttons</Button>\\n      <Button variant=\\\"link\\\">Can</Button>\\n      <Button variant=\\\"link\\\">Go here</Button>\\n      <Button variant=\\\"link\\\">In the secondary</Button>\\n      <Button variant=\\\"link\\\">Action area</Button>\\n    </EmptyStateSecondaryActions>\\n  </EmptyState>\\n)\",\n      \"title\": \"Extra large\",\n      \"lang\": \"js\"\n    }));\n  },\n  'Spinner': function Spinner(props) {\n    return /*#__PURE__*/React.createElement(Example, _extends({}, pageData, props, {\n      \"code\": \"import React from 'react';\\nimport {\\n  Title,\\n  EmptyState,\\n  EmptyStateIcon,\\n  Spinner\\n} from '@patternfly/react-core';\\n\\n\\nEmptyStateSpinner = () => {\\n  return (\\n    <EmptyState>\\n      <EmptyStateIcon variant=\\\"container\\\" component={Spinner} />\\n      <Title size=\\\"lg\\\" headingLevel=\\\"h4\\\">\\n        Loading\\n      </Title>\\n    </EmptyState>\\n  );\\n}\",\n      \"title\": \"Spinner\",\n      \"lang\": \"js\"\n    }));\n  },\n  'No match found': function NoMatchFound(props) {\n    return /*#__PURE__*/React.createElement(Example, _extends({}, pageData, props, {\n      \"code\": \"import React from 'react';\\nimport {\\n  Title,\\n  Button,\\n  EmptyState,\\n  EmptyStatePrimary,\\n  EmptyStateIcon,\\n  EmptyStateBody\\n} from '@patternfly/react-core';\\nimport SearchIcon from '@patternfly/react-icons/dist/esm/icons/search-icon';\\n\\n\\nconst NoMatchFound = () => (\\n  <EmptyState>\\n    <EmptyStateIcon icon={SearchIcon} />\\n    <Title size=\\\"lg\\\" headingLevel=\\\"h4\\\">\\n      No results found\\n    </Title>\\n    <EmptyStateBody>\\n      No results match the filter criteria. Clear all filters and try again.\\n    </EmptyStateBody>\\n    <EmptyStatePrimary>\\n      <Button variant=\\\"link\\\">Clear all filters</Button>\\n    </EmptyStatePrimary>\\n  </EmptyState>\\n)\",\n      \"title\": \"No match found\",\n      \"lang\": \"js\"\n    }));\n  }\n};\n\nvar Component = function Component() {\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(AutoLinkHeader, {\n    \"id\": \"examples\",\n    \"size\": \"h2\",\n    \"className\": \"ws-title ws-h2\"\n  }, \"Examples\"), React.createElement(pageData.examples[\"Basic\"]), React.createElement(pageData.examples[\"Extra small\"]), React.createElement(pageData.examples[\"Small\"]), React.createElement(pageData.examples[\"Large\"]), React.createElement(pageData.examples[\"Extra large\"]), React.createElement(pageData.examples[\"Spinner\"]), React.createElement(pageData.examples[\"No match found\"]));\n};\n\nComponent.displayName = 'ComponentsEmptyStateReactDocs';\nComponent.pageData = pageData;\nexport default Component;","map":{"version":3,"names":["React","AutoLinkHeader","Example","Link","PatternflyThemeLink","CubesIcon","SearchIcon","pageData","liveContext","examples","props","Component","createElement","displayName"],"sources":["/Users/jschuler/Code/patternfly-quickstarts/packages/docs/src/generated/components/empty-state/react.js"],"sourcesContent":["import React from 'react';\nimport { AutoLinkHeader, Example, Link as PatternflyThemeLink } from 'theme-patternfly-org/components';\nimport CubesIcon from '@patternfly/react-icons/dist/esm/icons/cubes-icon';\nimport SearchIcon from '@patternfly/react-icons/dist/esm/icons/search-icon';\nconst pageData = {\n  \"id\": \"Empty state\",\n  \"section\": \"components\",\n  \"source\": \"react\",\n  \"slug\": \"/components/empty-state/react\",\n  \"sourceLink\": \"https://github.com/patternfly/patternfly-react/blob/main/packages/docs/packages/react-core/src/components/EmptyState/examples/EmptyState.md\",\n  \"propComponents\": [\n    {\n      \"name\": \"EmptyState\",\n      \"description\": \"\",\n      \"props\": [\n        {\n          \"name\": \"children\",\n          \"type\": \"React.ReactNode\",\n          \"description\": \"Content rendered inside the EmptyState\",\n          \"required\": true\n        },\n        {\n          \"name\": \"className\",\n          \"type\": \"string\",\n          \"description\": \"Additional classes added to the EmptyState\",\n          \"defaultValue\": \"''\"\n        },\n        {\n          \"name\": \"isFullHeight\",\n          \"type\": \"boolean\",\n          \"description\": \"Cause component to consume the available height of its container\"\n        },\n        {\n          \"name\": \"variant\",\n          \"type\": \"'xs' | 'small' | 'large' | 'xl' | 'full'\",\n          \"description\": \"Modifies EmptyState max-width\",\n          \"defaultValue\": \"EmptyStateVariant.full\"\n        }\n      ]\n    },\n    {\n      \"name\": \"EmptyStateBody\",\n      \"description\": \"\",\n      \"props\": [\n        {\n          \"name\": \"children\",\n          \"type\": \"React.ReactNode\",\n          \"description\": \"Content rendered inside the EmptyState\"\n        },\n        {\n          \"name\": \"className\",\n          \"type\": \"string\",\n          \"description\": \"Additional classes added to the EmptyState\",\n          \"defaultValue\": \"''\"\n        }\n      ]\n    },\n    {\n      \"name\": \"EmptyStateIcon\",\n      \"description\": \"\",\n      \"props\": [\n        {\n          \"name\": \"className\",\n          \"type\": \"string\",\n          \"description\": \"Additional classes added to the EmptyState\",\n          \"defaultValue\": \"''\"\n        },\n        {\n          \"name\": \"color\",\n          \"type\": \"string\",\n          \"description\": \"Changes the color of the icon.\"\n        },\n        {\n          \"name\": \"component\",\n          \"type\": \"React.ComponentType<any>\",\n          \"description\": \"Component to be rendered inside the EmptyState on container variant\"\n        },\n        {\n          \"name\": \"icon\",\n          \"type\": \"React.ComponentType<any>\",\n          \"description\": \"Icon component to be rendered inside the EmptyState on icon variant\\nUsually a CheckCircleIcon, ExclamationCircleIcon, LockIcon, PlusCircleIcon, RocketIcon\\nSearchIcon, or WrenchIcon\"\n        },\n        {\n          \"name\": \"variant\",\n          \"type\": \"'icon' | 'container'\",\n          \"description\": \"Adds empty state icon variant styles\",\n          \"defaultValue\": \"'icon'\"\n        }\n      ]\n    },\n    {\n      \"name\": \"EmptyStateSecondaryActions\",\n      \"description\": \"\",\n      \"props\": [\n        {\n          \"name\": \"children\",\n          \"type\": \"React.ReactNode\",\n          \"description\": \"Content rendered inside the EmptyState\",\n          \"defaultValue\": \"null\"\n        },\n        {\n          \"name\": \"className\",\n          \"type\": \"string\",\n          \"description\": \"Additional classes added to the EmptyState\",\n          \"defaultValue\": \"''\"\n        }\n      ]\n    }\n  ],\n  \"cssPrefix\": [\n    \"pf-c-empty-state\"\n  ],\n  \"examples\": [\n    \"Basic\",\n    \"Extra small\",\n    \"Small\",\n    \"Large\",\n    \"Extra large\",\n    \"Spinner\",\n    \"No match found\"\n  ]\n};\npageData.liveContext = {\n  CubesIcon,\n  SearchIcon\n};\npageData.examples = {\n  'Basic': props => \n    <Example {...pageData} {...props} {...{\"code\":\"import React from 'react';\\nimport {\\n  Title,\\n  Button,\\n  EmptyState,\\n  EmptyStateIcon,\\n  EmptyStateBody,\\n  EmptyStateSecondaryActions\\n} from '@patternfly/react-core';\\nimport CubesIcon from '@patternfly/react-icons/dist/esm/icons/cubes-icon';\\n\\nconst Basic = () => (\\n  <EmptyState>\\n    <EmptyStateIcon icon={CubesIcon} />\\n    <Title headingLevel=\\\"h4\\\" size=\\\"lg\\\">\\n      Empty state\\n    </Title>\\n    <EmptyStateBody>\\n      This represents an the empty state pattern in Patternfly 4. Hopefully it's simple enough to use but flexible\\n      enough to meet a variety of needs.\\n    </EmptyStateBody>\\n    <Button variant=\\\"primary\\\">Primary action</Button>\\n    <EmptyStateSecondaryActions>\\n      <Button variant=\\\"link\\\">Multiple</Button>\\n      <Button variant=\\\"link\\\">Action Buttons</Button>\\n      <Button variant=\\\"link\\\">Can</Button>\\n      <Button variant=\\\"link\\\">Go here</Button>\\n      <Button variant=\\\"link\\\">In the secondary</Button>\\n      <Button variant=\\\"link\\\">Action area</Button>\\n    </EmptyStateSecondaryActions>\\n  </EmptyState>\\n)\",\"title\":\"Basic\",\"lang\":\"js\"}}>\n      \n    </Example>,\n  'Extra small': props => \n    <Example {...pageData} {...props} {...{\"code\":\"import React from 'react';\\nimport {\\n  Title,\\n  Button,\\n  EmptyState,\\n  EmptyStateVariant,\\n  EmptyStateBody,\\n  EmptyStateSecondaryActions\\n} from '@patternfly/react-core';\\n\\nconst ExtraSmall = () => (\\n  <EmptyState variant={EmptyStateVariant.xs}>\\n    <Title headingLevel=\\\"h4\\\" size=\\\"md\\\">\\n      Empty state\\n    </Title>\\n    <EmptyStateBody>\\n      This represents an the empty state pattern in Patternfly 4. Hopefully it's simple enough to use but flexible\\n      enough to meet a variety of needs.\\n    </EmptyStateBody>\\n    <EmptyStateSecondaryActions>\\n      <Button variant=\\\"link\\\">Multiple</Button>\\n      <Button variant=\\\"link\\\">Action Buttons</Button>\\n      <Button variant=\\\"link\\\">Can</Button>\\n      <Button variant=\\\"link\\\">Go here</Button>\\n      <Button variant=\\\"link\\\">In the secondary</Button>\\n      <Button variant=\\\"link\\\">Action area</Button>\\n    </EmptyStateSecondaryActions>\\n  </EmptyState>\\n)\",\"title\":\"Extra small\",\"lang\":\"js\"}}>\n      \n    </Example>,\n  'Small': props => \n    <Example {...pageData} {...props} {...{\"code\":\"import React from 'react';\\nimport {\\n  Title,\\n  Button,\\n  EmptyState,\\n  EmptyStateVariant,\\n  EmptyStateIcon,\\n  EmptyStateBody,\\n  EmptyStateSecondaryActions\\n} from '@patternfly/react-core';\\nimport CubesIcon from '@patternfly/react-icons/dist/esm/icons/cubes-icon';\\n\\nconst Small = () => (\\n  <EmptyState variant={EmptyStateVariant.small}>\\n    <EmptyStateIcon icon={CubesIcon} />\\n    <Title headingLevel=\\\"h4\\\" size=\\\"lg\\\">\\n      Empty state\\n    </Title>\\n    <EmptyStateBody>\\n      This represents an the empty state pattern in Patternfly 4. Hopefully it's simple enough to use but flexible\\n      enough to meet a variety of needs.\\n    </EmptyStateBody>\\n    <Button variant=\\\"primary\\\">Primary action</Button>\\n    <EmptyStateSecondaryActions>\\n      <Button variant=\\\"link\\\">Multiple</Button>\\n      <Button variant=\\\"link\\\">Action Buttons</Button>\\n      <Button variant=\\\"link\\\">Can</Button>\\n      <Button variant=\\\"link\\\">Go here</Button>\\n      <Button variant=\\\"link\\\">In the secondary</Button>\\n      <Button variant=\\\"link\\\">Action area</Button>\\n    </EmptyStateSecondaryActions>\\n  </EmptyState>\\n)\",\"title\":\"Small\",\"lang\":\"js\"}}>\n      \n    </Example>,\n  'Large': props => \n    <Example {...pageData} {...props} {...{\"code\":\"import React from 'react';\\nimport {\\n  Title,\\n  Button,\\n  EmptyState,\\n  EmptyStateVariant,\\n  EmptyStateIcon,\\n  EmptyStateBody,\\n  EmptyStateSecondaryActions\\n} from '@patternfly/react-core';\\nimport CubesIcon from '@patternfly/react-icons/dist/esm/icons/cubes-icon';\\n\\nconst Large = () => (\\n  <EmptyState variant={EmptyStateVariant.large}>\\n    <EmptyStateIcon icon={CubesIcon} />\\n    <Title headingLevel=\\\"h4\\\" size=\\\"lg\\\">\\n      Empty state\\n    </Title>\\n    <EmptyStateBody>\\n      This represents an the empty state pattern in Patternfly 4. Hopefully it's simple enough to use but flexible\\n      enough to meet a variety of needs.\\n    </EmptyStateBody>\\n    <Button variant=\\\"primary\\\">Primary action</Button>\\n    <EmptyStateSecondaryActions>\\n      <Button variant=\\\"link\\\">Multiple</Button>\\n      <Button variant=\\\"link\\\">Action Buttons</Button>\\n      <Button variant=\\\"link\\\">Can</Button>\\n      <Button variant=\\\"link\\\">Go here</Button>\\n      <Button variant=\\\"link\\\">In the secondary</Button>\\n      <Button variant=\\\"link\\\">Action area</Button>\\n    </EmptyStateSecondaryActions>\\n  </EmptyState>\\n)\",\"title\":\"Large\",\"lang\":\"js\"}}>\n      \n    </Example>,\n  'Extra large': props => \n    <Example {...pageData} {...props} {...{\"code\":\"import React from 'react';\\nimport {\\n  Title,\\n  Button,\\n  EmptyState,\\n  EmptyStateVariant,\\n  EmptyStateIcon,\\n  EmptyStateBody,\\n  EmptyStateSecondaryActions\\n} from '@patternfly/react-core';\\nimport CubesIcon from '@patternfly/react-icons/dist/esm/icons/cubes-icon';\\n\\nconst ExtraLarge = () => (\\n  <EmptyState variant={EmptyStateVariant.xl}>\\n    <EmptyStateIcon icon={CubesIcon} />\\n    <Title headingLevel=\\\"h5\\\" size=\\\"4xl\\\">\\n      Empty state\\n    </Title>\\n    <EmptyStateBody>\\n      This represents an the empty state pattern in Patternfly 4. Hopefully it's simple enough to use but flexible\\n      enough to meet a variety of needs.\\n    </EmptyStateBody>\\n    <Button variant=\\\"primary\\\">Primary action</Button>\\n    <EmptyStateSecondaryActions>\\n      <Button variant=\\\"link\\\">Multiple</Button>\\n      <Button variant=\\\"link\\\">Action Buttons</Button>\\n      <Button variant=\\\"link\\\">Can</Button>\\n      <Button variant=\\\"link\\\">Go here</Button>\\n      <Button variant=\\\"link\\\">In the secondary</Button>\\n      <Button variant=\\\"link\\\">Action area</Button>\\n    </EmptyStateSecondaryActions>\\n  </EmptyState>\\n)\",\"title\":\"Extra large\",\"lang\":\"js\"}}>\n      \n    </Example>,\n  'Spinner': props => \n    <Example {...pageData} {...props} {...{\"code\":\"import React from 'react';\\nimport {\\n  Title,\\n  EmptyState,\\n  EmptyStateIcon,\\n  Spinner\\n} from '@patternfly/react-core';\\n\\n\\nEmptyStateSpinner = () => {\\n  return (\\n    <EmptyState>\\n      <EmptyStateIcon variant=\\\"container\\\" component={Spinner} />\\n      <Title size=\\\"lg\\\" headingLevel=\\\"h4\\\">\\n        Loading\\n      </Title>\\n    </EmptyState>\\n  );\\n}\",\"title\":\"Spinner\",\"lang\":\"js\"}}>\n      \n    </Example>,\n  'No match found': props => \n    <Example {...pageData} {...props} {...{\"code\":\"import React from 'react';\\nimport {\\n  Title,\\n  Button,\\n  EmptyState,\\n  EmptyStatePrimary,\\n  EmptyStateIcon,\\n  EmptyStateBody\\n} from '@patternfly/react-core';\\nimport SearchIcon from '@patternfly/react-icons/dist/esm/icons/search-icon';\\n\\n\\nconst NoMatchFound = () => (\\n  <EmptyState>\\n    <EmptyStateIcon icon={SearchIcon} />\\n    <Title size=\\\"lg\\\" headingLevel=\\\"h4\\\">\\n      No results found\\n    </Title>\\n    <EmptyStateBody>\\n      No results match the filter criteria. Clear all filters and try again.\\n    </EmptyStateBody>\\n    <EmptyStatePrimary>\\n      <Button variant=\\\"link\\\">Clear all filters</Button>\\n    </EmptyStatePrimary>\\n  </EmptyState>\\n)\",\"title\":\"No match found\",\"lang\":\"js\"}}>\n      \n    </Example>\n};\n\nconst Component = () => (\n  <React.Fragment>\n    <AutoLinkHeader {...{\"id\":\"examples\",\"size\":\"h2\",\"className\":\"ws-title ws-h2\"}}>\n      {`Examples`}\n    </AutoLinkHeader>\n    {React.createElement(pageData.examples[\"Basic\"])}\n    {React.createElement(pageData.examples[\"Extra small\"])}\n    {React.createElement(pageData.examples[\"Small\"])}\n    {React.createElement(pageData.examples[\"Large\"])}\n    {React.createElement(pageData.examples[\"Extra large\"])}\n    {React.createElement(pageData.examples[\"Spinner\"])}\n    {React.createElement(pageData.examples[\"No match found\"])}\n  </React.Fragment>\n);\nComponent.displayName = 'ComponentsEmptyStateReactDocs';\nComponent.pageData = pageData;\n\nexport default Component;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}