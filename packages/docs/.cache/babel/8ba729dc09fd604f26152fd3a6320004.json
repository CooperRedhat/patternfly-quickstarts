{"ast":null,"code":"function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Form, FormGroup, TextInput } from '@patternfly/react-core';\nvar propTypes = {\n  formValue: PropTypes.string,\n  isFormValid: PropTypes.bool,\n  onChange: PropTypes.func\n};\nvar defaultProps = {\n  formValue: '',\n  isFormValid: false,\n  onChange: function onChange() {\n    return undefined;\n  }\n};\n\nvar SampleForm = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(SampleForm, _React$Component);\n\n  function SampleForm() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      value: _this.props.formValue,\n      isValid: _this.props.isFormValid\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleTextInputChange\", function (value) {\n      var isValid = /^\\d+$/.test(value);\n\n      _this.setState({\n        value: value,\n        isValid: isValid\n      });\n\n      _this.props.onChange && _this.props.onChange(isValid, value);\n    });\n\n    return _this;\n  }\n\n  var _proto = SampleForm.prototype;\n\n  _proto.render = function render() {\n    var _this$state = this.state,\n        value = _this$state.value,\n        isValid = _this$state.isValid;\n    var validated = isValid ? 'default' : 'error';\n    return /*#__PURE__*/React.createElement(Form, null, /*#__PURE__*/React.createElement(FormGroup, {\n      label: \"Age:\",\n      type: \"number\",\n      helperText: \"Write your age in numbers.\",\n      helperTextInvalid: \"Age has to be a number\",\n      fieldId: \"age\",\n      validated: validated\n    }, /*#__PURE__*/React.createElement(TextInput, {\n      validated: validated,\n      value: value,\n      id: \"age\",\n      \"aria-describedby\": \"age-helper\",\n      onChange: this.handleTextInputChange\n    })));\n  };\n\n  return SampleForm;\n}(React.Component);\n\n_defineProperty(SampleForm, \"propTypes\", propTypes);\n\n_defineProperty(SampleForm, \"defaultProps\", defaultProps);\n\nexport default SampleForm;","map":{"version":3,"names":["React","PropTypes","Form","FormGroup","TextInput","propTypes","formValue","string","isFormValid","bool","onChange","func","defaultProps","undefined","SampleForm","value","props","isValid","test","setState","render","state","validated","handleTextInputChange","Component"],"sources":["/Users/jschuler/Code/patternfly-quickstarts/packages/docs/node_modules/@patternfly/react-core/src/components/Wizard/examples/SampleForm.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Form, FormGroup, TextInput } from '@patternfly/react-core';\n\nconst propTypes = {\n  formValue: PropTypes.string,\n  isFormValid: PropTypes.bool,\n  onChange: PropTypes.func\n};\n\nconst defaultProps = {\n  formValue: '',\n  isFormValid: false,\n  onChange: () => undefined\n};\n\nclass SampleForm extends React.Component {\n  static propTypes = propTypes;\n  static defaultProps = defaultProps;\n\n  state = {\n    value: this.props.formValue,\n    isValid: this.props.isFormValid\n  };\n\n  handleTextInputChange = value => {\n    const isValid = /^\\d+$/.test(value);\n    this.setState({ value, isValid });\n    this.props.onChange && this.props.onChange(isValid, value);\n  };\n\n  render() {\n    const { value, isValid } = this.state;\n    const validated = isValid ? 'default' : 'error';\n\n    return (\n      <Form>\n        <FormGroup\n          label=\"Age:\"\n          type=\"number\"\n          helperText=\"Write your age in numbers.\"\n          helperTextInvalid=\"Age has to be a number\"\n          fieldId=\"age\"\n          validated={validated}\n        >\n          <TextInput\n            validated={validated}\n            value={value}\n            id=\"age\"\n            aria-describedby=\"age-helper\"\n            onChange={this.handleTextInputChange}\n          />\n        </FormGroup>\n      </Form>\n    );\n  }\n}\n\nexport default SampleForm;\n"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,IAAT,EAAeC,SAAf,EAA0BC,SAA1B,QAA2C,wBAA3C;AAEA,IAAMC,SAAS,GAAG;EAChBC,SAAS,EAAEL,SAAS,CAACM,MADL;EAEhBC,WAAW,EAAEP,SAAS,CAACQ,IAFP;EAGhBC,QAAQ,EAAET,SAAS,CAACU;AAHJ,CAAlB;AAMA,IAAMC,YAAY,GAAG;EACnBN,SAAS,EAAE,EADQ;EAEnBE,WAAW,EAAE,KAFM;EAGnBE,QAAQ,EAAE;IAAA,OAAMG,SAAN;EAAA;AAHS,CAArB;;IAMMC,U;;;;;;;;;;;;4DAII;MACNC,KAAK,EAAE,MAAKC,KAAL,CAAWV,SADZ;MAENW,OAAO,EAAE,MAAKD,KAAL,CAAWR;IAFd,C;;4EAKgB,UAAAO,KAAK,EAAI;MAC/B,IAAME,OAAO,GAAG,QAAQC,IAAR,CAAaH,KAAb,CAAhB;;MACA,MAAKI,QAAL,CAAc;QAAEJ,KAAK,EAALA,KAAF;QAASE,OAAO,EAAPA;MAAT,CAAd;;MACA,MAAKD,KAAL,CAAWN,QAAX,IAAuB,MAAKM,KAAL,CAAWN,QAAX,CAAoBO,OAApB,EAA6BF,KAA7B,CAAvB;IACD,C;;;;;;;SAEDK,M,GAAA,kBAAS;IACP,kBAA2B,KAAKC,KAAhC;IAAA,IAAQN,KAAR,eAAQA,KAAR;IAAA,IAAeE,OAAf,eAAeA,OAAf;IACA,IAAMK,SAAS,GAAGL,OAAO,GAAG,SAAH,GAAe,OAAxC;IAEA,oBACE,oBAAC,IAAD,qBACE,oBAAC,SAAD;MACE,KAAK,EAAC,MADR;MAEE,IAAI,EAAC,QAFP;MAGE,UAAU,EAAC,4BAHb;MAIE,iBAAiB,EAAC,wBAJpB;MAKE,OAAO,EAAC,KALV;MAME,SAAS,EAAEK;IANb,gBAQE,oBAAC,SAAD;MACE,SAAS,EAAEA,SADb;MAEE,KAAK,EAAEP,KAFT;MAGE,EAAE,EAAC,KAHL;MAIE,oBAAiB,YAJnB;MAKE,QAAQ,EAAE,KAAKQ;IALjB,EARF,CADF,CADF;EAoBD,C;;;EAvCsBvB,KAAK,CAACwB,S;;gBAAzBV,U,eACeT,S;;gBADfS,U,kBAEkBF,Y;;AAwCxB,eAAeE,UAAf"},"metadata":{},"sourceType":"module"}