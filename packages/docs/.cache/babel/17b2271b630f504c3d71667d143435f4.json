{"ast":null,"code":"import React from 'react';\nimport { AutoLinkHeader, Example, Link as PatternflyThemeLink } from 'theme-patternfly-org/components';\nvar pageData = {\n  \"id\": \"Avatar\",\n  \"section\": \"components\",\n  \"source\": \"accessibility\",\n  \"slug\": \"/components/avatar/accessibility\",\n  \"sourceLink\": \"https://github.com/patternfly/patternfly-org/blob/main/packages/docs/src/content/accessibility/avatar/avatar.md\"\n};\npageData.examples = {};\n\nvar Component = function Component() {\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"p\", {\n    \"className\": \"ws-p\"\n  }, \"An \", /*#__PURE__*/React.createElement(\"strong\", null, \"avatar\"), \" is a visual used to represent a user. It may contain an image or a placeholder graphic. Typical usage is to represent the current user in the masthead.\"), /*#__PURE__*/React.createElement(\"p\", {\n    \"className\": \"ws-p\"\n  }, /*#__PURE__*/React.createElement(\"strong\", null, \"Keyboard users\"), \" shouldn\\u2019t be able to interact with the avatar on its own. Thus, the user should not be able to focus on the avatar using \", /*#__PURE__*/React.createElement(\"strong\", null, \"Tab\"), \" to move forward and \", /*#__PURE__*/React.createElement(\"strong\", null, \"Tab + Shift\"), \" to move backwards through interactive elements.\"), /*#__PURE__*/React.createElement(\"p\", {\n    \"className\": \"ws-p\"\n  }, /*#__PURE__*/React.createElement(\"strong\", null, \"Screen reader users\"), \" should be able to navigate to the avatar and it should have alternative text, since it\\u2019s an image element. You can use the \", /*#__PURE__*/React.createElement(\"code\", {\n    \"className\": \"ws-code\"\n  }, \"alt\"), \" prop to provide alternative text.\"), /*#__PURE__*/React.createElement(\"p\", {\n    \"className\": \"ws-p\"\n  }, \"If you\\u2019re combining an avatar with another component, make sure to check accessibility guidelines for that component as well.\"), /*#__PURE__*/React.createElement(AutoLinkHeader, {\n    \"id\": \"to-make-avatar-accessible\",\n    \"size\": \"h2\",\n    \"className\": \"ws-title ws-h2\"\n  }, \"To make avatar accessible:\"), /*#__PURE__*/React.createElement(\"ul\", {\n    \"className\": \"ws-ul\"\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    \"className\": \"ws-li\"\n  }, \"You may use the \", /*#__PURE__*/React.createElement(\"code\", {\n    \"className\": \"ws-code\"\n  }, \"alt\"), \" React prop to provide alternative text for the avatar image.\"), /*#__PURE__*/React.createElement(\"li\", {\n    \"className\": \"ws-li\"\n  }, \"If you are using an SVG element for the avatar, \", /*#__PURE__*/React.createElement(PatternflyThemeLink, {\n    \"to\": \"https://www.deque.com/blog/creating-accessible-svgs/\"\n  }, \"learn how to create accessible SVGs\"), \" and reference the different SVG patterns. Screen reader accessibility for SVGs varies based on the pattern being used.\")), /*#__PURE__*/React.createElement(\"p\", {\n    \"className\": \"ws-p\"\n  }, \"The following props/attributes have been added for you or are customizable in PatternFly:\"), /*#__PURE__*/React.createElement(\"table\", {\n    \"className\": \"ws-table pf-c-table pf-m-grid-lg pf-m-compact\",\n    \"role\": \"grid\"\n  }, /*#__PURE__*/React.createElement(\"thead\", null, /*#__PURE__*/React.createElement(\"tr\", {\n    \"role\": \"row\"\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    \"className\": \" pf-m-wrap\",\n    \"role\": \"columnheader\",\n    \"scope\": \"col\"\n  }, /*#__PURE__*/React.createElement(\"div\", null, \"React prop\")), /*#__PURE__*/React.createElement(\"th\", {\n    \"className\": \" pf-m-wrap\",\n    \"role\": \"columnheader\",\n    \"scope\": \"col\"\n  }, /*#__PURE__*/React.createElement(\"div\", null, \"React component that it should be applied to\")), /*#__PURE__*/React.createElement(\"th\", {\n    \"className\": \" pf-m-wrap\",\n    \"role\": \"columnheader\",\n    \"scope\": \"col\"\n  }, /*#__PURE__*/React.createElement(\"div\", null, \"Which HTML element it appears on in markup\")), /*#__PURE__*/React.createElement(\"th\", {\n    \"className\": \" pf-m-wrap\",\n    \"role\": \"columnheader\",\n    \"scope\": \"col\"\n  }, /*#__PURE__*/React.createElement(\"div\", null, \"Reason used\")))), /*#__PURE__*/React.createElement(\"tbody\", {\n    \"role\": \"rowgroup\"\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    \"role\": \"row\"\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    \"role\": \"cell\",\n    \"data-label\": \"React prop\"\n  }, /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(\"code\", {\n    \"className\": \"ws-code\"\n  }, \"alt\"))), /*#__PURE__*/React.createElement(\"td\", {\n    \"role\": \"cell\",\n    \"data-label\": \"React component that it should be applied to\"\n  }, /*#__PURE__*/React.createElement(\"div\", null, \"Avatar\")), /*#__PURE__*/React.createElement(\"td\", {\n    \"role\": \"cell\",\n    \"data-label\": \"Which HTML element it appears on in markup\"\n  }, /*#__PURE__*/React.createElement(\"div\", null, \".pf-c-avatar\")), /*#__PURE__*/React.createElement(\"td\", {\n    \"role\": \"cell\",\n    \"data-label\": \"Reason used\"\n  }, /*#__PURE__*/React.createElement(\"div\", null, \"Provides an accessible description of the avatar as it uses an image instead of text.\"))))));\n};\n\nComponent.displayName = 'ComponentsAvatarAccessibilityDocs';\nComponent.pageData = pageData;\nexport default Component;","map":{"version":3,"names":["React","AutoLinkHeader","Example","Link","PatternflyThemeLink","pageData","examples","Component","displayName"],"sources":["/Users/jschuler/Code/patternfly-quickstarts/packages/docs/src/generated/components/avatar/accessibility.js"],"sourcesContent":["import React from 'react';\nimport { AutoLinkHeader, Example, Link as PatternflyThemeLink } from 'theme-patternfly-org/components';\n\nconst pageData = {\n  \"id\": \"Avatar\",\n  \"section\": \"components\",\n  \"source\": \"accessibility\",\n  \"slug\": \"/components/avatar/accessibility\",\n  \"sourceLink\": \"https://github.com/patternfly/patternfly-org/blob/main/packages/docs/src/content/accessibility/avatar/avatar.md\"\n};\npageData.examples = {\n  \n};\n\nconst Component = () => (\n  <React.Fragment>\n    <p {...{\"className\":\"ws-p\"}}>\n      {`An `}\n      <strong>\n        {`avatar`}\n      </strong>\n      {` is a visual used to represent a user. It may contain an image or a placeholder graphic. Typical usage is to represent the current user in the masthead.`}\n    </p>\n    <p {...{\"className\":\"ws-p\"}}>\n      <strong>\n        {`Keyboard users`}\n      </strong>\n      {` shouldn’t be able to interact with the avatar on its own. Thus, the user should not be able to focus on the avatar using `}\n      <strong>\n        {`Tab`}\n      </strong>\n      {` to move forward and `}\n      <strong>\n        {`Tab + Shift`}\n      </strong>\n      {` to move backwards through interactive elements.`}\n    </p>\n    <p {...{\"className\":\"ws-p\"}}>\n      <strong>\n        {`Screen reader users`}\n      </strong>\n      {` should be able to navigate to the avatar and it should have alternative text, since it’s an image element. You can use the `}\n      <code {...{\"className\":\"ws-code\"}}>\n        {`alt`}\n      </code>\n      {` prop to provide alternative text.`}\n    </p>\n    <p {...{\"className\":\"ws-p\"}}>\n      {`If you’re combining an avatar with another component, make sure to check accessibility guidelines for that component as well.`}\n    </p>\n    <AutoLinkHeader {...{\"id\":\"to-make-avatar-accessible\",\"size\":\"h2\",\"className\":\"ws-title ws-h2\"}}>\n      {`To make avatar accessible:`}\n    </AutoLinkHeader>\n    <ul {...{\"className\":\"ws-ul\"}}>\n      <li {...{\"className\":\"ws-li\"}}>\n        {`You may use the `}\n        <code {...{\"className\":\"ws-code\"}}>\n          {`alt`}\n        </code>\n        {` React prop to provide alternative text for the avatar image.`}\n      </li>\n      <li {...{\"className\":\"ws-li\"}}>\n        {`If you are using an SVG element for the avatar, `}\n        <PatternflyThemeLink {...{\"to\":\"https://www.deque.com/blog/creating-accessible-svgs/\"}}>\n          {`learn how to create accessible SVGs`}\n        </PatternflyThemeLink>\n        {` and reference the different SVG patterns. Screen reader accessibility for SVGs varies based on the pattern being used.`}\n      </li>\n    </ul>\n    <p {...{\"className\":\"ws-p\"}}>\n      {`The following props/attributes have been added for you or are customizable in PatternFly:`}\n    </p>\n    <table {...{\"className\":\"ws-table pf-c-table pf-m-grid-lg pf-m-compact\",\"role\":\"grid\"}}>\n      <thead>\n        <tr {...{\"role\":\"row\"}}>\n          <th {...{\"className\":\" pf-m-wrap\",\"role\":\"columnheader\",\"scope\":\"col\"}}>\n            <div>\n              {`React prop`}\n            </div>\n          </th>\n          <th {...{\"className\":\" pf-m-wrap\",\"role\":\"columnheader\",\"scope\":\"col\"}}>\n            <div>\n              {`React component that it should be applied to`}\n            </div>\n          </th>\n          <th {...{\"className\":\" pf-m-wrap\",\"role\":\"columnheader\",\"scope\":\"col\"}}>\n            <div>\n              {`Which HTML element it appears on in markup`}\n            </div>\n          </th>\n          <th {...{\"className\":\" pf-m-wrap\",\"role\":\"columnheader\",\"scope\":\"col\"}}>\n            <div>\n              {`Reason used`}\n            </div>\n          </th>\n        </tr>\n      </thead>\n      <tbody {...{\"role\":\"rowgroup\"}}>\n        <tr {...{\"role\":\"row\"}}>\n          <td {...{\"role\":\"cell\",\"data-label\":\"React prop\"}}>\n            <div>\n              <code {...{\"className\":\"ws-code\"}}>\n                {`alt`}\n              </code>\n            </div>\n          </td>\n          <td {...{\"role\":\"cell\",\"data-label\":\"React component that it should be applied to\"}}>\n            <div>\n              {`Avatar`}\n            </div>\n          </td>\n          <td {...{\"role\":\"cell\",\"data-label\":\"Which HTML element it appears on in markup\"}}>\n            <div>\n              {`.pf-c-avatar`}\n            </div>\n          </td>\n          <td {...{\"role\":\"cell\",\"data-label\":\"Reason used\"}}>\n            <div>\n              {`Provides an accessible description of the avatar as it uses an image instead of text.`}\n            </div>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </React.Fragment>\n);\nComponent.displayName = 'ComponentsAvatarAccessibilityDocs';\nComponent.pageData = pageData;\n\nexport default Component;\n"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,EAAyBC,OAAzB,EAAkCC,IAAI,IAAIC,mBAA1C,QAAqE,iCAArE;AAEA,IAAMC,QAAQ,GAAG;EACf,MAAM,QADS;EAEf,WAAW,YAFI;EAGf,UAAU,eAHK;EAIf,QAAQ,kCAJO;EAKf,cAAc;AALC,CAAjB;AAOAA,QAAQ,CAACC,QAAT,GAAoB,EAApB;;AAIA,IAAMC,SAAS,GAAG,SAAZA,SAAY;EAAA,oBAChB,oBAAC,KAAD,CAAO,QAAP,qBACE;IAAQ,aAAY;EAApB,uBAEE,6CAFF,6JADF,eAQE;IAAQ,aAAY;EAApB,gBACE,qDADF,kJAKE,0CALF,wCASE,kDATF,qDARF,eAsBE;IAAQ,aAAY;EAApB,gBACE,0DADF,oJAKE;IAAW,aAAY;EAAvB,SALF,uCAtBF,eAgCE;IAAQ,aAAY;EAApB,wIAhCF,eAmCE,oBAAC,cAAD;IAAqB,MAAK,2BAA1B;IAAsD,QAAO,IAA7D;IAAkE,aAAY;EAA9E,gCAnCF,eAsCE;IAAS,aAAY;EAArB,gBACE;IAAS,aAAY;EAArB,oCAEE;IAAW,aAAY;EAAvB,SAFF,kEADF,eAQE;IAAS,aAAY;EAArB,oEAEE,oBAAC,mBAAD;IAA0B,MAAK;EAA/B,yCAFF,4HARF,CAtCF,eAsDE;IAAQ,aAAY;EAApB,+FAtDF,eAyDE;IAAY,aAAY,+CAAxB;IAAwE,QAAO;EAA/E,gBACE,gDACE;IAAS,QAAO;EAAhB,gBACE;IAAS,aAAY,YAArB;IAAkC,QAAO,cAAzC;IAAwD,SAAQ;EAAhE,gBACE,8CADF,CADF,eAME;IAAS,aAAY,YAArB;IAAkC,QAAO,cAAzC;IAAwD,SAAQ;EAAhE,gBACE,gFADF,CANF,eAWE;IAAS,aAAY,YAArB;IAAkC,QAAO,cAAzC;IAAwD,SAAQ;EAAhE,gBACE,8EADF,CAXF,eAgBE;IAAS,aAAY,YAArB;IAAkC,QAAO,cAAzC;IAAwD,SAAQ;EAAhE,gBACE,+CADF,CAhBF,CADF,CADF,eAyBE;IAAY,QAAO;EAAnB,gBACE;IAAS,QAAO;EAAhB,gBACE;IAAS,QAAO,MAAhB;IAAuB,cAAa;EAApC,gBACE,8CACE;IAAW,aAAY;EAAvB,SADF,CADF,CADF,eAQE;IAAS,QAAO,MAAhB;IAAuB,cAAa;EAApC,gBACE,0CADF,CARF,eAaE;IAAS,QAAO,MAAhB;IAAuB,cAAa;EAApC,gBACE,gDADF,CAbF,eAkBE;IAAS,QAAO,MAAhB;IAAuB,cAAa;EAApC,gBACE,yHADF,CAlBF,CADF,CAzBF,CAzDF,CADgB;AAAA,CAAlB;;AAgHAA,SAAS,CAACC,WAAV,GAAwB,mCAAxB;AACAD,SAAS,CAACF,QAAV,GAAqBA,QAArB;AAEA,eAAeE,SAAf"},"metadata":{},"sourceType":"module"}