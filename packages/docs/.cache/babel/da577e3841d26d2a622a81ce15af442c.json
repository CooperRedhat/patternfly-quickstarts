{"ast":null,"code":"function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport { AutoLinkHeader, Example, Link as PatternflyThemeLink } from 'theme-patternfly-org/components';\nvar pageData = {\n  \"id\": \"Tile\",\n  \"section\": \"components\",\n  \"source\": \"react-demos\",\n  \"slug\": \"/components/tile/react-demos\",\n  \"sourceLink\": \"https://github.com/patternfly/patternfly-react/blob/main/packages/docs/packages/react-core/src/demos/TileDemo.md\",\n  \"examples\": [\"Tiles with single selection\", \"Tiles with multiple selection\"]\n};\npageData.examples = {\n  'Tiles with single selection': function TilesWithSingleSelection(props) {\n    return /*#__PURE__*/React.createElement(Example, _extends({}, pageData, props, {\n      \"code\": \"import React from 'react';\\nimport { Tile } from '@patternfly/react-core';\\n\\nconst TileSingleSelect: React.FunctionComponent = () => {\\n  const [selectedId, setSelectedId] = React.useState<string>('');\\n\\n  const onSelect = (event: React.MouseEvent) => {\\n    setSelectedId(event.currentTarget.id);\\n  };\\n\\n  const onKeyDown = (event: React.KeyboardEvent) => {\\n    if (event.key === ' ' || event.key === 'Enter') {\\n      event.preventDefault();\\n      setSelectedId(event.currentTarget.id);\\n    }\\n  };\\n\\n  return (\\n    <div role=\\\"listbox\\\" aria-label=\\\"Single selection tiles\\\">\\n      <Tile title=\\\"Tile 1\\\" id=\\\"tile-1\\\" onClick={onSelect} onKeyDown={onKeyDown} isSelected={selectedId === 'tile-1'} />\\n      <Tile title=\\\"Tile 2\\\" id=\\\"tile-2\\\" onClick={onSelect} onKeyDown={onKeyDown} isSelected={selectedId === 'tile-2'} />\\n      <Tile title=\\\"Tile 3\\\" id=\\\"tile-3\\\" isDisabled isSelected={selectedId === 'tile-3'} />\\n      <Tile title=\\\"Tile 4\\\" id=\\\"tile-4\\\" onClick={onSelect} onKeyDown={onKeyDown} isSelected={selectedId === 'tile-4'} />\\n    </div>\\n  );\\n};\",\n      \"title\": \"Tiles with single selection\",\n      \"lang\": \"ts\"\n    }));\n  },\n  'Tiles with multiple selection': function TilesWithMultipleSelection(props) {\n    return /*#__PURE__*/React.createElement(Example, _extends({}, pageData, props, {\n      \"code\": \"import React from 'react';\\nimport { Tile } from '@patternfly/react-core';\\n\\nconst TileMultiSelect: React.FunctionComponent = () => {\\n  const [selectedIds, setSelectedIds] = React.useState<string[]>([]);\\n\\n  const onSelect = (event: React.MouseEvent | React.KeyboardEvent) => {\\n    const targetId = event.currentTarget.id;\\n    setSelectedIds(prevSelectedIds => {\\n      const newSelectedIds = prevSelectedIds.includes(targetId)\\n        ? prevSelectedIds.filter(id => id !== targetId)\\n        : [...prevSelectedIds, targetId];\\n      console.log('tile selections: ', newSelectedIds);\\n      return newSelectedIds;\\n    });\\n  };\\n\\n  const onKeyDown = (event: React.KeyboardEvent) => {\\n    console.log(event.key);\\n    if (event.key === ' ' || event.key === 'Enter') {\\n      event.preventDefault();\\n      onSelect(event);\\n    }\\n  };\\n\\n  return (\\n    <div role=\\\"listbox\\\" aria-multiselectable={true} aria-label=\\\"Multiselectable tiles\\\">\\n      <Tile\\n        title=\\\"Tile 1\\\"\\n        id=\\\"tile-1\\\"\\n        onClick={onSelect}\\n        onKeyDown={onKeyDown}\\n        isSelected={selectedIds.includes('tile-1')}\\n      />\\n      <Tile\\n        title=\\\"Tile 2\\\"\\n        id=\\\"tile-2\\\"\\n        onClick={onSelect}\\n        onKeyDown={onKeyDown}\\n        isSelected={selectedIds.includes('tile-2')}\\n      />\\n      <Tile title=\\\"Tile 3\\\" id=\\\"tile-3\\\" isDisabled />\\n      <Tile\\n        title=\\\"Tile 4\\\"\\n        id=\\\"tile-4\\\"\\n        onClick={onSelect}\\n        onKeyDown={onKeyDown}\\n        isSelected={selectedIds.includes('tile-4')}\\n      />\\n    </div>\\n  );\\n};\",\n      \"title\": \"Tiles with multiple selection\",\n      \"lang\": \"ts\"\n    }));\n  }\n};\n\nvar Component = function Component() {\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(AutoLinkHeader, {\n    \"id\": \"demos\",\n    \"size\": \"h2\",\n    \"className\": \"ws-title ws-h2\"\n  }, \"Demos\"), React.createElement(pageData.examples[\"Tiles with single selection\"]), React.createElement(pageData.examples[\"Tiles with multiple selection\"]));\n};\n\nComponent.displayName = 'ComponentsTileReactDemosDocs';\nComponent.pageData = pageData;\nexport default Component;","map":{"version":3,"names":["React","AutoLinkHeader","Example","Link","PatternflyThemeLink","pageData","examples","props","Component","createElement","displayName"],"sources":["/Users/jschuler/Code/patternfly-quickstarts/packages/docs/src/generated/components/tile/react-demos.js"],"sourcesContent":["import React from 'react';\nimport { AutoLinkHeader, Example, Link as PatternflyThemeLink } from 'theme-patternfly-org/components';\n\nconst pageData = {\n  \"id\": \"Tile\",\n  \"section\": \"components\",\n  \"source\": \"react-demos\",\n  \"slug\": \"/components/tile/react-demos\",\n  \"sourceLink\": \"https://github.com/patternfly/patternfly-react/blob/main/packages/docs/packages/react-core/src/demos/TileDemo.md\",\n  \"examples\": [\n    \"Tiles with single selection\",\n    \"Tiles with multiple selection\"\n  ]\n};\npageData.examples = {\n  'Tiles with single selection': props => \n    <Example {...pageData} {...props} {...{\"code\":\"import React from 'react';\\nimport { Tile } from '@patternfly/react-core';\\n\\nconst TileSingleSelect: React.FunctionComponent = () => {\\n  const [selectedId, setSelectedId] = React.useState<string>('');\\n\\n  const onSelect = (event: React.MouseEvent) => {\\n    setSelectedId(event.currentTarget.id);\\n  };\\n\\n  const onKeyDown = (event: React.KeyboardEvent) => {\\n    if (event.key === ' ' || event.key === 'Enter') {\\n      event.preventDefault();\\n      setSelectedId(event.currentTarget.id);\\n    }\\n  };\\n\\n  return (\\n    <div role=\\\"listbox\\\" aria-label=\\\"Single selection tiles\\\">\\n      <Tile title=\\\"Tile 1\\\" id=\\\"tile-1\\\" onClick={onSelect} onKeyDown={onKeyDown} isSelected={selectedId === 'tile-1'} />\\n      <Tile title=\\\"Tile 2\\\" id=\\\"tile-2\\\" onClick={onSelect} onKeyDown={onKeyDown} isSelected={selectedId === 'tile-2'} />\\n      <Tile title=\\\"Tile 3\\\" id=\\\"tile-3\\\" isDisabled isSelected={selectedId === 'tile-3'} />\\n      <Tile title=\\\"Tile 4\\\" id=\\\"tile-4\\\" onClick={onSelect} onKeyDown={onKeyDown} isSelected={selectedId === 'tile-4'} />\\n    </div>\\n  );\\n};\",\"title\":\"Tiles with single selection\",\"lang\":\"ts\"}}>\n      \n    </Example>,\n  'Tiles with multiple selection': props => \n    <Example {...pageData} {...props} {...{\"code\":\"import React from 'react';\\nimport { Tile } from '@patternfly/react-core';\\n\\nconst TileMultiSelect: React.FunctionComponent = () => {\\n  const [selectedIds, setSelectedIds] = React.useState<string[]>([]);\\n\\n  const onSelect = (event: React.MouseEvent | React.KeyboardEvent) => {\\n    const targetId = event.currentTarget.id;\\n    setSelectedIds(prevSelectedIds => {\\n      const newSelectedIds = prevSelectedIds.includes(targetId)\\n        ? prevSelectedIds.filter(id => id !== targetId)\\n        : [...prevSelectedIds, targetId];\\n      console.log('tile selections: ', newSelectedIds);\\n      return newSelectedIds;\\n    });\\n  };\\n\\n  const onKeyDown = (event: React.KeyboardEvent) => {\\n    console.log(event.key);\\n    if (event.key === ' ' || event.key === 'Enter') {\\n      event.preventDefault();\\n      onSelect(event);\\n    }\\n  };\\n\\n  return (\\n    <div role=\\\"listbox\\\" aria-multiselectable={true} aria-label=\\\"Multiselectable tiles\\\">\\n      <Tile\\n        title=\\\"Tile 1\\\"\\n        id=\\\"tile-1\\\"\\n        onClick={onSelect}\\n        onKeyDown={onKeyDown}\\n        isSelected={selectedIds.includes('tile-1')}\\n      />\\n      <Tile\\n        title=\\\"Tile 2\\\"\\n        id=\\\"tile-2\\\"\\n        onClick={onSelect}\\n        onKeyDown={onKeyDown}\\n        isSelected={selectedIds.includes('tile-2')}\\n      />\\n      <Tile title=\\\"Tile 3\\\" id=\\\"tile-3\\\" isDisabled />\\n      <Tile\\n        title=\\\"Tile 4\\\"\\n        id=\\\"tile-4\\\"\\n        onClick={onSelect}\\n        onKeyDown={onKeyDown}\\n        isSelected={selectedIds.includes('tile-4')}\\n      />\\n    </div>\\n  );\\n};\",\"title\":\"Tiles with multiple selection\",\"lang\":\"ts\"}}>\n      \n    </Example>\n};\n\nconst Component = () => (\n  <React.Fragment>\n    <AutoLinkHeader {...{\"id\":\"demos\",\"size\":\"h2\",\"className\":\"ws-title ws-h2\"}}>\n      {`Demos`}\n    </AutoLinkHeader>\n    {React.createElement(pageData.examples[\"Tiles with single selection\"])}\n    {React.createElement(pageData.examples[\"Tiles with multiple selection\"])}\n  </React.Fragment>\n);\nComponent.displayName = 'ComponentsTileReactDemosDocs';\nComponent.pageData = pageData;\n\nexport default Component;\n"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,EAAyBC,OAAzB,EAAkCC,IAAI,IAAIC,mBAA1C,QAAqE,iCAArE;AAEA,IAAMC,QAAQ,GAAG;EACf,MAAM,MADS;EAEf,WAAW,YAFI;EAGf,UAAU,aAHK;EAIf,QAAQ,8BAJO;EAKf,cAAc,kHALC;EAMf,YAAY,CACV,6BADU,EAEV,+BAFU;AANG,CAAjB;AAWAA,QAAQ,CAACC,QAAT,GAAoB;EAClB,+BAA+B,kCAAAC,KAAK;IAAA,oBAClC,oBAAC,OAAD,eAAaF,QAAb,EAA2BE,KAA3B;MAAuC,QAAO,yjCAA9C;MAAwmC,SAAQ,6BAAhnC;MAA8oC,QAAO;IAArpC,GADkC;EAAA,CADlB;EAKlB,iCAAiC,oCAAAA,KAAK;IAAA,oBACpC,oBAAC,OAAD,eAAaF,QAAb,EAA2BE,KAA3B;MAAuC,QAAO,gjDAA9C;MAA+lD,SAAQ,+BAAvmD;MAAuoD,QAAO;IAA9oD,GADoC;EAAA;AALpB,CAApB;;AAWA,IAAMC,SAAS,GAAG,SAAZA,SAAY;EAAA,oBAChB,oBAAC,KAAD,CAAO,QAAP,qBACE,oBAAC,cAAD;IAAqB,MAAK,OAA1B;IAAkC,QAAO,IAAzC;IAA8C,aAAY;EAA1D,WADF,EAIGR,KAAK,CAACS,aAAN,CAAoBJ,QAAQ,CAACC,QAAT,CAAkB,6BAAlB,CAApB,CAJH,EAKGN,KAAK,CAACS,aAAN,CAAoBJ,QAAQ,CAACC,QAAT,CAAkB,+BAAlB,CAApB,CALH,CADgB;AAAA,CAAlB;;AASAE,SAAS,CAACE,WAAV,GAAwB,8BAAxB;AACAF,SAAS,CAACH,QAAV,GAAqBA,QAArB;AAEA,eAAeG,SAAf"},"metadata":{},"sourceType":"module"}