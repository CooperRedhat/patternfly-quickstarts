{"ast":null,"code":"function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport { AutoLinkHeader, Example, Link as PatternflyThemeLink } from 'theme-patternfly-org/components';\nimport '../../../../node_modules/@patternfly/react-core/src/layouts/Grid/examples/./grid.css';\nvar pageData = {\n  \"id\": \"Grid\",\n  \"section\": \"layouts\",\n  \"source\": \"react\",\n  \"slug\": \"/layouts/grid/react\",\n  \"sourceLink\": \"https://github.com/patternfly/patternfly-react/blob/main/packages/docs/packages/react-core/src/layouts/Grid/examples/Grid.md\",\n  \"propComponents\": [{\n    \"name\": \"Grid\",\n    \"description\": \"\",\n    \"props\": [{\n      \"name\": \"children\",\n      \"type\": \"React.ReactNode\",\n      \"description\": \"content rendered inside the Grid layout\",\n      \"defaultValue\": \"null\"\n    }, {\n      \"name\": \"className\",\n      \"type\": \"string\",\n      \"description\": \"additional classes added to the Grid layout\",\n      \"defaultValue\": \"''\"\n    }, {\n      \"name\": \"component\",\n      \"type\": \"React.ElementType<any> | React.ComponentType<any>\",\n      \"description\": \"Sets the base component to render. defaults to div\",\n      \"defaultValue\": \"'div'\"\n    }, {\n      \"name\": \"hasGutter\",\n      \"type\": \"boolean\",\n      \"description\": \"Adds space between children.\"\n    }, {\n      \"name\": \"lg\",\n      \"type\": \"1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12\",\n      \"description\": \"the number of columns all grid items should span on a large device\"\n    }, {\n      \"name\": \"md\",\n      \"type\": \"1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12\",\n      \"description\": \"the number of columns all grid items should span on a medium device\"\n    }, {\n      \"name\": \"order\",\n      \"type\": \"{\\n  default?: string;\\n  md?: string;\\n  lg?: string;\\n  xl?: string;\\n  '2xl'?: string;\\n}\",\n      \"description\": \"Modifies the flex layout element order property\"\n    }, {\n      \"name\": \"sm\",\n      \"type\": \"1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12\",\n      \"description\": \"the number of columns all grid items should span on a small device\"\n    }, {\n      \"name\": \"span\",\n      \"type\": \"1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12\",\n      \"description\": \"The number of rows a column in the grid should span.  Value should be a number 1-12\",\n      \"defaultValue\": \"null\"\n    }, {\n      \"name\": \"xl\",\n      \"type\": \"1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12\",\n      \"description\": \"the number of columns all grid items should span on a xLarge device\"\n    }, {\n      \"name\": \"xl2\",\n      \"type\": \"1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12\",\n      \"description\": \"the number of columns all grid items should span on a 2xLarge device\"\n    }]\n  }, {\n    \"name\": \"GridItem\",\n    \"description\": \"\",\n    \"props\": [{\n      \"name\": \"children\",\n      \"type\": \"React.ReactNode\",\n      \"description\": \"content rendered inside the Grid Layout Item\",\n      \"defaultValue\": \"null\"\n    }, {\n      \"name\": \"className\",\n      \"type\": \"string\",\n      \"description\": \"additional classes added to the Grid Layout Item\",\n      \"defaultValue\": \"''\"\n    }, {\n      \"name\": \"component\",\n      \"type\": \"React.ElementType<any> | React.ComponentType<any>\",\n      \"description\": \"Sets the base component to render. defaults to div\",\n      \"defaultValue\": \"'div'\"\n    }, {\n      \"name\": \"lg\",\n      \"type\": \"1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12\",\n      \"description\": \"the number of columns the grid item spans on large device. Value should be a number 1-12\"\n    }, {\n      \"name\": \"lgOffset\",\n      \"type\": \"1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12\",\n      \"description\": \"the number of columns the grid item is offset on large device. Value should be a number 1-12\"\n    }, {\n      \"name\": \"lgRowSpan\",\n      \"type\": \"1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12\",\n      \"description\": \"the number of rows the grid item spans on large device. Value should be a number 1-12\"\n    }, {\n      \"name\": \"md\",\n      \"type\": \"1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12\",\n      \"description\": \"the number of columns the grid item spans on medium device. Value should be a number 1-12\"\n    }, {\n      \"name\": \"mdOffset\",\n      \"type\": \"1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12\",\n      \"description\": \"the number of columns the grid item is offset on medium device. Value should be a number 1-12\"\n    }, {\n      \"name\": \"mdRowSpan\",\n      \"type\": \"1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12\",\n      \"description\": \"the number of rows the grid item spans on medium device. Value should be a number 1-12\"\n    }, {\n      \"name\": \"offset\",\n      \"type\": \"1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12\",\n      \"description\": \"the number of columns a grid item is offset\",\n      \"defaultValue\": \"null\"\n    }, {\n      \"name\": \"order\",\n      \"type\": \"{\\n  default?: string;\\n  md?: string;\\n  lg?: string;\\n  xl?: string;\\n  '2xl'?: string;\\n}\",\n      \"description\": \"Modifies the flex layout element order property\"\n    }, {\n      \"name\": \"rowSpan\",\n      \"type\": \"1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12\",\n      \"description\": \"the number of rows the grid item spans. Value should be a number 1-12\",\n      \"defaultValue\": \"null\"\n    }, {\n      \"name\": \"sm\",\n      \"type\": \"1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12\",\n      \"description\": \"the number of columns the grid item spans on small device. Value should be a number 1-12\"\n    }, {\n      \"name\": \"smOffset\",\n      \"type\": \"1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12\",\n      \"description\": \"the number of columns the grid item is offset on small device. Value should be a number 1-12\"\n    }, {\n      \"name\": \"smRowSpan\",\n      \"type\": \"1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12\",\n      \"description\": \"the number of rows the grid item spans on medium device. Value should be a number 1-12\"\n    }, {\n      \"name\": \"span\",\n      \"type\": \"1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12\",\n      \"description\": \"the number of columns the grid item spans. Value should be a number 1-12\",\n      \"defaultValue\": \"null\"\n    }, {\n      \"name\": \"xl\",\n      \"type\": \"1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12\",\n      \"description\": \"the number of columns the grid item spans on xLarge device. Value should be a number 1-12\"\n    }, {\n      \"name\": \"xl2\",\n      \"type\": \"1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12\",\n      \"description\": \"the number of columns the grid item spans on 2xLarge device. Value should be a number 1-12\"\n    }, {\n      \"name\": \"xl2Offset\",\n      \"type\": \"1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12\",\n      \"description\": \"the number of columns the grid item is offset on 2xLarge device. Value should be a number 1-12\"\n    }, {\n      \"name\": \"xl2RowSpan\",\n      \"type\": \"1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12\",\n      \"description\": \"the number of rows the grid item spans on 2xLarge device. Value should be a number 1-12\"\n    }, {\n      \"name\": \"xlOffset\",\n      \"type\": \"1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12\",\n      \"description\": \"the number of columns the grid item is offset on xLarge device. Value should be a number 1-12\"\n    }, {\n      \"name\": \"xlRowSpan\",\n      \"type\": \"1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12\",\n      \"description\": \"the number of rows the grid item spans on large device. Value should be a number 1-12\"\n    }]\n  }],\n  \"cssPrefix\": [\"pf-l-grid\"],\n  \"examples\": [\"Basic\", \"With gutters\", \"With overrides\", \"Ordering\", \"Responsive ordering\", \"Grouped ordering\", \"Alternative components\"]\n};\npageData.examples = {\n  'Basic': function Basic(props) {\n    return /*#__PURE__*/React.createElement(Example, _extends({}, pageData, props, {\n      \"code\": \"import React from 'react';\\nimport { Grid, GridItem } from '@patternfly/react-core';\\n\\nconst Basic = () => (\\n  <Grid>\\n    <GridItem span={8}>span = 8</GridItem>\\n    <GridItem span={4} rowSpan={2}>\\n      span = 4, rowSpan = 2\\n    </GridItem>\\n    <GridItem span={2} rowSpan={3}>\\n      span = 2, rowSpan = 3\\n    </GridItem>\\n    <GridItem span={2}>span = 2</GridItem>\\n    <GridItem span={4}>span = 4</GridItem>\\n    <GridItem span={2}>span = 2</GridItem>\\n    <GridItem span={2}>span = 2</GridItem>\\n    <GridItem span={2}>span = 2</GridItem>\\n    <GridItem span={4}>span = 4</GridItem>\\n    <GridItem span={2}>span = 2</GridItem>\\n    <GridItem span={4}>span = 4</GridItem>\\n    <GridItem span={4}>span = 4</GridItem>\\n  </Grid>\\n)\",\n      \"title\": \"Basic\",\n      \"lang\": \"js\"\n    }));\n  },\n  'With gutters': function WithGutters(props) {\n    return /*#__PURE__*/React.createElement(Example, _extends({}, pageData, props, {\n      \"code\": \"import React from 'react';\\nimport { Grid, GridItem } from '@patternfly/react-core';\\n\\nconst WithGutters = () => (\\n  <Grid hasGutter>\\n    <GridItem span={8}>span = 8</GridItem>\\n    <GridItem span={4} rowSpan={2}>\\n      span = 4, rowSpan = 2\\n    </GridItem>\\n    <GridItem span={2} rowSpan={3}>\\n      span = 2, rowSpan = 3\\n    </GridItem>\\n    <GridItem span={2}>span = 2</GridItem>\\n    <GridItem span={4}>span = 4</GridItem>\\n    <GridItem span={2}>span = 2</GridItem>\\n    <GridItem span={2}>span = 2</GridItem>\\n    <GridItem span={2}>span = 2</GridItem>\\n    <GridItem span={4}>span = 4</GridItem>\\n    <GridItem span={2}>span = 2</GridItem>\\n    <GridItem span={4}>span = 4</GridItem>\\n    <GridItem span={4}>span = 4</GridItem>\\n  </Grid>\\n)\",\n      \"title\": \"With gutters\",\n      \"lang\": \"js\"\n    }));\n  },\n  'With overrides': function WithOverrides(props) {\n    return /*#__PURE__*/React.createElement(Example, _extends({}, pageData, props, {\n      \"code\": \"import React from 'react';\\nimport { Grid, GridItem } from '@patternfly/react-core';\\n\\nconst WithOverrides = () => (\\n  <Grid sm={6} md={4} lg={3} xl2={1}>\\n    <GridItem span={3} rowSpan={2}>\\n      span = 3 rowSpan= 2\\n    </GridItem>\\n    <GridItem>Grid Item</GridItem>\\n    <GridItem>Grid Item</GridItem>\\n    <GridItem>Grid Item</GridItem>\\n    <GridItem>Grid Item</GridItem>\\n    <GridItem>Grid Item</GridItem>\\n    <GridItem>Grid Item</GridItem>\\n    <GridItem>Grid Item</GridItem>\\n    <GridItem>Grid Item</GridItem>\\n    <GridItem>Grid Item</GridItem>\\n    <GridItem>Grid Item</GridItem>\\n    <GridItem>Grid Item</GridItem>\\n  </Grid>\\n)\",\n      \"title\": \"With overrides\",\n      \"lang\": \"js\"\n    }));\n  },\n  'Ordering': function Ordering(props) {\n    return /*#__PURE__*/React.createElement(Example, _extends({}, pageData, props, {\n      \"code\": \"import React from 'react';\\nimport { Grid, GridItem } from '@patternfly/react-core';\\n\\nconst Ordering = () => (\\n  <Grid hasGutter span={3}>\\n    <GridItem order={{default: \\\"2\\\"}}>Item A</GridItem>\\n    <GridItem>Item B</GridItem>\\n    <GridItem order={{default: \\\"-1\\\"}}>Item C</GridItem>\\n  </Grid>\\n)\",\n      \"title\": \"Ordering\",\n      \"lang\": \"js\"\n    }));\n  },\n  'Responsive ordering': function ResponsiveOrdering(props) {\n    return /*#__PURE__*/React.createElement(Example, _extends({}, pageData, props, {\n      \"code\": \"import React from 'react';\\nimport { Grid, GridItem } from '@patternfly/react-core';\\n\\nconst ResponsiveOrdering = () => (\\n  <Grid hasGutter span={3}>\\n    <GridItem order={{lg: \\\"2\\\"}}>Item A</GridItem>\\n    <GridItem>Item B</GridItem>\\n    <GridItem order={{default: \\\"-1\\\", md: \\\"1\\\"}}>Item C</GridItem>\\n  </Grid>\\n)\",\n      \"title\": \"Responsive ordering\",\n      \"lang\": \"js\"\n    }));\n  },\n  'Grouped ordering': function GroupedOrdering(props) {\n    return /*#__PURE__*/React.createElement(Example, _extends({}, pageData, props, {\n      \"code\": \"import React from 'react';\\nimport { Grid, GridItem } from '@patternfly/react-core';\\n\\nconst GroupedOrdering = () => (\\n  <Grid hasGutter span={12}>\\n    <Grid hasGutter span={6} order={{default: \\\"2\\\"}}>\\n      <GridItem order={{default: \\\"3\\\"}}>Set 1, Item A</GridItem>\\n      <GridItem order={{default: \\\"1\\\"}}>Set 1, Item B</GridItem>\\n      <GridItem>Set 1, Item C</GridItem>\\n      <GridItem order={{default: \\\"2\\\"}}>Set 1, Item D</GridItem>\\n    </Grid>\\n    <Grid hasGutter span={6}>\\n      <GridItem order={{default: \\\"2\\\"}}>Set 2, Item A</GridItem>\\n      <GridItem order={{default: \\\"1\\\"}}>Set 2, Item B</GridItem>\\n      <GridItem>Set 2, Item C</GridItem>\\n      <GridItem order={{default: \\\"2\\\"}}>Set 2, Item D</GridItem>\\n    </Grid>\\n  </Grid>\\n)\",\n      \"title\": \"Grouped ordering\",\n      \"lang\": \"js\"\n    }));\n  },\n  'Alternative components': function AlternativeComponents(props) {\n    return /*#__PURE__*/React.createElement(Example, _extends({}, pageData, props, {\n      \"code\": \"import React from 'react';\\nimport { Grid, GridItem } from '@patternfly/react-core';\\n\\nconst AlternativeComponents = () => (\\n  <Grid component='ul'>\\n    <GridItem component='li'>Grid item</GridItem>\\n    <GridItem component='li'>Grid item</GridItem>\\n    <GridItem component='li'>Grid item</GridItem>\\n    <GridItem component='li'>Grid item</GridItem>\\n    <GridItem component='li'>Grid item</GridItem>\\n  </Grid>\\n)\",\n      \"title\": \"Alternative components\",\n      \"lang\": \"js\"\n    }));\n  }\n};\n\nvar Component = function Component() {\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(AutoLinkHeader, {\n    \"id\": \"examples\",\n    \"size\": \"h2\",\n    \"className\": \"ws-title ws-h2\"\n  }, \"Examples\"), React.createElement(pageData.examples[\"Basic\"]), React.createElement(pageData.examples[\"With gutters\"]), React.createElement(pageData.examples[\"With overrides\"]), /*#__PURE__*/React.createElement(AutoLinkHeader, {\n    \"id\": \"ordering\",\n    \"size\": \"h2\",\n    \"className\": \"ws-title ws-h2\"\n  }, \"Ordering\"), React.createElement(pageData.examples[\"Ordering\"]), React.createElement(pageData.examples[\"Responsive ordering\"]), React.createElement(pageData.examples[\"Grouped ordering\"]), React.createElement(pageData.examples[\"Alternative components\"]));\n};\n\nComponent.displayName = 'LayoutsGridReactDocs';\nComponent.pageData = pageData;\nexport default Component;","map":{"version":3,"names":["React","AutoLinkHeader","Example","Link","PatternflyThemeLink","pageData","examples","props","Component","createElement","displayName"],"sources":["/Users/jschuler/Code/patternfly-quickstarts/packages/docs/src/generated/layouts/grid/react.js"],"sourcesContent":["import React from 'react';\nimport { AutoLinkHeader, Example, Link as PatternflyThemeLink } from 'theme-patternfly-org/components';\nimport '../../../../node_modules/@patternfly/react-core/src/layouts/Grid/examples/./grid.css';\nconst pageData = {\n  \"id\": \"Grid\",\n  \"section\": \"layouts\",\n  \"source\": \"react\",\n  \"slug\": \"/layouts/grid/react\",\n  \"sourceLink\": \"https://github.com/patternfly/patternfly-react/blob/main/packages/docs/packages/react-core/src/layouts/Grid/examples/Grid.md\",\n  \"propComponents\": [\n    {\n      \"name\": \"Grid\",\n      \"description\": \"\",\n      \"props\": [\n        {\n          \"name\": \"children\",\n          \"type\": \"React.ReactNode\",\n          \"description\": \"content rendered inside the Grid layout\",\n          \"defaultValue\": \"null\"\n        },\n        {\n          \"name\": \"className\",\n          \"type\": \"string\",\n          \"description\": \"additional classes added to the Grid layout\",\n          \"defaultValue\": \"''\"\n        },\n        {\n          \"name\": \"component\",\n          \"type\": \"React.ElementType<any> | React.ComponentType<any>\",\n          \"description\": \"Sets the base component to render. defaults to div\",\n          \"defaultValue\": \"'div'\"\n        },\n        {\n          \"name\": \"hasGutter\",\n          \"type\": \"boolean\",\n          \"description\": \"Adds space between children.\"\n        },\n        {\n          \"name\": \"lg\",\n          \"type\": \"1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12\",\n          \"description\": \"the number of columns all grid items should span on a large device\"\n        },\n        {\n          \"name\": \"md\",\n          \"type\": \"1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12\",\n          \"description\": \"the number of columns all grid items should span on a medium device\"\n        },\n        {\n          \"name\": \"order\",\n          \"type\": \"{\\n  default?: string;\\n  md?: string;\\n  lg?: string;\\n  xl?: string;\\n  '2xl'?: string;\\n}\",\n          \"description\": \"Modifies the flex layout element order property\"\n        },\n        {\n          \"name\": \"sm\",\n          \"type\": \"1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12\",\n          \"description\": \"the number of columns all grid items should span on a small device\"\n        },\n        {\n          \"name\": \"span\",\n          \"type\": \"1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12\",\n          \"description\": \"The number of rows a column in the grid should span.  Value should be a number 1-12\",\n          \"defaultValue\": \"null\"\n        },\n        {\n          \"name\": \"xl\",\n          \"type\": \"1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12\",\n          \"description\": \"the number of columns all grid items should span on a xLarge device\"\n        },\n        {\n          \"name\": \"xl2\",\n          \"type\": \"1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12\",\n          \"description\": \"the number of columns all grid items should span on a 2xLarge device\"\n        }\n      ]\n    },\n    {\n      \"name\": \"GridItem\",\n      \"description\": \"\",\n      \"props\": [\n        {\n          \"name\": \"children\",\n          \"type\": \"React.ReactNode\",\n          \"description\": \"content rendered inside the Grid Layout Item\",\n          \"defaultValue\": \"null\"\n        },\n        {\n          \"name\": \"className\",\n          \"type\": \"string\",\n          \"description\": \"additional classes added to the Grid Layout Item\",\n          \"defaultValue\": \"''\"\n        },\n        {\n          \"name\": \"component\",\n          \"type\": \"React.ElementType<any> | React.ComponentType<any>\",\n          \"description\": \"Sets the base component to render. defaults to div\",\n          \"defaultValue\": \"'div'\"\n        },\n        {\n          \"name\": \"lg\",\n          \"type\": \"1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12\",\n          \"description\": \"the number of columns the grid item spans on large device. Value should be a number 1-12\"\n        },\n        {\n          \"name\": \"lgOffset\",\n          \"type\": \"1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12\",\n          \"description\": \"the number of columns the grid item is offset on large device. Value should be a number 1-12\"\n        },\n        {\n          \"name\": \"lgRowSpan\",\n          \"type\": \"1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12\",\n          \"description\": \"the number of rows the grid item spans on large device. Value should be a number 1-12\"\n        },\n        {\n          \"name\": \"md\",\n          \"type\": \"1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12\",\n          \"description\": \"the number of columns the grid item spans on medium device. Value should be a number 1-12\"\n        },\n        {\n          \"name\": \"mdOffset\",\n          \"type\": \"1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12\",\n          \"description\": \"the number of columns the grid item is offset on medium device. Value should be a number 1-12\"\n        },\n        {\n          \"name\": \"mdRowSpan\",\n          \"type\": \"1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12\",\n          \"description\": \"the number of rows the grid item spans on medium device. Value should be a number 1-12\"\n        },\n        {\n          \"name\": \"offset\",\n          \"type\": \"1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12\",\n          \"description\": \"the number of columns a grid item is offset\",\n          \"defaultValue\": \"null\"\n        },\n        {\n          \"name\": \"order\",\n          \"type\": \"{\\n  default?: string;\\n  md?: string;\\n  lg?: string;\\n  xl?: string;\\n  '2xl'?: string;\\n}\",\n          \"description\": \"Modifies the flex layout element order property\"\n        },\n        {\n          \"name\": \"rowSpan\",\n          \"type\": \"1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12\",\n          \"description\": \"the number of rows the grid item spans. Value should be a number 1-12\",\n          \"defaultValue\": \"null\"\n        },\n        {\n          \"name\": \"sm\",\n          \"type\": \"1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12\",\n          \"description\": \"the number of columns the grid item spans on small device. Value should be a number 1-12\"\n        },\n        {\n          \"name\": \"smOffset\",\n          \"type\": \"1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12\",\n          \"description\": \"the number of columns the grid item is offset on small device. Value should be a number 1-12\"\n        },\n        {\n          \"name\": \"smRowSpan\",\n          \"type\": \"1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12\",\n          \"description\": \"the number of rows the grid item spans on medium device. Value should be a number 1-12\"\n        },\n        {\n          \"name\": \"span\",\n          \"type\": \"1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12\",\n          \"description\": \"the number of columns the grid item spans. Value should be a number 1-12\",\n          \"defaultValue\": \"null\"\n        },\n        {\n          \"name\": \"xl\",\n          \"type\": \"1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12\",\n          \"description\": \"the number of columns the grid item spans on xLarge device. Value should be a number 1-12\"\n        },\n        {\n          \"name\": \"xl2\",\n          \"type\": \"1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12\",\n          \"description\": \"the number of columns the grid item spans on 2xLarge device. Value should be a number 1-12\"\n        },\n        {\n          \"name\": \"xl2Offset\",\n          \"type\": \"1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12\",\n          \"description\": \"the number of columns the grid item is offset on 2xLarge device. Value should be a number 1-12\"\n        },\n        {\n          \"name\": \"xl2RowSpan\",\n          \"type\": \"1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12\",\n          \"description\": \"the number of rows the grid item spans on 2xLarge device. Value should be a number 1-12\"\n        },\n        {\n          \"name\": \"xlOffset\",\n          \"type\": \"1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12\",\n          \"description\": \"the number of columns the grid item is offset on xLarge device. Value should be a number 1-12\"\n        },\n        {\n          \"name\": \"xlRowSpan\",\n          \"type\": \"1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12\",\n          \"description\": \"the number of rows the grid item spans on large device. Value should be a number 1-12\"\n        }\n      ]\n    }\n  ],\n  \"cssPrefix\": [\n    \"pf-l-grid\"\n  ],\n  \"examples\": [\n    \"Basic\",\n    \"With gutters\",\n    \"With overrides\",\n    \"Ordering\",\n    \"Responsive ordering\",\n    \"Grouped ordering\",\n    \"Alternative components\"\n  ]\n};\npageData.examples = {\n  'Basic': props => \n    <Example {...pageData} {...props} {...{\"code\":\"import React from 'react';\\nimport { Grid, GridItem } from '@patternfly/react-core';\\n\\nconst Basic = () => (\\n  <Grid>\\n    <GridItem span={8}>span = 8</GridItem>\\n    <GridItem span={4} rowSpan={2}>\\n      span = 4, rowSpan = 2\\n    </GridItem>\\n    <GridItem span={2} rowSpan={3}>\\n      span = 2, rowSpan = 3\\n    </GridItem>\\n    <GridItem span={2}>span = 2</GridItem>\\n    <GridItem span={4}>span = 4</GridItem>\\n    <GridItem span={2}>span = 2</GridItem>\\n    <GridItem span={2}>span = 2</GridItem>\\n    <GridItem span={2}>span = 2</GridItem>\\n    <GridItem span={4}>span = 4</GridItem>\\n    <GridItem span={2}>span = 2</GridItem>\\n    <GridItem span={4}>span = 4</GridItem>\\n    <GridItem span={4}>span = 4</GridItem>\\n  </Grid>\\n)\",\"title\":\"Basic\",\"lang\":\"js\"}}>\n      \n    </Example>,\n  'With gutters': props => \n    <Example {...pageData} {...props} {...{\"code\":\"import React from 'react';\\nimport { Grid, GridItem } from '@patternfly/react-core';\\n\\nconst WithGutters = () => (\\n  <Grid hasGutter>\\n    <GridItem span={8}>span = 8</GridItem>\\n    <GridItem span={4} rowSpan={2}>\\n      span = 4, rowSpan = 2\\n    </GridItem>\\n    <GridItem span={2} rowSpan={3}>\\n      span = 2, rowSpan = 3\\n    </GridItem>\\n    <GridItem span={2}>span = 2</GridItem>\\n    <GridItem span={4}>span = 4</GridItem>\\n    <GridItem span={2}>span = 2</GridItem>\\n    <GridItem span={2}>span = 2</GridItem>\\n    <GridItem span={2}>span = 2</GridItem>\\n    <GridItem span={4}>span = 4</GridItem>\\n    <GridItem span={2}>span = 2</GridItem>\\n    <GridItem span={4}>span = 4</GridItem>\\n    <GridItem span={4}>span = 4</GridItem>\\n  </Grid>\\n)\",\"title\":\"With gutters\",\"lang\":\"js\"}}>\n      \n    </Example>,\n  'With overrides': props => \n    <Example {...pageData} {...props} {...{\"code\":\"import React from 'react';\\nimport { Grid, GridItem } from '@patternfly/react-core';\\n\\nconst WithOverrides = () => (\\n  <Grid sm={6} md={4} lg={3} xl2={1}>\\n    <GridItem span={3} rowSpan={2}>\\n      span = 3 rowSpan= 2\\n    </GridItem>\\n    <GridItem>Grid Item</GridItem>\\n    <GridItem>Grid Item</GridItem>\\n    <GridItem>Grid Item</GridItem>\\n    <GridItem>Grid Item</GridItem>\\n    <GridItem>Grid Item</GridItem>\\n    <GridItem>Grid Item</GridItem>\\n    <GridItem>Grid Item</GridItem>\\n    <GridItem>Grid Item</GridItem>\\n    <GridItem>Grid Item</GridItem>\\n    <GridItem>Grid Item</GridItem>\\n    <GridItem>Grid Item</GridItem>\\n  </Grid>\\n)\",\"title\":\"With overrides\",\"lang\":\"js\"}}>\n      \n    </Example>,\n  'Ordering': props => \n    <Example {...pageData} {...props} {...{\"code\":\"import React from 'react';\\nimport { Grid, GridItem } from '@patternfly/react-core';\\n\\nconst Ordering = () => (\\n  <Grid hasGutter span={3}>\\n    <GridItem order={{default: \\\"2\\\"}}>Item A</GridItem>\\n    <GridItem>Item B</GridItem>\\n    <GridItem order={{default: \\\"-1\\\"}}>Item C</GridItem>\\n  </Grid>\\n)\",\"title\":\"Ordering\",\"lang\":\"js\"}}>\n      \n    </Example>,\n  'Responsive ordering': props => \n    <Example {...pageData} {...props} {...{\"code\":\"import React from 'react';\\nimport { Grid, GridItem } from '@patternfly/react-core';\\n\\nconst ResponsiveOrdering = () => (\\n  <Grid hasGutter span={3}>\\n    <GridItem order={{lg: \\\"2\\\"}}>Item A</GridItem>\\n    <GridItem>Item B</GridItem>\\n    <GridItem order={{default: \\\"-1\\\", md: \\\"1\\\"}}>Item C</GridItem>\\n  </Grid>\\n)\",\"title\":\"Responsive ordering\",\"lang\":\"js\"}}>\n      \n    </Example>,\n  'Grouped ordering': props => \n    <Example {...pageData} {...props} {...{\"code\":\"import React from 'react';\\nimport { Grid, GridItem } from '@patternfly/react-core';\\n\\nconst GroupedOrdering = () => (\\n  <Grid hasGutter span={12}>\\n    <Grid hasGutter span={6} order={{default: \\\"2\\\"}}>\\n      <GridItem order={{default: \\\"3\\\"}}>Set 1, Item A</GridItem>\\n      <GridItem order={{default: \\\"1\\\"}}>Set 1, Item B</GridItem>\\n      <GridItem>Set 1, Item C</GridItem>\\n      <GridItem order={{default: \\\"2\\\"}}>Set 1, Item D</GridItem>\\n    </Grid>\\n    <Grid hasGutter span={6}>\\n      <GridItem order={{default: \\\"2\\\"}}>Set 2, Item A</GridItem>\\n      <GridItem order={{default: \\\"1\\\"}}>Set 2, Item B</GridItem>\\n      <GridItem>Set 2, Item C</GridItem>\\n      <GridItem order={{default: \\\"2\\\"}}>Set 2, Item D</GridItem>\\n    </Grid>\\n  </Grid>\\n)\",\"title\":\"Grouped ordering\",\"lang\":\"js\"}}>\n      \n    </Example>,\n  'Alternative components': props => \n    <Example {...pageData} {...props} {...{\"code\":\"import React from 'react';\\nimport { Grid, GridItem } from '@patternfly/react-core';\\n\\nconst AlternativeComponents = () => (\\n  <Grid component='ul'>\\n    <GridItem component='li'>Grid item</GridItem>\\n    <GridItem component='li'>Grid item</GridItem>\\n    <GridItem component='li'>Grid item</GridItem>\\n    <GridItem component='li'>Grid item</GridItem>\\n    <GridItem component='li'>Grid item</GridItem>\\n  </Grid>\\n)\",\"title\":\"Alternative components\",\"lang\":\"js\"}}>\n      \n    </Example>\n};\n\nconst Component = () => (\n  <React.Fragment>\n    <AutoLinkHeader {...{\"id\":\"examples\",\"size\":\"h2\",\"className\":\"ws-title ws-h2\"}}>\n      {`Examples`}\n    </AutoLinkHeader>\n    {React.createElement(pageData.examples[\"Basic\"])}\n    {React.createElement(pageData.examples[\"With gutters\"])}\n    {React.createElement(pageData.examples[\"With overrides\"])}\n    <AutoLinkHeader {...{\"id\":\"ordering\",\"size\":\"h2\",\"className\":\"ws-title ws-h2\"}}>\n      {`Ordering`}\n    </AutoLinkHeader>\n    {React.createElement(pageData.examples[\"Ordering\"])}\n    {React.createElement(pageData.examples[\"Responsive ordering\"])}\n    {React.createElement(pageData.examples[\"Grouped ordering\"])}\n    {React.createElement(pageData.examples[\"Alternative components\"])}\n  </React.Fragment>\n);\nComponent.displayName = 'LayoutsGridReactDocs';\nComponent.pageData = pageData;\n\nexport default Component;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}