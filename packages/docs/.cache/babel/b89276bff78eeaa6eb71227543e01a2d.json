{"ast":null,"code":"function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport { AutoLinkHeader, Example, Link as PatternflyThemeLink } from 'theme-patternfly-org/components';\nimport AtIcon from '@patternfly/react-icons/dist/esm/icons/at-icon';\nimport DollarSignIcon from '@patternfly/react-icons/dist/esm/icons/dollar-sign-icon';\nimport CalendarAltIcon from '@patternfly/react-icons/dist/esm/icons/calendar-alt-icon';\nimport QuestionCircleIcon from '@patternfly/react-icons/dist/esm/icons/question-circle-icon';\nimport { Button, ButtonVariant, TextArea, InputGroup, InputGroupText, TextInput, Dropdown, DropdownToggle, DropdownItem, Popover, PopoverPosition } from '@patternfly/react-core';\nvar pageData = {\n  \"id\": \"Input group\",\n  \"section\": \"components\",\n  \"source\": \"react\",\n  \"slug\": \"/components/input-group/react\",\n  \"sourceLink\": \"https://github.com/patternfly/patternfly-react/blob/main/packages/docs/packages/react-core/src/components/InputGroup/examples/InputGroup.md\",\n  \"propComponents\": [{\n    \"name\": \"InputGroup\",\n    \"description\": \"\",\n    \"props\": [{\n      \"name\": \"children\",\n      \"type\": \"React.ReactNode\",\n      \"description\": \"Content rendered inside the input group.\",\n      \"required\": true\n    }, {\n      \"name\": \"className\",\n      \"type\": \"string\",\n      \"description\": \"Additional classes added to the input group.\",\n      \"defaultValue\": \"''\"\n    }]\n  }, {\n    \"name\": \"InputGroupText\",\n    \"description\": \"\",\n    \"props\": [{\n      \"name\": \"children\",\n      \"type\": \"React.ReactNode\",\n      \"description\": \"Content rendered inside the input group text.\",\n      \"required\": true\n    }, {\n      \"name\": \"className\",\n      \"type\": \"string\",\n      \"description\": \"Additional classes added to the input group text.\",\n      \"defaultValue\": \"''\"\n    }, {\n      \"name\": \"component\",\n      \"type\": \"React.ReactNode\",\n      \"description\": \"Component that wraps the input group text.\",\n      \"defaultValue\": \"'span'\"\n    }, {\n      \"name\": \"variant\",\n      \"type\": \"InputGroupTextVariant | 'default' | 'plain'\",\n      \"description\": \"Input group text variant\",\n      \"defaultValue\": \"InputGroupTextVariant.default\"\n    }]\n  }],\n  \"examples\": [\"Basic\", \"With textarea\", \"With dropdown\", \"With popover\", \"With multiple group siblings\"]\n};\npageData.liveContext = {\n  AtIcon: AtIcon,\n  DollarSignIcon: DollarSignIcon,\n  CalendarAltIcon: CalendarAltIcon,\n  QuestionCircleIcon: QuestionCircleIcon,\n  Button: Button,\n  ButtonVariant: ButtonVariant,\n  TextArea: TextArea,\n  InputGroup: InputGroup,\n  InputGroupText: InputGroupText,\n  TextInput: TextInput,\n  Dropdown: Dropdown,\n  DropdownToggle: DropdownToggle,\n  DropdownItem: DropdownItem,\n  Popover: Popover,\n  PopoverPosition: PopoverPosition\n};\npageData.examples = {\n  'Basic': function Basic(props) {\n    return /*#__PURE__*/React.createElement(Example, _extends({}, pageData, props, {\n      \"code\": \"import React from 'react';\\nimport AtIcon from '@patternfly/react-icons/dist/esm/icons/at-icon';\\nimport {\\n  Button,\\n  InputGroup,\\n  InputGroupText,\\n  InputGroupTextVariant,\\n  TextInput,\\n  ValidatedOptions\\n} from '@patternfly/react-core';\\n\\nclass SimpleInputGroups extends React.Component {\\n  constructor(props) {\\n    super(props);\\n  }\\n\\n  render() {\\n    return (\\n      <React.Fragment>\\n        <InputGroup>\\n          <TextInput id=\\\"textInput6\\\" type=\\\"email\\\" aria-label=\\\"email input field\\\" />\\n          <InputGroupText id=\\\"email-example\\\">@example.com</InputGroupText>\\n        </InputGroup>\\n        <br />\\n        <InputGroup>\\n          <InputGroupText id=\\\"username\\\">\\n            <AtIcon />\\n          </InputGroupText>\\n          <TextInput validated={ValidatedOptions.error} id=\\\"textInput7\\\" type=\\\"email\\\" aria-label=\\\"Error state username example\\\" />\\n        </InputGroup>\\n        <br />\\n        <InputGroup>\\n          <TextInput name=\\\"textIndex12\\\" id=\\\"textInput12\\\" type=\\\"text\\\" aria-label=\\\"percentage\\\" />\\n          <InputGroupText id=\\\"plain-example\\\" variant={InputGroupTextVariant.plain}>%</InputGroupText>\\n        </InputGroup>\\n      </React.Fragment>\\n    );\\n  }\\n}\",\n      \"title\": \"Basic\",\n      \"lang\": \"js\"\n    }));\n  },\n  'With textarea': function WithTextarea(props) {\n    return /*#__PURE__*/React.createElement(Example, _extends({}, pageData, props, {\n      \"code\": \"import React from 'react';\\nimport {\\n  Button,\\n  TextArea,\\n  InputGroup\\n} from '@patternfly/react-core';\\n\\nclass SimpleInputGroups extends React.Component {\\n  constructor(props) {\\n    super(props);\\n  }\\n\\n  render() {\\n    return (\\n      <React.Fragment>\\n        <InputGroup>\\n          <TextArea name=\\\"textarea2\\\" id=\\\"textarea2\\\" aria-label=\\\"textarea with button\\\" />\\n          <Button id=\\\"textAreaButton2\\\" variant=\\\"control\\\">\\n            Button\\n          </Button>\\n        </InputGroup>\\n      </React.Fragment>\\n    );\\n  }\\n}\",\n      \"title\": \"With textarea\",\n      \"lang\": \"js\"\n    }));\n  },\n  'With dropdown': function WithDropdown(props) {\n    return /*#__PURE__*/React.createElement(Example, _extends({}, pageData, props, {\n      \"code\": \"import React from 'react';\\nimport {\\n  Button,\\n  InputGroup,\\n  TextInput,\\n  Dropdown,\\n  DropdownToggle,\\n  DropdownItem\\n} from '@patternfly/react-core';\\n\\nclass SimpleInputGroups extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      isOpen: false,\\n      selected: ''\\n    };\\n    this.onToggle = isOpen => {\\n      this.setState({\\n        isOpen\\n      });\\n    };\\n    this.onSelect = event => {\\n      this.setState({\\n        isOpen: false,\\n        selected: event.currentTarget.value\\n      });\\n    };\\n  }\\n\\n  render() {\\n    return (\\n      <React.Fragment>\\n        <InputGroup>\\n          <Dropdown\\n            onSelect={this.onSelect}\\n            toggle={\\n              <DropdownToggle onToggle={this.onToggle}>\\n                {this.state.selected ? this.state.selected : 'Dropdown'}\\n              </DropdownToggle>\\n            }\\n            isOpen={this.state.isOpen}\\n            dropdownItems={[\\n              <DropdownItem key=\\\"opt-1\\\" value=\\\"Option 1\\\" component=\\\"button\\\">\\n                Option 1\\n              </DropdownItem>,\\n              <DropdownItem key=\\\"opt-2\\\" value=\\\"Option 2\\\" component=\\\"button\\\">\\n                Option 2\\n              </DropdownItem>,\\n              <DropdownItem key=\\\"opt-3\\\" value=\\\"Option 3\\\" component=\\\"button\\\">\\n                Option 3\\n              </DropdownItem>\\n            ]}\\n          />\\n          <TextInput id=\\\"textInput3\\\" aria-label=\\\"input with dropdown and button\\\" />\\n          <Button id=\\\"inputDropdownButton1\\\" variant=\\\"control\\\">Button</Button>\\n        </InputGroup>\\n      </React.Fragment>\\n    );\\n  }\\n}\",\n      \"title\": \"With dropdown\",\n      \"lang\": \"js\"\n    }));\n  },\n  'With popover': function WithPopover(props) {\n    return /*#__PURE__*/React.createElement(Example, _extends({}, pageData, props, {\n      \"code\": \"import React from 'react';\\nimport QuestionCircleIcon from '@patternfly/react-icons/dist/esm/icons/question-circle-icon';\\nimport {\\n  Button,\\n  InputGroup,\\n  TextInput,\\n  Popover,\\n  PopoverPosition\\n} from '@patternfly/react-core';\\n\\nclass SimpleInputGroups extends React.Component {\\n  constructor(props) {\\n    super(props);\\n  }\\n\\n  render() {\\n    return (\\n      <React.Fragment>\\n        <InputGroup>\\n          <TextInput name=\\\"textInput10\\\" id=\\\"textInput10\\\" type=\\\"text\\\" aria-label=\\\"input example with popover\\\" />\\n          <Popover\\n            aria-label=\\\"popover example\\\"\\n            position={PopoverPosition.top}\\n            bodyContent=\\\"This field is an example of an input group with a popover.\\\"\\n          >\\n            <Button variant=\\\"control\\\" aria-label=\\\"popover for input\\\">\\n              <QuestionCircleIcon />\\n            </Button>\\n          </Popover>\\n        </InputGroup>\\n        <br />\\n        <InputGroup>\\n          <TextInput name=\\\"textInput12\\\" id=\\\"textInput12\\\" type=\\\"text\\\" aria-label=\\\"input example with popover\\\" />\\n          <Popover\\n            aria-label=\\\"popover example\\\"\\n            position={PopoverPosition.top}\\n            bodyContent=\\\"This field is an example of an input group with a popover.\\\"\\n          >\\n            <Button variant=\\\"plain\\\" aria-label=\\\"Popover for input\\\">\\n              <QuestionCircleIcon />\\n            </Button>\\n          </Popover>\\n        </InputGroup>\\n      </React.Fragment>\\n    );\\n  }\\n}\",\n      \"title\": \"With popover\",\n      \"lang\": \"js\"\n    }));\n  },\n  'With multiple group siblings': function WithMultipleGroupSiblings(props) {\n    return /*#__PURE__*/React.createElement(Example, _extends({}, pageData, props, {\n      \"code\": \"import React from 'react';\\nimport DollarSignIcon from '@patternfly/react-icons/dist/esm/icons/dollar-sign-icon';\\nimport {\\n  Button,\\n  TextArea,\\n  InputGroup,\\n  InputGroupText,\\n  TextInput\\n} from '@patternfly/react-core';\\n\\nclass SimpleInputGroups extends React.Component {\\n  constructor(props) {\\n    super(props);\\n  }\\n\\n  render() {\\n    return (\\n      <React.Fragment>\\n        <InputGroup>\\n          <Button id=\\\"textAreaButton1\\\" variant=\\\"control\\\">\\n            Button\\n          </Button>\\n          <TextArea name=\\\"textarea1\\\" id=\\\"textarea1\\\" aria-label=\\\"textarea with buttons\\\" />\\n          <Button variant=\\\"control\\\">Button</Button>\\n        </InputGroup>\\n        <br />\\n        <InputGroup>\\n          <Button id=\\\"textAreaButton3\\\" variant=\\\"control\\\">\\n            Button\\n          </Button>\\n          <Button variant=\\\"control\\\">Button</Button>\\n          <TextArea name=\\\"textarea3\\\" id=\\\"textarea3\\\" aria-label=\\\"textarea with 3 buttons\\\" />\\n          <Button variant=\\\"control\\\">Button</Button>\\n        </InputGroup>\\n        <br />\\n        <InputGroup>\\n          <InputGroupText>\\n            <DollarSignIcon />\\n          </InputGroupText>\\n          <TextInput id=\\\"textInput5\\\" type=\\\"number\\\" aria-label=\\\"Dollar amount input example\\\" />\\n          <InputGroupText>.00</InputGroupText>\\n        </InputGroup>\\n      </React.Fragment>\\n    );\\n  }\\n}\",\n      \"title\": \"With multiple group siblings\",\n      \"lang\": \"js\"\n    }));\n  }\n};\n\nvar Component = function Component() {\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(AutoLinkHeader, {\n    \"id\": \"examples\",\n    \"size\": \"h2\",\n    \"className\": \"ws-title ws-h2\"\n  }, \"Examples\"), React.createElement(pageData.examples[\"Basic\"]), React.createElement(pageData.examples[\"With textarea\"]), React.createElement(pageData.examples[\"With dropdown\"]), React.createElement(pageData.examples[\"With popover\"]), React.createElement(pageData.examples[\"With multiple group siblings\"]));\n};\n\nComponent.displayName = 'ComponentsInputGroupReactDocs';\nComponent.pageData = pageData;\nexport default Component;","map":{"version":3,"names":["React","AutoLinkHeader","Example","Link","PatternflyThemeLink","AtIcon","DollarSignIcon","CalendarAltIcon","QuestionCircleIcon","Button","ButtonVariant","TextArea","InputGroup","InputGroupText","TextInput","Dropdown","DropdownToggle","DropdownItem","Popover","PopoverPosition","pageData","liveContext","examples","props","Component","createElement","displayName"],"sources":["/Users/jschuler/Code/patternfly-quickstarts/packages/docs/src/generated/components/input-group/react.js"],"sourcesContent":["import React from 'react';\nimport { AutoLinkHeader, Example, Link as PatternflyThemeLink } from 'theme-patternfly-org/components';\nimport AtIcon from '@patternfly/react-icons/dist/esm/icons/at-icon';\nimport DollarSignIcon from '@patternfly/react-icons/dist/esm/icons/dollar-sign-icon';\nimport CalendarAltIcon from '@patternfly/react-icons/dist/esm/icons/calendar-alt-icon';\nimport QuestionCircleIcon from '@patternfly/react-icons/dist/esm/icons/question-circle-icon';\nimport {\n  Button,\n  ButtonVariant,\n  TextArea,\n  InputGroup,\n  InputGroupText,\n  TextInput,\n  Dropdown,\n  DropdownToggle,\n  DropdownItem,\n  Popover,\n  PopoverPosition\n} from '@patternfly/react-core';\nconst pageData = {\n  \"id\": \"Input group\",\n  \"section\": \"components\",\n  \"source\": \"react\",\n  \"slug\": \"/components/input-group/react\",\n  \"sourceLink\": \"https://github.com/patternfly/patternfly-react/blob/main/packages/docs/packages/react-core/src/components/InputGroup/examples/InputGroup.md\",\n  \"propComponents\": [\n    {\n      \"name\": \"InputGroup\",\n      \"description\": \"\",\n      \"props\": [\n        {\n          \"name\": \"children\",\n          \"type\": \"React.ReactNode\",\n          \"description\": \"Content rendered inside the input group.\",\n          \"required\": true\n        },\n        {\n          \"name\": \"className\",\n          \"type\": \"string\",\n          \"description\": \"Additional classes added to the input group.\",\n          \"defaultValue\": \"''\"\n        }\n      ]\n    },\n    {\n      \"name\": \"InputGroupText\",\n      \"description\": \"\",\n      \"props\": [\n        {\n          \"name\": \"children\",\n          \"type\": \"React.ReactNode\",\n          \"description\": \"Content rendered inside the input group text.\",\n          \"required\": true\n        },\n        {\n          \"name\": \"className\",\n          \"type\": \"string\",\n          \"description\": \"Additional classes added to the input group text.\",\n          \"defaultValue\": \"''\"\n        },\n        {\n          \"name\": \"component\",\n          \"type\": \"React.ReactNode\",\n          \"description\": \"Component that wraps the input group text.\",\n          \"defaultValue\": \"'span'\"\n        },\n        {\n          \"name\": \"variant\",\n          \"type\": \"InputGroupTextVariant | 'default' | 'plain'\",\n          \"description\": \"Input group text variant\",\n          \"defaultValue\": \"InputGroupTextVariant.default\"\n        }\n      ]\n    }\n  ],\n  \"examples\": [\n    \"Basic\",\n    \"With textarea\",\n    \"With dropdown\",\n    \"With popover\",\n    \"With multiple group siblings\"\n  ]\n};\npageData.liveContext = {\n  AtIcon,\n  DollarSignIcon,\n  CalendarAltIcon,\n  QuestionCircleIcon,\n  Button,\n  ButtonVariant,\n  TextArea,\n  InputGroup,\n  InputGroupText,\n  TextInput,\n  Dropdown,\n  DropdownToggle,\n  DropdownItem,\n  Popover,\n  PopoverPosition\n};\npageData.examples = {\n  'Basic': props => \n    <Example {...pageData} {...props} {...{\"code\":\"import React from 'react';\\nimport AtIcon from '@patternfly/react-icons/dist/esm/icons/at-icon';\\nimport {\\n  Button,\\n  InputGroup,\\n  InputGroupText,\\n  InputGroupTextVariant,\\n  TextInput,\\n  ValidatedOptions\\n} from '@patternfly/react-core';\\n\\nclass SimpleInputGroups extends React.Component {\\n  constructor(props) {\\n    super(props);\\n  }\\n\\n  render() {\\n    return (\\n      <React.Fragment>\\n        <InputGroup>\\n          <TextInput id=\\\"textInput6\\\" type=\\\"email\\\" aria-label=\\\"email input field\\\" />\\n          <InputGroupText id=\\\"email-example\\\">@example.com</InputGroupText>\\n        </InputGroup>\\n        <br />\\n        <InputGroup>\\n          <InputGroupText id=\\\"username\\\">\\n            <AtIcon />\\n          </InputGroupText>\\n          <TextInput validated={ValidatedOptions.error} id=\\\"textInput7\\\" type=\\\"email\\\" aria-label=\\\"Error state username example\\\" />\\n        </InputGroup>\\n        <br />\\n        <InputGroup>\\n          <TextInput name=\\\"textIndex12\\\" id=\\\"textInput12\\\" type=\\\"text\\\" aria-label=\\\"percentage\\\" />\\n          <InputGroupText id=\\\"plain-example\\\" variant={InputGroupTextVariant.plain}>%</InputGroupText>\\n        </InputGroup>\\n      </React.Fragment>\\n    );\\n  }\\n}\",\"title\":\"Basic\",\"lang\":\"js\"}}>\n      \n    </Example>,\n  'With textarea': props => \n    <Example {...pageData} {...props} {...{\"code\":\"import React from 'react';\\nimport {\\n  Button,\\n  TextArea,\\n  InputGroup\\n} from '@patternfly/react-core';\\n\\nclass SimpleInputGroups extends React.Component {\\n  constructor(props) {\\n    super(props);\\n  }\\n\\n  render() {\\n    return (\\n      <React.Fragment>\\n        <InputGroup>\\n          <TextArea name=\\\"textarea2\\\" id=\\\"textarea2\\\" aria-label=\\\"textarea with button\\\" />\\n          <Button id=\\\"textAreaButton2\\\" variant=\\\"control\\\">\\n            Button\\n          </Button>\\n        </InputGroup>\\n      </React.Fragment>\\n    );\\n  }\\n}\",\"title\":\"With textarea\",\"lang\":\"js\"}}>\n      \n    </Example>,\n  'With dropdown': props => \n    <Example {...pageData} {...props} {...{\"code\":\"import React from 'react';\\nimport {\\n  Button,\\n  InputGroup,\\n  TextInput,\\n  Dropdown,\\n  DropdownToggle,\\n  DropdownItem\\n} from '@patternfly/react-core';\\n\\nclass SimpleInputGroups extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      isOpen: false,\\n      selected: ''\\n    };\\n    this.onToggle = isOpen => {\\n      this.setState({\\n        isOpen\\n      });\\n    };\\n    this.onSelect = event => {\\n      this.setState({\\n        isOpen: false,\\n        selected: event.currentTarget.value\\n      });\\n    };\\n  }\\n\\n  render() {\\n    return (\\n      <React.Fragment>\\n        <InputGroup>\\n          <Dropdown\\n            onSelect={this.onSelect}\\n            toggle={\\n              <DropdownToggle onToggle={this.onToggle}>\\n                {this.state.selected ? this.state.selected : 'Dropdown'}\\n              </DropdownToggle>\\n            }\\n            isOpen={this.state.isOpen}\\n            dropdownItems={[\\n              <DropdownItem key=\\\"opt-1\\\" value=\\\"Option 1\\\" component=\\\"button\\\">\\n                Option 1\\n              </DropdownItem>,\\n              <DropdownItem key=\\\"opt-2\\\" value=\\\"Option 2\\\" component=\\\"button\\\">\\n                Option 2\\n              </DropdownItem>,\\n              <DropdownItem key=\\\"opt-3\\\" value=\\\"Option 3\\\" component=\\\"button\\\">\\n                Option 3\\n              </DropdownItem>\\n            ]}\\n          />\\n          <TextInput id=\\\"textInput3\\\" aria-label=\\\"input with dropdown and button\\\" />\\n          <Button id=\\\"inputDropdownButton1\\\" variant=\\\"control\\\">Button</Button>\\n        </InputGroup>\\n      </React.Fragment>\\n    );\\n  }\\n}\",\"title\":\"With dropdown\",\"lang\":\"js\"}}>\n      \n    </Example>,\n  'With popover': props => \n    <Example {...pageData} {...props} {...{\"code\":\"import React from 'react';\\nimport QuestionCircleIcon from '@patternfly/react-icons/dist/esm/icons/question-circle-icon';\\nimport {\\n  Button,\\n  InputGroup,\\n  TextInput,\\n  Popover,\\n  PopoverPosition\\n} from '@patternfly/react-core';\\n\\nclass SimpleInputGroups extends React.Component {\\n  constructor(props) {\\n    super(props);\\n  }\\n\\n  render() {\\n    return (\\n      <React.Fragment>\\n        <InputGroup>\\n          <TextInput name=\\\"textInput10\\\" id=\\\"textInput10\\\" type=\\\"text\\\" aria-label=\\\"input example with popover\\\" />\\n          <Popover\\n            aria-label=\\\"popover example\\\"\\n            position={PopoverPosition.top}\\n            bodyContent=\\\"This field is an example of an input group with a popover.\\\"\\n          >\\n            <Button variant=\\\"control\\\" aria-label=\\\"popover for input\\\">\\n              <QuestionCircleIcon />\\n            </Button>\\n          </Popover>\\n        </InputGroup>\\n        <br />\\n        <InputGroup>\\n          <TextInput name=\\\"textInput12\\\" id=\\\"textInput12\\\" type=\\\"text\\\" aria-label=\\\"input example with popover\\\" />\\n          <Popover\\n            aria-label=\\\"popover example\\\"\\n            position={PopoverPosition.top}\\n            bodyContent=\\\"This field is an example of an input group with a popover.\\\"\\n          >\\n            <Button variant=\\\"plain\\\" aria-label=\\\"Popover for input\\\">\\n              <QuestionCircleIcon />\\n            </Button>\\n          </Popover>\\n        </InputGroup>\\n      </React.Fragment>\\n    );\\n  }\\n}\",\"title\":\"With popover\",\"lang\":\"js\"}}>\n      \n    </Example>,\n  'With multiple group siblings': props => \n    <Example {...pageData} {...props} {...{\"code\":\"import React from 'react';\\nimport DollarSignIcon from '@patternfly/react-icons/dist/esm/icons/dollar-sign-icon';\\nimport {\\n  Button,\\n  TextArea,\\n  InputGroup,\\n  InputGroupText,\\n  TextInput\\n} from '@patternfly/react-core';\\n\\nclass SimpleInputGroups extends React.Component {\\n  constructor(props) {\\n    super(props);\\n  }\\n\\n  render() {\\n    return (\\n      <React.Fragment>\\n        <InputGroup>\\n          <Button id=\\\"textAreaButton1\\\" variant=\\\"control\\\">\\n            Button\\n          </Button>\\n          <TextArea name=\\\"textarea1\\\" id=\\\"textarea1\\\" aria-label=\\\"textarea with buttons\\\" />\\n          <Button variant=\\\"control\\\">Button</Button>\\n        </InputGroup>\\n        <br />\\n        <InputGroup>\\n          <Button id=\\\"textAreaButton3\\\" variant=\\\"control\\\">\\n            Button\\n          </Button>\\n          <Button variant=\\\"control\\\">Button</Button>\\n          <TextArea name=\\\"textarea3\\\" id=\\\"textarea3\\\" aria-label=\\\"textarea with 3 buttons\\\" />\\n          <Button variant=\\\"control\\\">Button</Button>\\n        </InputGroup>\\n        <br />\\n        <InputGroup>\\n          <InputGroupText>\\n            <DollarSignIcon />\\n          </InputGroupText>\\n          <TextInput id=\\\"textInput5\\\" type=\\\"number\\\" aria-label=\\\"Dollar amount input example\\\" />\\n          <InputGroupText>.00</InputGroupText>\\n        </InputGroup>\\n      </React.Fragment>\\n    );\\n  }\\n}\",\"title\":\"With multiple group siblings\",\"lang\":\"js\"}}>\n      \n    </Example>\n};\n\nconst Component = () => (\n  <React.Fragment>\n    <AutoLinkHeader {...{\"id\":\"examples\",\"size\":\"h2\",\"className\":\"ws-title ws-h2\"}}>\n      {`Examples`}\n    </AutoLinkHeader>\n    {React.createElement(pageData.examples[\"Basic\"])}\n    {React.createElement(pageData.examples[\"With textarea\"])}\n    {React.createElement(pageData.examples[\"With dropdown\"])}\n    {React.createElement(pageData.examples[\"With popover\"])}\n    {React.createElement(pageData.examples[\"With multiple group siblings\"])}\n  </React.Fragment>\n);\nComponent.displayName = 'ComponentsInputGroupReactDocs';\nComponent.pageData = pageData;\n\nexport default Component;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}