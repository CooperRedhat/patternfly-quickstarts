{"ast":null,"code":"function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport { AutoLinkHeader, Example, Link as PatternflyThemeLink } from 'theme-patternfly-org/components';\nimport brandImg from '../../../../node_modules/@patternfly/react-core/src/components/AboutModal/examples/./brandImg.svg';\nimport bgImg from '../../../../node_modules/@patternfly/react-core/src/components/AboutModal/examples/./patternfly-orb.svg';\nvar pageData = {\n  \"id\": \"About modal\",\n  \"section\": \"components\",\n  \"source\": \"react\",\n  \"slug\": \"/components/about-modal/react\",\n  \"sourceLink\": \"https://github.com/patternfly/patternfly-react/blob/main/packages/docs/packages/react-core/src/components/AboutModal/examples/AboutModal.md\",\n  \"propComponents\": [{\n    \"name\": \"AboutModal\",\n    \"description\": \"\",\n    \"props\": [{\n      \"name\": \"appendTo\",\n      \"type\": \"HTMLElement | (() => HTMLElement)\",\n      \"description\": \"The parent container to append the modal to. Defaults to document.body\",\n      \"defaultValue\": \"null\"\n    }, {\n      \"name\": \"backgroundImageSrc\",\n      \"type\": \"string\",\n      \"description\": \"The URL of the image for the background\",\n      \"defaultValue\": \"''\"\n    }, {\n      \"name\": \"brandImageAlt\",\n      \"type\": \"string\",\n      \"description\": \"The alternate text of the brand image\",\n      \"required\": true\n    }, {\n      \"name\": \"brandImageSrc\",\n      \"type\": \"string\",\n      \"description\": \"The URL of the image for the brand\",\n      \"required\": true\n    }, {\n      \"name\": \"children\",\n      \"type\": \"React.ReactNode\",\n      \"description\": \"Content rendered inside the about modal\",\n      \"required\": true\n    }, {\n      \"name\": \"className\",\n      \"type\": \"string\",\n      \"description\": \"Additional classes added to the about modal\",\n      \"defaultValue\": \"''\"\n    }, {\n      \"name\": \"closeButtonAriaLabel\",\n      \"type\": \"string\",\n      \"description\": \"Set aria label to the close button\"\n    }, {\n      \"name\": \"disableFocusTrap\",\n      \"type\": \"boolean\",\n      \"description\": \"Flag to disable focus trap\"\n    }, {\n      \"name\": \"isOpen\",\n      \"type\": \"boolean\",\n      \"description\": \"Flag to show the about modal\",\n      \"defaultValue\": \"false\"\n    }, {\n      \"name\": \"noAboutModalBoxContentContainer\",\n      \"type\": \"boolean\",\n      \"description\": \"Prevents the about modal from rendering content inside a container; allows for more flexible layouts\",\n      \"defaultValue\": \"false\"\n    }, {\n      \"name\": \"onClose\",\n      \"type\": \"() => void\",\n      \"description\": \"A callback for when the close button is clicked\",\n      \"defaultValue\": \"(): any => undefined\"\n    }, {\n      \"name\": \"productName\",\n      \"type\": \"string\",\n      \"description\": \"Product name\",\n      \"defaultValue\": \"''\"\n    }, {\n      \"name\": \"trademark\",\n      \"type\": \"string\",\n      \"description\": \"Trademark information\",\n      \"defaultValue\": \"''\"\n    }]\n  }],\n  \"cssPrefix\": [\"pf-c-about-modal-box\"],\n  \"examples\": [\"Basic\", \"Without product name\", \"Complex user positioned content\", \"Custom background image\"]\n};\npageData.liveContext = {\n  brandImg: brandImg,\n  bgImg: bgImg\n};\npageData.examples = {\n  'Basic': function Basic(props) {\n    return /*#__PURE__*/React.createElement(Example, _extends({}, pageData, props, {\n      \"code\": \"import React from 'react';\\nimport { AboutModal, Button, TextContent, TextList, TextListItem } from '@patternfly/react-core';\\nimport brandImg from './brandImg.svg';\\n\\nexport const AboutModalBasic: React.FunctionComponent = () => {\\n  const [isModalOpen, setIsModalOpen] = React.useState(false);\\n\\n  const toggleModal = () => {\\n    setIsModalOpen(!isModalOpen);\\n  };\\n\\n  return (\\n    <React.Fragment>\\n      <Button variant=\\\"primary\\\" onClick={toggleModal}>\\n        Show about modal\\n      </Button>\\n      <AboutModal\\n        isOpen={isModalOpen}\\n        onClose={toggleModal}\\n        trademark=\\\"Trademark and copyright information here\\\"\\n        brandImageSrc={brandImg}\\n        brandImageAlt=\\\"Patternfly Logo\\\"\\n        productName=\\\"Product Name\\\"\\n      >\\n        <TextContent>\\n          <TextList component=\\\"dl\\\">\\n            <TextListItem component=\\\"dt\\\">CFME Version</TextListItem>\\n            <TextListItem component=\\\"dd\\\">5.5.3.4.20102789036450</TextListItem>\\n            <TextListItem component=\\\"dt\\\">Cloudforms Version</TextListItem>\\n            <TextListItem component=\\\"dd\\\">4.1</TextListItem>\\n            <TextListItem component=\\\"dt\\\">Server Name</TextListItem>\\n            <TextListItem component=\\\"dd\\\">40DemoMaster</TextListItem>\\n            <TextListItem component=\\\"dt\\\">User Name</TextListItem>\\n            <TextListItem component=\\\"dd\\\">Administrator</TextListItem>\\n            <TextListItem component=\\\"dt\\\">User Role</TextListItem>\\n            <TextListItem component=\\\"dd\\\">EvmRole-super_administrator</TextListItem>\\n            <TextListItem component=\\\"dt\\\">Browser Version</TextListItem>\\n            <TextListItem component=\\\"dd\\\">601.2</TextListItem>\\n            <TextListItem component=\\\"dt\\\">Browser OS</TextListItem>\\n            <TextListItem component=\\\"dd\\\">Mac</TextListItem>\\n          </TextList>\\n        </TextContent>\\n      </AboutModal>\\n    </React.Fragment>\\n  );\\n};\\n\",\n      \"title\": \"Basic\",\n      \"lang\": \"ts\"\n    }));\n  },\n  'Without product name': function WithoutProductName(props) {\n    return /*#__PURE__*/React.createElement(Example, _extends({}, pageData, props, {\n      \"code\": \"import React from 'react';\\nimport { AboutModal, Button, TextContent, TextList, TextListItem } from '@patternfly/react-core';\\nimport brandImg from './brandImg.svg';\\n\\nexport const AboutModalWithoutProductName: React.FunctionComponent = () => {\\n  const [isModalOpen, setIsModalOpen] = React.useState(false);\\n\\n  const toggleModal = () => {\\n    setIsModalOpen(!isModalOpen);\\n  };\\n\\n  return (\\n    <React.Fragment>\\n      <Button variant=\\\"primary\\\" onClick={toggleModal}>\\n        Show about modal\\n      </Button>\\n      <AboutModal\\n        isOpen={isModalOpen}\\n        onClose={toggleModal}\\n        trademark=\\\"Trademark and copyright information here\\\"\\n        brandImageSrc={brandImg}\\n        brandImageAlt=\\\"Patternfly Logo\\\"\\n      >\\n        <TextContent>\\n          <TextList component=\\\"dl\\\">\\n            <TextListItem component=\\\"dt\\\">CFME Version</TextListItem>\\n            <TextListItem component=\\\"dd\\\">5.5.3.4.20102789036450</TextListItem>\\n            <TextListItem component=\\\"dt\\\">Cloudforms Version</TextListItem>\\n            <TextListItem component=\\\"dd\\\">4.1</TextListItem>\\n            <TextListItem component=\\\"dt\\\">Server Name</TextListItem>\\n            <TextListItem component=\\\"dd\\\">40DemoMaster</TextListItem>\\n            <TextListItem component=\\\"dt\\\">User Name</TextListItem>\\n            <TextListItem component=\\\"dd\\\">Administrator</TextListItem>\\n            <TextListItem component=\\\"dt\\\">User Role</TextListItem>\\n            <TextListItem component=\\\"dd\\\">EvmRole-super_administrator</TextListItem>\\n            <TextListItem component=\\\"dt\\\">Browser Version</TextListItem>\\n            <TextListItem component=\\\"dd\\\">601.2</TextListItem>\\n            <TextListItem component=\\\"dt\\\">Browser OS</TextListItem>\\n            <TextListItem component=\\\"dd\\\">Mac</TextListItem>\\n          </TextList>\\n        </TextContent>\\n      </AboutModal>\\n    </React.Fragment>\\n  );\\n};\\n\",\n      \"title\": \"Without product name\",\n      \"lang\": \"ts\"\n    }));\n  },\n  'Complex user positioned content': function ComplexUserPositionedContent(props) {\n    return /*#__PURE__*/React.createElement(Example, _extends({}, pageData, props, {\n      \"code\": \"import React from 'react';\\nimport { AboutModal, Alert, Button, TextContent, TextList, TextListItem } from '@patternfly/react-core';\\nimport brandImg from './brandImg.svg';\\n\\nexport const AboutModalComplexUserPositionedContent: React.FunctionComponent = () => {\\n  const [isModalOpen, setIsModalOpen] = React.useState(false);\\n\\n  const toggleModal = () => {\\n    setIsModalOpen(!isModalOpen);\\n  };\\n\\n  return (\\n    <React.Fragment>\\n      <Button variant=\\\"primary\\\" onClick={toggleModal}>\\n        Show about modal\\n      </Button>\\n      <AboutModal\\n        isOpen={isModalOpen}\\n        onClose={toggleModal}\\n        trademark=\\\"Trademark and copyright information here\\\"\\n        brandImageSrc={brandImg}\\n        brandImageAlt=\\\"Patternfly Logo\\\"\\n        noAboutModalBoxContentContainer={true}\\n        productName=\\\"Product Name\\\"\\n      >\\n        <TextContent id=\\\"test1\\\" className=\\\"pf-u-py-xl\\\">\\n          <h4>About</h4>\\n          <p>Content here</p>\\n        </TextContent>\\n        <Alert variant=\\\"info\\\" title=\\\"Updates available\\\" />\\n        <TextContent id=\\\"test2\\\" className=\\\"pf-u-py-xl\\\">\\n          <TextList component=\\\"dl\\\">\\n            <TextListItem component=\\\"dt\\\">CFME Version</TextListItem>\\n            <TextListItem component=\\\"dd\\\">5.5.3.4.20102789036450</TextListItem>\\n            <TextListItem component=\\\"dt\\\">Cloudforms Version</TextListItem>\\n            <TextListItem component=\\\"dd\\\">4.1</TextListItem>\\n            <TextListItem component=\\\"dt\\\">Server Name</TextListItem>\\n            <TextListItem component=\\\"dd\\\">40DemoMaster</TextListItem>\\n            <TextListItem component=\\\"dt\\\">User Name</TextListItem>\\n            <TextListItem component=\\\"dd\\\">Administrator</TextListItem>\\n            <TextListItem component=\\\"dt\\\">User Role</TextListItem>\\n            <TextListItem component=\\\"dd\\\">EvmRole-super_administrator</TextListItem>\\n            <TextListItem component=\\\"dt\\\">Browser Version</TextListItem>\\n            <TextListItem component=\\\"dd\\\">601.2</TextListItem>\\n            <TextListItem component=\\\"dt\\\">Browser OS</TextListItem>\\n            <TextListItem component=\\\"dd\\\">Mac</TextListItem>\\n          </TextList>\\n        </TextContent>\\n      </AboutModal>\\n    </React.Fragment>\\n  );\\n};\\n\",\n      \"title\": \"Complex user positioned content\",\n      \"lang\": \"ts\"\n    }));\n  },\n  'Custom background image': function CustomBackgroundImage(props) {\n    return /*#__PURE__*/React.createElement(Example, _extends({}, pageData, props, {\n      \"code\": \"import React from 'react';\\nimport { AboutModal, Button, TextContent, TextList, TextListItem } from '@patternfly/react-core';\\nimport brandImg from './brandImg.svg';\\nimport bgImg from './patternfly-orb.svg';\\n\\nexport const AboutModalCustomBackgroundImage: React.FunctionComponent = () => {\\n  const [isModalOpen, setIsModalOpen] = React.useState(false);\\n\\n  const toggleModal = () => {\\n    setIsModalOpen(!isModalOpen);\\n  };\\n\\n  return (\\n    <React.Fragment>\\n      <Button variant=\\\"primary\\\" onClick={toggleModal}>\\n        Show about modal\\n      </Button>\\n      <AboutModal\\n        isOpen={isModalOpen}\\n        onClose={toggleModal}\\n        trademark=\\\"Trademark and copyright information here\\\"\\n        brandImageSrc={brandImg}\\n        brandImageAlt=\\\"Patternfly Logo\\\"\\n        backgroundImageSrc={bgImg}\\n      >\\n        <TextContent>\\n          <TextList component=\\\"dl\\\">\\n            <TextListItem component=\\\"dt\\\">CFME Version</TextListItem>\\n            <TextListItem component=\\\"dd\\\">5.5.3.4.20102789036450</TextListItem>\\n          </TextList>\\n        </TextContent>\\n      </AboutModal>\\n    </React.Fragment>\\n  );\\n};\\n\",\n      \"title\": \"Custom background image\",\n      \"lang\": \"ts\"\n    }));\n  }\n};\n\nvar Component = function Component() {\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(AutoLinkHeader, {\n    \"id\": \"examples\",\n    \"size\": \"h2\",\n    \"className\": \"ws-title ws-h2\"\n  }, \"Examples\"), React.createElement(pageData.examples[\"Basic\"]), React.createElement(pageData.examples[\"Without product name\"]), React.createElement(pageData.examples[\"Complex user positioned content\"]), React.createElement(pageData.examples[\"Custom background image\"]));\n};\n\nComponent.displayName = 'ComponentsAboutModalReactDocs';\nComponent.pageData = pageData;\nexport default Component;","map":{"version":3,"names":["React","AutoLinkHeader","Example","Link","PatternflyThemeLink","brandImg","bgImg","pageData","liveContext","examples","props","Component","createElement","displayName"],"sources":["/Users/jschuler/Code/patternfly-quickstarts/packages/docs/src/generated/components/about-modal/react.js"],"sourcesContent":["import React from 'react';\nimport { AutoLinkHeader, Example, Link as PatternflyThemeLink } from 'theme-patternfly-org/components';\nimport brandImg from '../../../../node_modules/@patternfly/react-core/src/components/AboutModal/examples/./brandImg.svg';\nimport bgImg from '../../../../node_modules/@patternfly/react-core/src/components/AboutModal/examples/./patternfly-orb.svg';\nconst pageData = {\n  \"id\": \"About modal\",\n  \"section\": \"components\",\n  \"source\": \"react\",\n  \"slug\": \"/components/about-modal/react\",\n  \"sourceLink\": \"https://github.com/patternfly/patternfly-react/blob/main/packages/docs/packages/react-core/src/components/AboutModal/examples/AboutModal.md\",\n  \"propComponents\": [\n    {\n      \"name\": \"AboutModal\",\n      \"description\": \"\",\n      \"props\": [\n        {\n          \"name\": \"appendTo\",\n          \"type\": \"HTMLElement | (() => HTMLElement)\",\n          \"description\": \"The parent container to append the modal to. Defaults to document.body\",\n          \"defaultValue\": \"null\"\n        },\n        {\n          \"name\": \"backgroundImageSrc\",\n          \"type\": \"string\",\n          \"description\": \"The URL of the image for the background\",\n          \"defaultValue\": \"''\"\n        },\n        {\n          \"name\": \"brandImageAlt\",\n          \"type\": \"string\",\n          \"description\": \"The alternate text of the brand image\",\n          \"required\": true\n        },\n        {\n          \"name\": \"brandImageSrc\",\n          \"type\": \"string\",\n          \"description\": \"The URL of the image for the brand\",\n          \"required\": true\n        },\n        {\n          \"name\": \"children\",\n          \"type\": \"React.ReactNode\",\n          \"description\": \"Content rendered inside the about modal\",\n          \"required\": true\n        },\n        {\n          \"name\": \"className\",\n          \"type\": \"string\",\n          \"description\": \"Additional classes added to the about modal\",\n          \"defaultValue\": \"''\"\n        },\n        {\n          \"name\": \"closeButtonAriaLabel\",\n          \"type\": \"string\",\n          \"description\": \"Set aria label to the close button\"\n        },\n        {\n          \"name\": \"disableFocusTrap\",\n          \"type\": \"boolean\",\n          \"description\": \"Flag to disable focus trap\"\n        },\n        {\n          \"name\": \"isOpen\",\n          \"type\": \"boolean\",\n          \"description\": \"Flag to show the about modal\",\n          \"defaultValue\": \"false\"\n        },\n        {\n          \"name\": \"noAboutModalBoxContentContainer\",\n          \"type\": \"boolean\",\n          \"description\": \"Prevents the about modal from rendering content inside a container; allows for more flexible layouts\",\n          \"defaultValue\": \"false\"\n        },\n        {\n          \"name\": \"onClose\",\n          \"type\": \"() => void\",\n          \"description\": \"A callback for when the close button is clicked\",\n          \"defaultValue\": \"(): any => undefined\"\n        },\n        {\n          \"name\": \"productName\",\n          \"type\": \"string\",\n          \"description\": \"Product name\",\n          \"defaultValue\": \"''\"\n        },\n        {\n          \"name\": \"trademark\",\n          \"type\": \"string\",\n          \"description\": \"Trademark information\",\n          \"defaultValue\": \"''\"\n        }\n      ]\n    }\n  ],\n  \"cssPrefix\": [\n    \"pf-c-about-modal-box\"\n  ],\n  \"examples\": [\n    \"Basic\",\n    \"Without product name\",\n    \"Complex user positioned content\",\n    \"Custom background image\"\n  ]\n};\npageData.liveContext = {\n  brandImg,\n  bgImg\n};\npageData.examples = {\n  'Basic': props => \n    <Example {...pageData} {...props} {...{\"code\":\"import React from 'react';\\nimport { AboutModal, Button, TextContent, TextList, TextListItem } from '@patternfly/react-core';\\nimport brandImg from './brandImg.svg';\\n\\nexport const AboutModalBasic: React.FunctionComponent = () => {\\n  const [isModalOpen, setIsModalOpen] = React.useState(false);\\n\\n  const toggleModal = () => {\\n    setIsModalOpen(!isModalOpen);\\n  };\\n\\n  return (\\n    <React.Fragment>\\n      <Button variant=\\\"primary\\\" onClick={toggleModal}>\\n        Show about modal\\n      </Button>\\n      <AboutModal\\n        isOpen={isModalOpen}\\n        onClose={toggleModal}\\n        trademark=\\\"Trademark and copyright information here\\\"\\n        brandImageSrc={brandImg}\\n        brandImageAlt=\\\"Patternfly Logo\\\"\\n        productName=\\\"Product Name\\\"\\n      >\\n        <TextContent>\\n          <TextList component=\\\"dl\\\">\\n            <TextListItem component=\\\"dt\\\">CFME Version</TextListItem>\\n            <TextListItem component=\\\"dd\\\">5.5.3.4.20102789036450</TextListItem>\\n            <TextListItem component=\\\"dt\\\">Cloudforms Version</TextListItem>\\n            <TextListItem component=\\\"dd\\\">4.1</TextListItem>\\n            <TextListItem component=\\\"dt\\\">Server Name</TextListItem>\\n            <TextListItem component=\\\"dd\\\">40DemoMaster</TextListItem>\\n            <TextListItem component=\\\"dt\\\">User Name</TextListItem>\\n            <TextListItem component=\\\"dd\\\">Administrator</TextListItem>\\n            <TextListItem component=\\\"dt\\\">User Role</TextListItem>\\n            <TextListItem component=\\\"dd\\\">EvmRole-super_administrator</TextListItem>\\n            <TextListItem component=\\\"dt\\\">Browser Version</TextListItem>\\n            <TextListItem component=\\\"dd\\\">601.2</TextListItem>\\n            <TextListItem component=\\\"dt\\\">Browser OS</TextListItem>\\n            <TextListItem component=\\\"dd\\\">Mac</TextListItem>\\n          </TextList>\\n        </TextContent>\\n      </AboutModal>\\n    </React.Fragment>\\n  );\\n};\\n\",\"title\":\"Basic\",\"lang\":\"ts\"}}>\n      \n    </Example>,\n  'Without product name': props => \n    <Example {...pageData} {...props} {...{\"code\":\"import React from 'react';\\nimport { AboutModal, Button, TextContent, TextList, TextListItem } from '@patternfly/react-core';\\nimport brandImg from './brandImg.svg';\\n\\nexport const AboutModalWithoutProductName: React.FunctionComponent = () => {\\n  const [isModalOpen, setIsModalOpen] = React.useState(false);\\n\\n  const toggleModal = () => {\\n    setIsModalOpen(!isModalOpen);\\n  };\\n\\n  return (\\n    <React.Fragment>\\n      <Button variant=\\\"primary\\\" onClick={toggleModal}>\\n        Show about modal\\n      </Button>\\n      <AboutModal\\n        isOpen={isModalOpen}\\n        onClose={toggleModal}\\n        trademark=\\\"Trademark and copyright information here\\\"\\n        brandImageSrc={brandImg}\\n        brandImageAlt=\\\"Patternfly Logo\\\"\\n      >\\n        <TextContent>\\n          <TextList component=\\\"dl\\\">\\n            <TextListItem component=\\\"dt\\\">CFME Version</TextListItem>\\n            <TextListItem component=\\\"dd\\\">5.5.3.4.20102789036450</TextListItem>\\n            <TextListItem component=\\\"dt\\\">Cloudforms Version</TextListItem>\\n            <TextListItem component=\\\"dd\\\">4.1</TextListItem>\\n            <TextListItem component=\\\"dt\\\">Server Name</TextListItem>\\n            <TextListItem component=\\\"dd\\\">40DemoMaster</TextListItem>\\n            <TextListItem component=\\\"dt\\\">User Name</TextListItem>\\n            <TextListItem component=\\\"dd\\\">Administrator</TextListItem>\\n            <TextListItem component=\\\"dt\\\">User Role</TextListItem>\\n            <TextListItem component=\\\"dd\\\">EvmRole-super_administrator</TextListItem>\\n            <TextListItem component=\\\"dt\\\">Browser Version</TextListItem>\\n            <TextListItem component=\\\"dd\\\">601.2</TextListItem>\\n            <TextListItem component=\\\"dt\\\">Browser OS</TextListItem>\\n            <TextListItem component=\\\"dd\\\">Mac</TextListItem>\\n          </TextList>\\n        </TextContent>\\n      </AboutModal>\\n    </React.Fragment>\\n  );\\n};\\n\",\"title\":\"Without product name\",\"lang\":\"ts\"}}>\n      \n    </Example>,\n  'Complex user positioned content': props => \n    <Example {...pageData} {...props} {...{\"code\":\"import React from 'react';\\nimport { AboutModal, Alert, Button, TextContent, TextList, TextListItem } from '@patternfly/react-core';\\nimport brandImg from './brandImg.svg';\\n\\nexport const AboutModalComplexUserPositionedContent: React.FunctionComponent = () => {\\n  const [isModalOpen, setIsModalOpen] = React.useState(false);\\n\\n  const toggleModal = () => {\\n    setIsModalOpen(!isModalOpen);\\n  };\\n\\n  return (\\n    <React.Fragment>\\n      <Button variant=\\\"primary\\\" onClick={toggleModal}>\\n        Show about modal\\n      </Button>\\n      <AboutModal\\n        isOpen={isModalOpen}\\n        onClose={toggleModal}\\n        trademark=\\\"Trademark and copyright information here\\\"\\n        brandImageSrc={brandImg}\\n        brandImageAlt=\\\"Patternfly Logo\\\"\\n        noAboutModalBoxContentContainer={true}\\n        productName=\\\"Product Name\\\"\\n      >\\n        <TextContent id=\\\"test1\\\" className=\\\"pf-u-py-xl\\\">\\n          <h4>About</h4>\\n          <p>Content here</p>\\n        </TextContent>\\n        <Alert variant=\\\"info\\\" title=\\\"Updates available\\\" />\\n        <TextContent id=\\\"test2\\\" className=\\\"pf-u-py-xl\\\">\\n          <TextList component=\\\"dl\\\">\\n            <TextListItem component=\\\"dt\\\">CFME Version</TextListItem>\\n            <TextListItem component=\\\"dd\\\">5.5.3.4.20102789036450</TextListItem>\\n            <TextListItem component=\\\"dt\\\">Cloudforms Version</TextListItem>\\n            <TextListItem component=\\\"dd\\\">4.1</TextListItem>\\n            <TextListItem component=\\\"dt\\\">Server Name</TextListItem>\\n            <TextListItem component=\\\"dd\\\">40DemoMaster</TextListItem>\\n            <TextListItem component=\\\"dt\\\">User Name</TextListItem>\\n            <TextListItem component=\\\"dd\\\">Administrator</TextListItem>\\n            <TextListItem component=\\\"dt\\\">User Role</TextListItem>\\n            <TextListItem component=\\\"dd\\\">EvmRole-super_administrator</TextListItem>\\n            <TextListItem component=\\\"dt\\\">Browser Version</TextListItem>\\n            <TextListItem component=\\\"dd\\\">601.2</TextListItem>\\n            <TextListItem component=\\\"dt\\\">Browser OS</TextListItem>\\n            <TextListItem component=\\\"dd\\\">Mac</TextListItem>\\n          </TextList>\\n        </TextContent>\\n      </AboutModal>\\n    </React.Fragment>\\n  );\\n};\\n\",\"title\":\"Complex user positioned content\",\"lang\":\"ts\"}}>\n      \n    </Example>,\n  'Custom background image': props => \n    <Example {...pageData} {...props} {...{\"code\":\"import React from 'react';\\nimport { AboutModal, Button, TextContent, TextList, TextListItem } from '@patternfly/react-core';\\nimport brandImg from './brandImg.svg';\\nimport bgImg from './patternfly-orb.svg';\\n\\nexport const AboutModalCustomBackgroundImage: React.FunctionComponent = () => {\\n  const [isModalOpen, setIsModalOpen] = React.useState(false);\\n\\n  const toggleModal = () => {\\n    setIsModalOpen(!isModalOpen);\\n  };\\n\\n  return (\\n    <React.Fragment>\\n      <Button variant=\\\"primary\\\" onClick={toggleModal}>\\n        Show about modal\\n      </Button>\\n      <AboutModal\\n        isOpen={isModalOpen}\\n        onClose={toggleModal}\\n        trademark=\\\"Trademark and copyright information here\\\"\\n        brandImageSrc={brandImg}\\n        brandImageAlt=\\\"Patternfly Logo\\\"\\n        backgroundImageSrc={bgImg}\\n      >\\n        <TextContent>\\n          <TextList component=\\\"dl\\\">\\n            <TextListItem component=\\\"dt\\\">CFME Version</TextListItem>\\n            <TextListItem component=\\\"dd\\\">5.5.3.4.20102789036450</TextListItem>\\n          </TextList>\\n        </TextContent>\\n      </AboutModal>\\n    </React.Fragment>\\n  );\\n};\\n\",\"title\":\"Custom background image\",\"lang\":\"ts\"}}>\n      \n    </Example>\n};\n\nconst Component = () => (\n  <React.Fragment>\n    <AutoLinkHeader {...{\"id\":\"examples\",\"size\":\"h2\",\"className\":\"ws-title ws-h2\"}}>\n      {`Examples`}\n    </AutoLinkHeader>\n    {React.createElement(pageData.examples[\"Basic\"])}\n    {React.createElement(pageData.examples[\"Without product name\"])}\n    {React.createElement(pageData.examples[\"Complex user positioned content\"])}\n    {React.createElement(pageData.examples[\"Custom background image\"])}\n  </React.Fragment>\n);\nComponent.displayName = 'ComponentsAboutModalReactDocs';\nComponent.pageData = pageData;\n\nexport default Component;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}