{"ast":null,"code":"function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport { AutoLinkHeader, Example, Link as PatternflyThemeLink } from 'theme-patternfly-org/components';\nvar pageData = {\n  \"id\": \"Spinner\",\n  \"section\": \"components\",\n  \"source\": \"react\",\n  \"slug\": \"/components/spinner/react\",\n  \"sourceLink\": \"https://github.com/patternfly/patternfly-react/blob/main/packages/docs/packages/react-core/src/components/Spinner/examples/Spinner.md\",\n  \"propComponents\": [{\n    \"name\": \"Spinner\",\n    \"description\": \"\",\n    \"props\": [{\n      \"name\": \"aria-label\",\n      \"type\": \"string\",\n      \"description\": \"Accessible label to describe what is loading\"\n    }, {\n      \"name\": \"aria-labelledBy\",\n      \"type\": \"string\",\n      \"description\": \"Id of element which describes what is being loaded\"\n    }, {\n      \"name\": \"aria-valuetext\",\n      \"type\": \"string\",\n      \"description\": \"Text describing that current loading status or progress\",\n      \"defaultValue\": \"'Loading...'\"\n    }, {\n      \"name\": \"className\",\n      \"type\": \"string\",\n      \"description\": \"Additional classes added to the Spinner.\",\n      \"defaultValue\": \"''\"\n    }, {\n      \"name\": \"diameter\",\n      \"type\": \"string\",\n      \"description\": \"Diameter of spinner set as CSS variable\"\n    }, {\n      \"name\": \"isSVG\",\n      \"type\": \"boolean\",\n      \"description\": \"Whether to use an SVG (new) rather than a span (old)\",\n      \"defaultValue\": \"false\"\n    }, {\n      \"name\": \"size\",\n      \"type\": \"'sm' | 'md' | 'lg' | 'xl'\",\n      \"description\": \"Size variant of progress.\",\n      \"defaultValue\": \"'xl'\"\n    }]\n  }],\n  \"cssPrefix\": [\"pf-c-spinner\"],\n  \"examples\": [\"Basic\", \"Size variations\", \"Custom size\"]\n};\npageData.examples = {\n  'Basic': function Basic(props) {\n    return /*#__PURE__*/React.createElement(Example, _extends({}, pageData, props, {\n      \"code\": \"import React from 'react';\\nimport { Spinner } from '@patternfly/react-core';\\n\\nconst Basic = () => <Spinner isSVG aria-label=\\\"Contents of the basic example\\\"/>\",\n      \"title\": \"Basic\",\n      \"lang\": \"js\"\n    }));\n  },\n  'Size variations': function SizeVariations(props) {\n    return /*#__PURE__*/React.createElement(Example, _extends({}, pageData, props, {\n      \"code\": \"import React from 'react';\\nimport { Spinner } from '@patternfly/react-core';\\n\\nconst SizeVariations = () => (\\n  <React.Fragment>\\n    <Spinner isSVG size=\\\"sm\\\" aria-label=\\\"Contents of the small example\\\"/>\\n    <Spinner isSVG size=\\\"md\\\" aria-label=\\\"Contents of the medium example\\\"/>\\n    <Spinner isSVG size=\\\"lg\\\" aria-label=\\\"Contents of the large example\\\"/>\\n    <Spinner isSVG size=\\\"xl\\\" aria-label=\\\"Contents of the extra large example\\\"/>\\n  </React.Fragment>\\n)\",\n      \"title\": \"Size variations\",\n      \"lang\": \"js\"\n    }));\n  },\n  'Custom size': function CustomSize(props) {\n    return /*#__PURE__*/React.createElement(Example, _extends({}, pageData, props, {\n      \"code\": \"import React from 'react';\\nimport { Spinner } from '@patternfly/react-core';\\n\\nconst CustomSize = () => <Spinner isSVG diameter=\\\"80px\\\" aria-label=\\\"Contents of the custom size example\\\"/>\",\n      \"title\": \"Custom size\",\n      \"lang\": \"js\"\n    }));\n  }\n};\n\nvar Component = function Component() {\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(AutoLinkHeader, {\n    \"id\": \"examples\",\n    \"size\": \"h2\",\n    \"className\": \"ws-title ws-h2\"\n  }, \"Examples\"), React.createElement(pageData.examples[\"Basic\"]), React.createElement(pageData.examples[\"Size variations\"]), React.createElement(pageData.examples[\"Custom size\"]));\n};\n\nComponent.displayName = 'ComponentsSpinnerReactDocs';\nComponent.pageData = pageData;\nexport default Component;","map":{"version":3,"names":["React","AutoLinkHeader","Example","Link","PatternflyThemeLink","pageData","examples","props","Component","createElement","displayName"],"sources":["/Users/jschuler/Code/patternfly-quickstarts/packages/docs/src/generated/components/spinner/react.js"],"sourcesContent":["import React from 'react';\nimport { AutoLinkHeader, Example, Link as PatternflyThemeLink } from 'theme-patternfly-org/components';\n\nconst pageData = {\n  \"id\": \"Spinner\",\n  \"section\": \"components\",\n  \"source\": \"react\",\n  \"slug\": \"/components/spinner/react\",\n  \"sourceLink\": \"https://github.com/patternfly/patternfly-react/blob/main/packages/docs/packages/react-core/src/components/Spinner/examples/Spinner.md\",\n  \"propComponents\": [\n    {\n      \"name\": \"Spinner\",\n      \"description\": \"\",\n      \"props\": [\n        {\n          \"name\": \"aria-label\",\n          \"type\": \"string\",\n          \"description\": \"Accessible label to describe what is loading\"\n        },\n        {\n          \"name\": \"aria-labelledBy\",\n          \"type\": \"string\",\n          \"description\": \"Id of element which describes what is being loaded\"\n        },\n        {\n          \"name\": \"aria-valuetext\",\n          \"type\": \"string\",\n          \"description\": \"Text describing that current loading status or progress\",\n          \"defaultValue\": \"'Loading...'\"\n        },\n        {\n          \"name\": \"className\",\n          \"type\": \"string\",\n          \"description\": \"Additional classes added to the Spinner.\",\n          \"defaultValue\": \"''\"\n        },\n        {\n          \"name\": \"diameter\",\n          \"type\": \"string\",\n          \"description\": \"Diameter of spinner set as CSS variable\"\n        },\n        {\n          \"name\": \"isSVG\",\n          \"type\": \"boolean\",\n          \"description\": \"Whether to use an SVG (new) rather than a span (old)\",\n          \"defaultValue\": \"false\"\n        },\n        {\n          \"name\": \"size\",\n          \"type\": \"'sm' | 'md' | 'lg' | 'xl'\",\n          \"description\": \"Size variant of progress.\",\n          \"defaultValue\": \"'xl'\"\n        }\n      ]\n    }\n  ],\n  \"cssPrefix\": [\n    \"pf-c-spinner\"\n  ],\n  \"examples\": [\n    \"Basic\",\n    \"Size variations\",\n    \"Custom size\"\n  ]\n};\npageData.examples = {\n  'Basic': props => \n    <Example {...pageData} {...props} {...{\"code\":\"import React from 'react';\\nimport { Spinner } from '@patternfly/react-core';\\n\\nconst Basic = () => <Spinner isSVG aria-label=\\\"Contents of the basic example\\\"/>\",\"title\":\"Basic\",\"lang\":\"js\"}}>\n      \n    </Example>,\n  'Size variations': props => \n    <Example {...pageData} {...props} {...{\"code\":\"import React from 'react';\\nimport { Spinner } from '@patternfly/react-core';\\n\\nconst SizeVariations = () => (\\n  <React.Fragment>\\n    <Spinner isSVG size=\\\"sm\\\" aria-label=\\\"Contents of the small example\\\"/>\\n    <Spinner isSVG size=\\\"md\\\" aria-label=\\\"Contents of the medium example\\\"/>\\n    <Spinner isSVG size=\\\"lg\\\" aria-label=\\\"Contents of the large example\\\"/>\\n    <Spinner isSVG size=\\\"xl\\\" aria-label=\\\"Contents of the extra large example\\\"/>\\n  </React.Fragment>\\n)\",\"title\":\"Size variations\",\"lang\":\"js\"}}>\n      \n    </Example>,\n  'Custom size': props => \n    <Example {...pageData} {...props} {...{\"code\":\"import React from 'react';\\nimport { Spinner } from '@patternfly/react-core';\\n\\nconst CustomSize = () => <Spinner isSVG diameter=\\\"80px\\\" aria-label=\\\"Contents of the custom size example\\\"/>\",\"title\":\"Custom size\",\"lang\":\"js\"}}>\n      \n    </Example>\n};\n\nconst Component = () => (\n  <React.Fragment>\n    <AutoLinkHeader {...{\"id\":\"examples\",\"size\":\"h2\",\"className\":\"ws-title ws-h2\"}}>\n      {`Examples`}\n    </AutoLinkHeader>\n    {React.createElement(pageData.examples[\"Basic\"])}\n    {React.createElement(pageData.examples[\"Size variations\"])}\n    {React.createElement(pageData.examples[\"Custom size\"])}\n  </React.Fragment>\n);\nComponent.displayName = 'ComponentsSpinnerReactDocs';\nComponent.pageData = pageData;\n\nexport default Component;\n"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,EAAyBC,OAAzB,EAAkCC,IAAI,IAAIC,mBAA1C,QAAqE,iCAArE;AAEA,IAAMC,QAAQ,GAAG;EACf,MAAM,SADS;EAEf,WAAW,YAFI;EAGf,UAAU,OAHK;EAIf,QAAQ,2BAJO;EAKf,cAAc,uIALC;EAMf,kBAAkB,CAChB;IACE,QAAQ,SADV;IAEE,eAAe,EAFjB;IAGE,SAAS,CACP;MACE,QAAQ,YADV;MAEE,QAAQ,QAFV;MAGE,eAAe;IAHjB,CADO,EAMP;MACE,QAAQ,iBADV;MAEE,QAAQ,QAFV;MAGE,eAAe;IAHjB,CANO,EAWP;MACE,QAAQ,gBADV;MAEE,QAAQ,QAFV;MAGE,eAAe,yDAHjB;MAIE,gBAAgB;IAJlB,CAXO,EAiBP;MACE,QAAQ,WADV;MAEE,QAAQ,QAFV;MAGE,eAAe,0CAHjB;MAIE,gBAAgB;IAJlB,CAjBO,EAuBP;MACE,QAAQ,UADV;MAEE,QAAQ,QAFV;MAGE,eAAe;IAHjB,CAvBO,EA4BP;MACE,QAAQ,OADV;MAEE,QAAQ,SAFV;MAGE,eAAe,sDAHjB;MAIE,gBAAgB;IAJlB,CA5BO,EAkCP;MACE,QAAQ,MADV;MAEE,QAAQ,2BAFV;MAGE,eAAe,2BAHjB;MAIE,gBAAgB;IAJlB,CAlCO;EAHX,CADgB,CANH;EAqDf,aAAa,CACX,cADW,CArDE;EAwDf,YAAY,CACV,OADU,EAEV,iBAFU,EAGV,aAHU;AAxDG,CAAjB;AA8DAA,QAAQ,CAACC,QAAT,GAAoB;EAClB,SAAS,eAAAC,KAAK;IAAA,oBACZ,oBAAC,OAAD,eAAaF,QAAb,EAA2BE,KAA3B;MAAuC,QAAO,oKAA9C;MAAmN,SAAQ,OAA3N;MAAmO,QAAO;IAA1O,GADY;EAAA,CADI;EAKlB,mBAAmB,wBAAAA,KAAK;IAAA,oBACtB,oBAAC,OAAD,eAAaF,QAAb,EAA2BE,KAA3B;MAAuC,QAAO,geAA9C;MAA+gB,SAAQ,iBAAvhB;MAAyiB,QAAO;IAAhjB,GADsB;EAAA,CALN;EASlB,eAAe,oBAAAA,KAAK;IAAA,oBAClB,oBAAC,OAAD,eAAaF,QAAb,EAA2BE,KAA3B;MAAuC,QAAO,iMAA9C;MAAgP,SAAQ,aAAxP;MAAsQ,QAAO;IAA7Q,GADkB;EAAA;AATF,CAApB;;AAeA,IAAMC,SAAS,GAAG,SAAZA,SAAY;EAAA,oBAChB,oBAAC,KAAD,CAAO,QAAP,qBACE,oBAAC,cAAD;IAAqB,MAAK,UAA1B;IAAqC,QAAO,IAA5C;IAAiD,aAAY;EAA7D,cADF,EAIGR,KAAK,CAACS,aAAN,CAAoBJ,QAAQ,CAACC,QAAT,CAAkB,OAAlB,CAApB,CAJH,EAKGN,KAAK,CAACS,aAAN,CAAoBJ,QAAQ,CAACC,QAAT,CAAkB,iBAAlB,CAApB,CALH,EAMGN,KAAK,CAACS,aAAN,CAAoBJ,QAAQ,CAACC,QAAT,CAAkB,aAAlB,CAApB,CANH,CADgB;AAAA,CAAlB;;AAUAE,SAAS,CAACE,WAAV,GAAwB,4BAAxB;AACAF,SAAS,CAACH,QAAV,GAAqBA,QAArB;AAEA,eAAeG,SAAf"},"metadata":{},"sourceType":"module"}