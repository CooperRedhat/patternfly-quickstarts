{"ast":null,"code":"function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport { AutoLinkHeader, Example, Link as PatternflyThemeLink } from 'theme-patternfly-org/components';\nimport '../../../../node_modules/@patternfly/react-core/src/components/Nav/examples/./nav.css';\nvar pageData = {\n  \"id\": \"Navigation\",\n  \"section\": \"components\",\n  \"source\": \"react\",\n  \"slug\": \"/components/navigation/react\",\n  \"sourceLink\": \"https://github.com/patternfly/patternfly-react/blob/main/packages/docs/packages/react-core/src/components/Nav/examples/Nav.md\",\n  \"propComponents\": [{\n    \"name\": \"Nav\",\n    \"description\": \"\",\n    \"props\": [{\n      \"name\": \"aria-label\",\n      \"type\": \"string\",\n      \"description\": \"Accessibility label\"\n    }, {\n      \"name\": \"children\",\n      \"type\": \"React.ReactNode\",\n      \"description\": \"Anything that can be rendered inside of the nav\"\n    }, {\n      \"name\": \"className\",\n      \"type\": \"string\",\n      \"description\": \"Additional classes added to the container\"\n    }, {\n      \"name\": \"onSelect\",\n      \"type\": \"(selectedItem: {\\n  groupId: number | string;\\n  itemId: number | string;\\n  to: string;\\n  event: React.FormEvent<HTMLInputElement>;\\n}) => void\",\n      \"description\": \"Callback for updating when item selection changes\",\n      \"defaultValue\": \"() => undefined\"\n    }, {\n      \"name\": \"onToggle\",\n      \"type\": \"(toggledItem: {\\n  groupId: number | string;\\n  isExpanded: boolean;\\n  event: React.MouseEvent<HTMLButtonElement>;\\n}) => void\",\n      \"description\": \"Callback for when a list is expanded or collapsed\",\n      \"defaultValue\": \"() => undefined\"\n    }, {\n      \"name\": \"ouiaSafe\",\n      \"type\": \"No type info\",\n      \"defaultValue\": \"true\"\n    }, {\n      \"name\": \"theme\",\n      \"type\": \"'dark' | 'light'\",\n      \"description\": \"Indicates which theme color to use\",\n      \"defaultValue\": \"'dark'\"\n    }, {\n      \"name\": \"variant\",\n      \"type\": \"'default' | 'horizontal' | 'tertiary' | 'horizontal-subnav'\",\n      \"description\": \"For horizontal navs\"\n    }]\n  }, {\n    \"name\": \"NavList\",\n    \"description\": \"\",\n    \"props\": [{\n      \"name\": \"ariaLeftScroll\",\n      \"type\": \"string\",\n      \"description\": \"Aria-label for the left scroll button\",\n      \"defaultValue\": \"'Scroll left'\"\n    }, {\n      \"name\": \"ariaRightScroll\",\n      \"type\": \"string\",\n      \"description\": \"Aria-label for the right scroll button\",\n      \"defaultValue\": \"'Scroll right'\"\n    }, {\n      \"name\": \"children\",\n      \"type\": \"React.ReactNode\",\n      \"description\": \"Children nodes\"\n    }, {\n      \"name\": \"className\",\n      \"type\": \"string\",\n      \"description\": \"Additional classes added to the list\"\n    }]\n  }, {\n    \"name\": \"NavGroup\",\n    \"description\": \"\",\n    \"props\": [{\n      \"name\": \"children\",\n      \"type\": \"React.ReactNode\",\n      \"description\": \"Anything that can be rendered inside of the group\",\n      \"defaultValue\": \"null\"\n    }, {\n      \"name\": \"className\",\n      \"type\": \"string\",\n      \"description\": \"Additional classes added to the container\",\n      \"defaultValue\": \"''\"\n    }, {\n      \"name\": \"id\",\n      \"type\": \"string\",\n      \"description\": \"Identifier to use for the section aria label\",\n      \"defaultValue\": \"getUniqueId()\"\n    }, {\n      \"name\": \"title\",\n      \"type\": \"string\",\n      \"description\": \"Title shown for the group\"\n    }]\n  }, {\n    \"name\": \"NavItem\",\n    \"description\": \"\",\n    \"props\": [{\n      \"name\": \"children\",\n      \"type\": \"React.ReactNode\",\n      \"description\": \"Content rendered inside the nav item.\"\n    }, {\n      \"name\": \"className\",\n      \"type\": \"string\",\n      \"description\": \"Additional classes added to the nav item\"\n    }, {\n      \"name\": \"component\",\n      \"type\": \"React.ReactNode\",\n      \"description\": \"Component used to render NavItems if  React.isValidElement(children) is false\",\n      \"defaultValue\": \"'a'\"\n    }, {\n      \"name\": \"flyout\",\n      \"type\": \"React.ReactElement\",\n      \"description\": \"Flyout of a nav item. This should be a Menu component.\"\n    }, {\n      \"name\": \"groupId\",\n      \"type\": \"string | number | null\",\n      \"description\": \"Group identifier, will be returned with the onToggle and onSelect callback passed to the Nav component\",\n      \"defaultValue\": \"null\"\n    }, {\n      \"name\": \"isActive\",\n      \"type\": \"boolean\",\n      \"description\": \"Flag indicating whether the item is active\",\n      \"defaultValue\": \"false\"\n    }, {\n      \"name\": \"itemId\",\n      \"type\": \"string | number | null\",\n      \"description\": \"Item identifier, will be returned with the onToggle and onSelect callback passed to the Nav component\",\n      \"defaultValue\": \"null\"\n    }, {\n      \"name\": \"onClick\",\n      \"type\": \"NavSelectClickHandler\",\n      \"description\": \"Callback for item click\",\n      \"defaultValue\": \"null\"\n    }, {\n      \"name\": \"onShowFlyout\",\n      \"type\": \"() => void\",\n      \"description\": \"Callback when flyout is opened or closed\"\n    }, {\n      \"name\": \"preventDefault\",\n      \"type\": \"boolean\",\n      \"description\": \"If true prevents the default anchor link action to occur. Set to true if you want to handle navigation yourself.\",\n      \"defaultValue\": \"false\"\n    }, {\n      \"name\": \"styleChildren\",\n      \"type\": \"boolean\",\n      \"description\": \"Whether to set className on children when React.isValidElement(children)\",\n      \"defaultValue\": \"true\"\n    }, {\n      \"name\": \"to\",\n      \"type\": \"string\",\n      \"description\": \"Target navigation link\"\n    }]\n  }, {\n    \"name\": \"NavItemSeparator\",\n    \"description\": \"\",\n    \"props\": [{\n      \"name\": \"component\",\n      \"type\": \"No type info\",\n      \"defaultValue\": \"'li'\"\n    }]\n  }, {\n    \"name\": \"NavExpandable\",\n    \"description\": \"\",\n    \"props\": [{\n      \"name\": \"buttonProps\",\n      \"type\": \"any\",\n      \"description\": \"Additional props added to the NavExpandable <button>\"\n    }, {\n      \"name\": \"children\",\n      \"type\": \"React.ReactNode\",\n      \"description\": \"Anything that can be rendered inside of the expandable list\",\n      \"defaultValue\": \"''\"\n    }, {\n      \"name\": \"className\",\n      \"type\": \"string\",\n      \"description\": \"Additional classes added to the container\",\n      \"defaultValue\": \"''\"\n    }, {\n      \"name\": \"groupId\",\n      \"type\": \"string | number\",\n      \"description\": \"Group identifier, will be returned with the onToggle and onSelect callback passed to the Nav component\",\n      \"defaultValue\": \"null\"\n    }, {\n      \"name\": \"id\",\n      \"type\": \"string\",\n      \"description\": \"Identifier to use for the section aria label\",\n      \"defaultValue\": \"''\"\n    }, {\n      \"name\": \"isActive\",\n      \"type\": \"boolean\",\n      \"description\": \"If true makes the expandable list title active\",\n      \"defaultValue\": \"false\"\n    }, {\n      \"name\": \"isExpanded\",\n      \"type\": \"boolean\",\n      \"description\": \"Boolean to programatically expand or collapse section\",\n      \"defaultValue\": \"false\"\n    }, {\n      \"name\": \"onExpand\",\n      \"type\": \"(e: React.MouseEvent<HTMLButtonElement, MouseEvent>, val: boolean) => void\",\n      \"description\": \"allow consumer to optionally override this callback and manage expand state externally. if passed will not call Nav's onToggle.\"\n    }, {\n      \"name\": \"srText\",\n      \"type\": \"string\",\n      \"description\": \"If defined, screen readers will read this text instead of the list title\",\n      \"defaultValue\": \"''\"\n    }, {\n      \"name\": \"title\",\n      \"type\": \"string\",\n      \"description\": \"Title shown for the expandable list\",\n      \"required\": true\n    }]\n  }],\n  \"cssPrefix\": [\"pf-c-nav\"],\n  \"examples\": [\"Default\", \"Grouped\", \"Expandable\", \"Expandable (w/subnavigation titles)\", \"Expandable third level\", \"Mixed\", \"Horizontal (only in PageHeader)\", \"Horizontal subnav\", \"Legacy tertiary\", \"Flyout\", \"Drilldown\"]\n};\npageData.examples = {\n  'Default': function Default(props) {\n    return /*#__PURE__*/React.createElement(Example, _extends({}, pageData, props, {\n      \"code\": \"import React from 'react';\\nimport { Nav, NavExpandable, NavItem, NavItemSeparator, NavList, NavGroup } from '@patternfly/react-core';\\n\\nclass NavDefaultList extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      activeItem: 0\\n    };\\n    this.onSelect = result => {\\n      this.setState({\\n        activeItem: result.itemId\\n      });\\n    };\\n  }\\n\\n  render() {\\n    const { activeItem } = this.state;\\n    return (\\n      <Nav onSelect={this.onSelect}>\\n        <NavList>\\n          <NavItem id=\\\"default-link1\\\" to=\\\"#default-link1\\\" itemId={0} isActive={activeItem === 0}>\\n            Link 1\\n          </NavItem>\\n          <NavItem id=\\\"default-link2\\\" to=\\\"#default-link2\\\" itemId={1} isActive={activeItem === 1}>\\n            Link 2\\n          </NavItem>\\n          <NavItem id=\\\"default-link3\\\" to=\\\"#default-link3\\\" itemId={2} isActive={activeItem === 2}>\\n            Link 3\\n          </NavItem>\\n          <NavItem id=\\\"default-link4\\\" to=\\\"#default-link4\\\" itemId={3} isActive={activeItem === 3}>\\n            Link 4\\n          </NavItem>\\n        </NavList>\\n      </Nav>\\n    );\\n  }\\n}\",\n      \"title\": \"Default\",\n      \"lang\": \"js\"\n    }));\n  },\n  'Grouped': function Grouped(props) {\n    return /*#__PURE__*/React.createElement(Example, _extends({}, pageData, props, {\n      \"code\": \"import React from 'react';\\nimport { Nav, NavExpandable, NavItem, NavItemSeparator, NavList, NavGroup } from '@patternfly/react-core';\\n\\nclass NavGroupedList extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      activeItem: 'grp-1_itm-1'\\n    };\\n    this.onSelect = result => {\\n      this.setState({\\n        activeItem: result.itemId\\n      });\\n    };\\n  }\\n\\n  render() {\\n    const { activeItem } = this.state;\\n    return (\\n      <Nav onSelect={this.onSelect}>\\n        <NavGroup title=\\\"Section title 1\\\">\\n          <NavItem preventDefault to=\\\"#grouped-1\\\" itemId=\\\"grp-1_itm-1\\\" isActive={activeItem === 'grp-1_itm-1'}>\\n            Link 1\\n          </NavItem>\\n          <NavItem preventDefault to=\\\"#grouped-2\\\" itemId=\\\"grp-1_itm-2\\\" isActive={activeItem === 'grp-1_itm-2'}>\\n            Link 2\\n          </NavItem>\\n          <NavItem preventDefault to=\\\"#grouped-3\\\" itemId=\\\"grp-1_itm-3\\\" isActive={activeItem === 'grp-1_itm-3'}>\\n            Link 3\\n          </NavItem>\\n        </NavGroup>\\n        <NavGroup title=\\\"Section title 2\\\">\\n          <NavItem preventDefault to=\\\"#grouped-4\\\" itemId=\\\"grp-2_itm-1\\\" isActive={activeItem === 'grp-2_itm-1'}>\\n            Link 1\\n          </NavItem>\\n          <NavItem preventDefault to=\\\"#grouped-5\\\" itemId=\\\"grp-2_itm-2\\\" isActive={activeItem === 'grp-2_itm-2'}>\\n            Link 2\\n          </NavItem>\\n          <NavItem preventDefault to=\\\"#grouped-6\\\" itemId=\\\"grp-2_itm-3\\\" isActive={activeItem === 'grp-2_itm-3'}>\\n            Link 3\\n          </NavItem>\\n        </NavGroup>\\n      </Nav>\\n    );\\n  }\\n}\",\n      \"title\": \"Grouped\",\n      \"lang\": \"js\"\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      \"className\": \"ws-p\"\n    }, \"Note: to keep nav groups accessible an \", /*#__PURE__*/React.createElement(\"code\", {\n      \"className\": \"ws-code\"\n    }, \"aria-label\"), \" should be supplied if the \", /*#__PURE__*/React.createElement(\"code\", {\n      \"className\": \"ws-code\"\n    }, \"title\"), \" prop is not passed.\"));\n  },\n  'Expandable': function Expandable(props) {\n    return /*#__PURE__*/React.createElement(Example, _extends({}, pageData, props, {\n      \"code\": \"import React from 'react';\\nimport { Nav, NavExpandable, NavItem, NavItemSeparator, NavList, NavGroup } from '@patternfly/react-core';\\n\\nclass NavExpandableList extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      activeGroup: 'grp-1',\\n      activeItem: 'grp-1_itm-1'\\n    };\\n    this.onSelect = result => {\\n      this.setState({\\n        activeGroup: result.groupId,\\n        activeItem: result.itemId\\n      });\\n    };\\n    this.onToggle = result => {\\n      // eslint-disable-next-line no-console\\n      console.log(`Group ${result.groupId} expanded? ${result.isExpanded}`);\\n    };\\n    this.handleItemOnclick = (event, itemId, groupId) => {\\n      // eslint-disable-next-line no-console\\n      console.log(`my own click handler on ${itemId}`);\\n    };\\n  }\\n\\n  render() {\\n    const { activeGroup, activeItem } = this.state;\\n    return (\\n      <Nav onSelect={this.onSelect} onToggle={this.onToggle}>\\n        <NavList>\\n          <NavExpandable title=\\\"Link 1\\\" groupId=\\\"grp-1\\\" isActive={activeGroup === 'grp-1'} isExpanded>\\n            <NavItem\\n              preventDefault\\n              to=\\\"#expandable-1\\\"\\n              groupId=\\\"grp-1\\\"\\n              itemId=\\\"grp-1_itm-1\\\"\\n              isActive={activeItem === 'grp-1_itm-1'}\\n            >\\n              Subnav Link 1\\n            </NavItem>\\n            <NavItemSeparator />\\n            <NavItem preventDefault groupId=\\\"grp-1\\\" itemId=\\\"grp-1_itm-2\\\" isActive={activeItem === 'grp-1_itm-2'}>\\n              Subnav Link 2\\n            </NavItem>\\n            <NavItem to=\\\"#expandable-3\\\" groupId=\\\"grp-1\\\" itemId=\\\"grp-1_itm-3\\\" isActive={activeItem === 'grp-1_itm-3'}>\\n              Subnav Link 3\\n            </NavItem>\\n          </NavExpandable>\\n          <NavExpandable title=\\\"Link 2\\\" groupId=\\\"grp-2\\\" isActive={activeGroup === 'grp-2'} isExpanded>\\n            <NavItem\\n              preventDefault\\n              onClick={this.handleItemOnclick}\\n              groupId=\\\"grp-2\\\"\\n              itemId=\\\"own-item-handler\\\"\\n              isActive={activeItem === 'own-item-handler'}\\n            >\\n              Custom onClick\\n            </NavItem>\\n            <NavItem\\n              preventDefault\\n              to=\\\"#expandable-4\\\"\\n              groupId=\\\"grp-2\\\"\\n              itemId=\\\"grp-2_itm-1\\\"\\n              isActive={activeItem === 'grp-2_itm-1'}\\n            >\\n              Subnav Link 1\\n            </NavItem>\\n            <NavItem\\n              preventDefault\\n              to=\\\"#expandable-5\\\"\\n              groupId=\\\"grp-2\\\"\\n              itemId=\\\"grp-2_itm-2\\\"\\n              isActive={activeItem === 'grp-2_itm-2'}\\n            >\\n              Subnav Link 2\\n            </NavItem>\\n            <NavItem\\n              preventDefault\\n              to=\\\"#expandable-6\\\"\\n              groupId=\\\"grp-2\\\"\\n              itemId=\\\"grp-2_itm-3\\\"\\n              isActive={activeItem === 'grp-2_itm-3'}\\n            >\\n              Subnav Link 3\\n            </NavItem>\\n          </NavExpandable>\\n        </NavList>\\n      </Nav>\\n    );\\n  }\\n}\",\n      \"title\": \"Expandable\",\n      \"lang\": \"js\"\n    }));\n  },\n  'Expandable (w/subnavigation titles)': function ExpandableWSubnavigationTitles(props) {\n    return /*#__PURE__*/React.createElement(Example, _extends({}, pageData, props, {\n      \"code\": \"import React from 'react';\\nimport { Nav, NavExpandable, NavItem, NavItemSeparator, NavList, NavGroup } from '@patternfly/react-core';\\n\\nclass NavExpandableTitlesList extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      activeGroup: 'grp-1',\\n      activeItem: 'grp-1_itm-1'\\n    };\\n    this.onSelect = result => {\\n      this.setState({\\n        activeGroup: result.groupId,\\n        activeItem: result.itemId\\n      });\\n    };\\n  }\\n\\n  render() {\\n    const { activeGroup, activeItem } = this.state;\\n    return (\\n      <Nav onSelect={this.onSelect}>\\n        <NavList>\\n          <NavExpandable title=\\\"Link 1\\\" srText=\\\"SR Link\\\" groupId=\\\"grp-1\\\" isActive={activeGroup === 'grp-1'} isExpanded>\\n            <NavItem\\n              preventDefault\\n              to=\\\"#sr-expandable-1\\\"\\n              groupId=\\\"grp-1\\\"\\n              itemId=\\\"grp-1_itm-1\\\"\\n              isActive={activeItem === 'grp-1_itm-1'}\\n            >\\n              Subnav Link 1\\n            </NavItem>\\n            <NavItem\\n              preventDefault\\n              to=\\\"#sr-expandable-2\\\"\\n              groupId=\\\"grp-1\\\"\\n              itemId=\\\"grp-1_itm-2\\\"\\n              isActive={activeItem === 'grp-1_itm-2'}\\n            >\\n              Subnav Link 2\\n            </NavItem>\\n            <NavItem\\n              preventDefault\\n              to=\\\"#sr-expandable-3\\\"\\n              groupId=\\\"grp-1\\\"\\n              itemId=\\\"grp-1_itm-3\\\"\\n              isActive={activeItem === 'grp-1_itm-3'}\\n            >\\n              Subnav Link 3\\n            </NavItem>\\n          </NavExpandable>\\n          <NavExpandable title=\\\"Link 2\\\" srText=\\\"SR Link 2\\\" groupId=\\\"grp-2\\\" isActive={activeGroup === 'grp-2'}>\\n            <NavItem\\n              preventDefault\\n              to=\\\"#sr-expandable-4\\\"\\n              groupId=\\\"grp-2\\\"\\n              itemId=\\\"grp-2_itm-1\\\"\\n              isActive={activeItem === 'grp-2_itm-1'}\\n            >\\n              Subnav Link 1\\n            </NavItem>\\n            <NavItem\\n              preventDefault\\n              to=\\\"#sr-expandable-5\\\"\\n              groupId=\\\"grp-2\\\"\\n              itemId=\\\"grp-2_itm-2\\\"\\n              isActive={activeItem === 'grp-2_itm-2'}\\n            >\\n              Subnav Link 2\\n            </NavItem>\\n            <NavItem\\n              preventDefault\\n              to=\\\"#sr-expandable-6\\\"\\n              groupId=\\\"grp-2\\\"\\n              itemId=\\\"grp-2_itm-3\\\"\\n              isActive={activeItem === 'grp-2_itm-3'}\\n            >\\n              Subnav Link 3\\n            </NavItem>\\n          </NavExpandable>\\n        </NavList>\\n      </Nav>\\n    );\\n  }\\n}\",\n      \"title\": \"Expandable (w/subnavigation titles)\",\n      \"lang\": \"js\"\n    }));\n  },\n  'Expandable third level': function ExpandableThirdLevel(props) {\n    return /*#__PURE__*/React.createElement(Example, _extends({}, pageData, props, {\n      \"code\": \"import React from 'react';\\nimport { Nav, NavExpandable, NavItem, NavList } from '@patternfly/react-core';\\n\\nNavExpandableThirdLevelList = () => {\\n  const [activeGroup, setActiveGroup] = React.useState('grp-1');\\n  const [activeItem, setActiveItem] = React.useState('grp-1_itm-1');\\n\\n  onSelect = result => {\\n    setActiveGroup(result.groupId);\\n    setActiveItem(result.itemId);\\n  };\\n\\n  onToggle = result => {\\n    // eslint-disable-next-line no-console\\n    console.log(`Group ${result.groupId} expanded? ${result.isExpanded}`);\\n  };\\n\\n  return (\\n    <Nav onSelect={onSelect} onToggle={onToggle}>\\n      <NavList>\\n        <NavExpandable title=\\\"Link 1\\\" groupId=\\\"grp-1\\\" isActive={activeGroup === 'grp-1'} isExpanded>\\n          <NavItem\\n            preventDefault\\n            to=\\\"#expandable-1\\\"\\n            groupId=\\\"grp-1\\\"\\n            itemId=\\\"grp-1_itm-1\\\"\\n            isActive={activeItem === 'grp-1_itm-1'}\\n          >\\n            Subnav Link 1\\n          </NavItem>\\n          <NavItem\\n            preventDefault\\n            to=\\\"#expandable-2\\\"\\n            groupId=\\\"grp-1\\\"\\n            itemId=\\\"grp-1_itm-2\\\"\\n            isActive={activeItem === 'grp-1_itm-2'}\\n          >\\n            Subnav Link 2\\n          </NavItem>\\n          <NavItem\\n            preventDefault\\n            to=\\\"#expandable-3\\\"\\n            groupId=\\\"grp-1\\\"\\n            itemId=\\\"grp-1_itm-3\\\"\\n            isActive={activeItem === 'grp-1_itm-3'}\\n          >\\n            Subnav Link 3\\n          </NavItem>\\n        </NavExpandable>\\n        <NavExpandable title=\\\"Link 2\\\" groupId=\\\"grp-2\\\" isActive={activeGroup === 'grp-2'} isExpanded>\\n          <NavItem\\n            preventDefault\\n            to=\\\"#expandable-4\\\"\\n            groupId=\\\"grp-2\\\"\\n            itemId=\\\"grp-2_itm-1\\\"\\n            isActive={activeItem === 'grp-2_itm-1'}\\n          >\\n            Subnav Link 1\\n          </NavItem>\\n          <NavExpandable title=\\\"Third Level\\\" groupId=\\\"grp-3\\\" isActive={activeGroup === 'grp-3'} isExpanded>\\n            <NavItem\\n              preventDefault\\n              to=\\\"#expandable-6\\\"\\n              groupId=\\\"grp-3\\\"\\n              itemId=\\\"grp-3_itm-1\\\"\\n              isActive={activeItem === 'grp-3_itm-1'}\\n            >\\n              Third Level Link 1\\n            </NavItem>\\n            <NavItem\\n              preventDefault\\n              to=\\\"#expandable-7\\\"\\n              groupId=\\\"grp-3\\\"\\n              itemId=\\\"grp-3_itm-2\\\"\\n              isActive={activeItem === 'grp-3_itm-2'}\\n            >\\n              Third Level Link 2\\n            </NavItem>\\n          </NavExpandable>\\n          <NavItem\\n            preventDefault\\n            to=\\\"#expandable-8\\\"\\n            groupId=\\\"grp-2\\\"\\n            itemId=\\\"grp-2_itm-2\\\"\\n            isActive={activeItem === 'grp-2_itm-3'}\\n          >\\n            Subnav Link 3\\n          </NavItem>\\n        </NavExpandable>\\n      </NavList>\\n    </Nav>\\n  );\\n};\",\n      \"title\": \"Expandable third level\",\n      \"lang\": \"js\"\n    }));\n  },\n  'Mixed': function Mixed(props) {\n    return /*#__PURE__*/React.createElement(Example, _extends({}, pageData, props, {\n      \"code\": \"import React from 'react';\\nimport { Nav, NavExpandable, NavItem, NavItemSeparator, NavList, NavGroup } from '@patternfly/react-core';\\n\\nclass NavMixedList extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      activeGroup: '',\\n      activeItem: 'itm-1'\\n    };\\n    this.onSelect = result => {\\n      this.setState({\\n        activeGroup: result.groupId,\\n        activeItem: result.itemId\\n      });\\n    };\\n  }\\n\\n  render() {\\n    const { activeGroup, activeItem } = this.state;\\n    return (\\n      <Nav onSelect={this.onSelect}>\\n        <NavList>\\n          <NavItem preventDefault to=\\\"#mixed-1\\\" itemId=\\\"itm-1\\\" isActive={activeItem === 'itm-1'}>\\n            Link 1 (not expandable)\\n          </NavItem>\\n          <NavExpandable title=\\\"Link 2 - expandable\\\" groupId=\\\"grp-1\\\" isActive={activeGroup === 'grp-1'}>\\n            <NavItem\\n              preventDefault\\n              to=\\\"#mixed-2\\\"\\n              groupId=\\\"grp-1\\\"\\n              itemId=\\\"grp-1_itm-1\\\"\\n              isActive={activeItem === 'grp-1_itm-1'}\\n            >\\n              Link 1\\n            </NavItem>\\n            <NavItem\\n              preventDefault\\n              to=\\\"#mixed-3\\\"\\n              groupId=\\\"grp-1\\\"\\n              itemId=\\\"grp-1_itm-2\\\"\\n              isActive={activeItem === 'grp-1_itm-2'}\\n            >\\n              Link 2\\n            </NavItem>\\n            <NavItem\\n              preventDefault\\n              to=\\\"#mixed-4\\\"\\n              groupId=\\\"grp-1\\\"\\n              itemId=\\\"grp-1_itm-3\\\"\\n              isActive={activeItem === 'grp-1_itm-3'}\\n            >\\n              Link 3\\n            </NavItem>\\n          </NavExpandable>\\n          <NavExpandable title=\\\"Link 3 - expandable\\\" groupId=\\\"grp-2\\\" isActive={activeGroup === 'grp-2'}>\\n            <NavItem\\n              preventDefault\\n              to=\\\"#mixed-5\\\"\\n              groupId=\\\"grp-2\\\"\\n              itemId=\\\"grp-2_itm-1\\\"\\n              isActive={activeItem === 'grp-2_itm-1'}\\n            >\\n              Link 1\\n            </NavItem>\\n            <NavItem\\n              preventDefault\\n              to=\\\"#mixed-6\\\"\\n              groupId=\\\"grp-2\\\"\\n              itemId=\\\"grp-2_itm-2\\\"\\n              isActive={activeItem === 'grp-2_itm-2'}\\n            >\\n              Link 2\\n            </NavItem>\\n            <NavItem\\n              preventDefault\\n              to=\\\"#mixed-7\\\"\\n              groupId=\\\"grp-2\\\"\\n              itemId=\\\"grp-2_itm-3\\\"\\n              isActive={activeItem === 'grp-2_itm-3'}\\n            >\\n              Link 3\\n            </NavItem>\\n          </NavExpandable>\\n        </NavList>\\n      </Nav>\\n    );\\n  }\\n}\",\n      \"title\": \"Mixed\",\n      \"lang\": \"js\"\n    }));\n  },\n  'Horizontal (only in PageHeader)': function HorizontalOnlyInPageHeader(props) {\n    return /*#__PURE__*/React.createElement(Example, _extends({}, pageData, props, {\n      \"code\": \"import React from 'react';\\nimport { Nav, NavExpandable, NavItem, NavItemSeparator, NavList, NavGroup, PageHeader } from '@patternfly/react-core';\\n\\nclass NavHorizontalList extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      activeItem: 0\\n    };\\n    this.onSelect = result => {\\n      this.setState({\\n        activeItem: result.itemId\\n      });\\n    };\\n  }\\n\\n  render() {\\n    const { activeItem } = this.state;\\n    const nav = (\\n      <Nav onSelect={this.onSelect} variant=\\\"horizontal\\\">\\n        <NavList>\\n          {Array.apply(0, Array(10)).map(function(x, i) {\\n            const num = i + 1;\\n            return (\\n              <NavItem key={num} itemId={num} isActive={activeItem === num} href=\\\"#\\\">\\n                Horizontal nav item {num}\\n              </NavItem>\\n            );\\n          })}\\n        </NavList>\\n      </Nav>\\n    );\\n    return <PageHeader topNav={nav} />;\\n  }\\n}\",\n      \"title\": \"Horizontal (only in PageHeader)\",\n      \"lang\": \"js\"\n    }));\n  },\n  'Horizontal subnav': function HorizontalSubnav(props) {\n    return /*#__PURE__*/React.createElement(Example, _extends({}, pageData, props, {\n      \"code\": \"import React from 'react';\\nimport { Nav, NavExpandable, NavItem, NavItemSeparator, NavList, NavGroup, PageHeader } from '@patternfly/react-core';\\n\\nclass HorizontalSubNav extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      activeItem: 0\\n    };\\n    this.onSelect = result => {\\n      this.setState({\\n        activeItem: result.itemId\\n      });\\n    };\\n  }\\n\\n  render() {\\n    const { activeItem } = this.state;\\n    return (\\n      <Nav onSelect={this.onSelect} variant=\\\"horizontal-subnav\\\">\\n        <NavList>\\n          {Array.apply(0, Array(10)).map(function(x, i) {\\n            const num = i + 1;\\n            return (\\n              <NavItem key={num} itemId={num} isActive={activeItem === num} href=\\\"#\\\">\\n                Horizontal nav item {num}\\n              </NavItem>\\n            );\\n          })}\\n        </NavList>\\n      </Nav>\\n    );\\n  }\\n}\",\n      \"title\": \"Horizontal subnav\",\n      \"lang\": \"js\"\n    }));\n  },\n  'Legacy tertiary': function LegacyTertiary(props) {\n    return /*#__PURE__*/React.createElement(Example, _extends({}, pageData, props, {\n      \"code\": \"import React from 'react';\\nimport { Nav, NavExpandable, NavItem, NavItemSeparator, NavList, NavGroup, PageSection } from '@patternfly/react-core';\\n\\nclass NavTertiaryList extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      activeItem: 0\\n    };\\n    this.onSelect = result => {\\n      this.setState({\\n        activeItem: result.itemId\\n      });\\n    };\\n  }\\n\\n  render() {\\n    const { activeItem } = this.state;\\n    return (\\n      <Nav onSelect={this.onSelect} variant=\\\"tertiary\\\">\\n        <NavList>\\n          {Array.apply(0, Array(10)).map(function(x, i) {\\n            const num = i + 1;\\n            return (\\n              <NavItem key={num} itemId={num} isActive={activeItem === num} href=\\\"#\\\">\\n                Tertiary nav item {num}\\n              </NavItem>\\n            );\\n          })}\\n        </NavList>\\n      </Nav>\\n    );\\n  }\\n}\",\n      \"title\": \"Legacy tertiary\",\n      \"lang\": \"js\"\n    }));\n  },\n  'Flyout': function Flyout(props) {\n    return /*#__PURE__*/React.createElement(Example, _extends({}, pageData, props, {\n      \"code\": \"import React from 'react';\\nimport {\\n  Nav,\\n  NavExpandable,\\n  NavItem,\\n  NavItemSeparator,\\n  NavList,\\n  NavGroup,\\n  Menu,\\n  MenuContent,\\n  MenuList,\\n  MenuItem\\n} from '@patternfly/react-core';\\n\\nNavWithFlyout = () => {\\n  const [activeItem, setActiveItem] = React.useState(0);\\n  const onSelect = result => setActiveItem(result.itemId);\\n  const onMenuSelect = (event, itemId) => setActiveItem(itemId);\\n\\n  const numFlyouts = 5;\\n  const FlyoutMenu = ({ depth, children }) => (\\n    <Menu key={depth} containsFlyout isNavFlyout id={`menu-${depth}`} onSelect={onMenuSelect}>\\n      <MenuContent>\\n        <MenuList>\\n          <MenuItem flyoutMenu={children} itemId={`next-menu-${depth}`} to={`#menu-link-${depth}`}>\\n            Next menu\\n          </MenuItem>\\n          {[...Array(numFlyouts - depth).keys()].map(j => (\\n            <MenuItem key={`${depth}-${j}`} itemId={`${depth}-${j}`} to={`#menu-link-${depth}-${j}`}>\\n              Menu {depth} item {j}\\n            </MenuItem>\\n          ))}\\n          <MenuItem flyoutMenu={children} itemId={`next-menu-2-${depth}`} to={`#second-menu-link-${depth}`}>\\n            Next menu\\n          </MenuItem>\\n        </MenuList>\\n      </MenuContent>\\n    </Menu>\\n  );\\n\\n  let curFlyout = <FlyoutMenu depth={1} />;\\n  for (let i = 2; i < numFlyouts - 1; i++) {\\n    curFlyout = <FlyoutMenu depth={i}>{curFlyout}</FlyoutMenu>;\\n  }\\n\\n  return (\\n    <Nav onSelect={onSelect}>\\n      <NavList>\\n        <NavItem id=\\\"default-link1\\\" to=\\\"#default-link1\\\" itemId={0} isActive={activeItem === 0}>\\n          Link 1\\n        </NavItem>\\n        <NavItem id=\\\"default-link2\\\" to=\\\"#default-link2\\\" itemId={1} isActive={activeItem === 1}>\\n          Link 2\\n        </NavItem>\\n        <NavItem flyout={curFlyout} id=\\\"default-link3\\\" to=\\\"#default-link3\\\" itemId={2} isActive={activeItem === 2}>\\n          Link 3\\n        </NavItem>\\n        <NavItem id=\\\"default-link4\\\" to=\\\"#default-link4\\\" itemId={3} isActive={activeItem === 3}>\\n          Link 4\\n        </NavItem>\\n      </NavList>\\n    </Nav>\\n  );\\n};\",\n      \"title\": \"Flyout\",\n      \"lang\": \"js\",\n      \"isBeta\": true\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      \"className\": \"ws-p\"\n    }, \"A flyout should be a \", /*#__PURE__*/React.createElement(\"code\", {\n      \"className\": \"ws-code\"\n    }, \"Menu\"), \" component. Press \", /*#__PURE__*/React.createElement(\"code\", {\n      \"className\": \"ws-code\"\n    }, \"space\"), \" or \", /*#__PURE__*/React.createElement(\"code\", {\n      \"className\": \"ws-code\"\n    }, \"right arrow\"), \" to open a flyout using the keyboard, use the arrow keys to navigate between flyout items, and press \", /*#__PURE__*/React.createElement(\"code\", {\n      \"className\": \"ws-code\"\n    }, \"escape\"), \" or \", /*#__PURE__*/React.createElement(\"code\", {\n      \"className\": \"ws-code\"\n    }, \"left arrow\"), \" to close a flyout.\"));\n  },\n  'Drilldown': function Drilldown(props) {\n    return /*#__PURE__*/React.createElement(Example, _extends({}, pageData, props, {\n      \"code\": \"import React from 'react';\\n\\nimport { Nav, MenuContent, MenuItem, MenuList, DrilldownMenu, Menu } from '@patternfly/react-core';\\n\\ninterface MenuHeights {\\n  [menuId: string]: number;\\n}\\n\\nconst subMenuTwo: JSX.Element = (\\n  <DrilldownMenu id=\\\"subMenu-2\\\">\\n    <MenuItem itemId=\\\"subMenu-2-breadcrumb\\\" direction=\\\"up\\\">\\n      SubMenu 1 - Item 1\\n    </MenuItem>\\n    <MenuItem itemId=\\\"subMenu-2_item-1\\\" to=\\\"#subMenu-2_item-1\\\">\\n      SubMenu 2 - Item 1\\n    </MenuItem>\\n    <MenuItem itemId=\\\"subMenu-2_item-2\\\" to=\\\"#subMenu-2_item-2\\\">\\n      SubMenu 2 - Item 2\\n    </MenuItem>\\n    <MenuItem itemId=\\\"subMenu-2_item-3\\\" to=\\\"#subMenu-2_item-3\\\">\\n      SubMenu 2 - Item 3\\n    </MenuItem>\\n  </DrilldownMenu>\\n);\\n\\nconst subMenuOne: JSX.Element = (\\n  <DrilldownMenu id=\\\"subMenu-1\\\">\\n    <MenuItem itemId=\\\"subMenu-1-breadcrumb\\\" direction=\\\"up\\\">\\n      Item 1\\n    </MenuItem>\\n    <MenuItem itemId=\\\"subMenu-1_item-1\\\" description=\\\"SubMenu 2\\\" direction=\\\"down\\\" drilldownMenu={subMenuTwo}>\\n      SubMenu 1 - Item 1\\n    </MenuItem>\\n    <MenuItem itemId=\\\"subMenu-1_item-2\\\" to=\\\"#subMenu-1_item-2\\\">\\n      SubMenu 1 - Item 2\\n    </MenuItem>\\n    <MenuItem itemId=\\\"subMenu-1_item-3\\\" to=\\\"#subMenu-1_item-3\\\">\\n      SubMenu 1 - Item 3\\n    </MenuItem>\\n  </DrilldownMenu>\\n);\\n\\nexport const NavLevelThreeDrill: React.FunctionComponent = () => {\\n  const [menuDrilledIn, setMenuDrilledIn] = React.useState<string[]>([]);\\n  const [drilldownPath, setDrilldownPath] = React.useState<string[]>([]);\\n  const [menuHeights, setMenuHeights] = React.useState<MenuHeights>({});\\n  const [activeMenu, setActiveMenu] = React.useState('rootMenu');\\n\\n  const onDrillIn = (fromItemId: string, toItemId: string, itemId: string) => {\\n    setMenuDrilledIn(prevMenuDrilledIn => [...prevMenuDrilledIn, fromItemId]);\\n    setDrilldownPath(prevDrilldownPath => [...prevDrilldownPath, itemId]);\\n    setActiveMenu(toItemId);\\n  };\\n\\n  const onDrillOut = (toItemId: string, _itemId: string) => {\\n    setMenuDrilledIn(prevMenuDrilledIn => prevMenuDrilledIn.slice(0, prevMenuDrilledIn.length - 1));\\n    setDrilldownPath(prevDrilldownPath => prevDrilldownPath.slice(0, prevDrilldownPath.length - 1));\\n    setActiveMenu(toItemId);\\n  };\\n\\n  const onGetMenuHeight = (menuId: string, height: number) => {\\n    if (!menuHeights[menuId] && menuId !== 'rootMenu') {\\n      setMenuHeights(prevMenuHeights => ({ ...prevMenuHeights, [menuId]: height }));\\n    }\\n  };\\n\\n  return (\\n    <Nav>\\n      <Menu\\n        id=\\\"rootMenu\\\"\\n        containsDrilldown\\n        drilldownItemPath={drilldownPath}\\n        drilledInMenus={menuDrilledIn}\\n        activeMenu={activeMenu}\\n        onDrillIn={onDrillIn}\\n        onDrillOut={onDrillOut}\\n        onGetMenuHeight={onGetMenuHeight}\\n      >\\n        <MenuContent menuHeight={`${menuHeights[activeMenu]}px`}>\\n          <MenuList>\\n            <MenuItem itemId=\\\"item-1\\\" direction=\\\"down\\\" description=\\\"SubMenu 1\\\" drilldownMenu={subMenuOne}>\\n              Item 1\\n            </MenuItem>\\n            <MenuItem itemId=\\\"item-2\\\" to=\\\"#item-2\\\">\\n              Item 2\\n            </MenuItem>\\n            <MenuItem itemId=\\\"item-3\\\" to=\\\"#item-3\\\">\\n              Item 3\\n            </MenuItem>\\n          </MenuList>\\n        </MenuContent>\\n      </Menu>\\n    </Nav>\\n  );\\n};\\n\",\n      \"title\": \"Drilldown\",\n      \"lang\": \"ts\",\n      \"isBeta\": true\n    }));\n  }\n};\n\nvar Component = function Component() {\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(AutoLinkHeader, {\n    \"id\": \"examples\",\n    \"size\": \"h2\",\n    \"className\": \"ws-title ws-h2\"\n  }, \"Examples\"), React.createElement(pageData.examples[\"Default\"]), React.createElement(pageData.examples[\"Grouped\"]), React.createElement(pageData.examples[\"Expandable\"]), React.createElement(pageData.examples[\"Expandable (w/subnavigation titles)\"]), React.createElement(pageData.examples[\"Expandable third level\"]), React.createElement(pageData.examples[\"Mixed\"]), React.createElement(pageData.examples[\"Horizontal (only in PageHeader)\"]), React.createElement(pageData.examples[\"Horizontal subnav\"]), React.createElement(pageData.examples[\"Legacy tertiary\"]), React.createElement(pageData.examples[\"Flyout\"]), React.createElement(pageData.examples[\"Drilldown\"]));\n};\n\nComponent.displayName = 'ComponentsNavigationReactDocs';\nComponent.pageData = pageData;\nexport default Component;","map":{"version":3,"names":["React","AutoLinkHeader","Example","Link","PatternflyThemeLink","pageData","examples","props","Component","createElement","displayName"],"sources":["/Users/jschuler/Code/patternfly-quickstarts/packages/docs/src/generated/components/navigation/react.js"],"sourcesContent":["import React from 'react';\nimport { AutoLinkHeader, Example, Link as PatternflyThemeLink } from 'theme-patternfly-org/components';\nimport '../../../../node_modules/@patternfly/react-core/src/components/Nav/examples/./nav.css';\nconst pageData = {\n  \"id\": \"Navigation\",\n  \"section\": \"components\",\n  \"source\": \"react\",\n  \"slug\": \"/components/navigation/react\",\n  \"sourceLink\": \"https://github.com/patternfly/patternfly-react/blob/main/packages/docs/packages/react-core/src/components/Nav/examples/Nav.md\",\n  \"propComponents\": [\n    {\n      \"name\": \"Nav\",\n      \"description\": \"\",\n      \"props\": [\n        {\n          \"name\": \"aria-label\",\n          \"type\": \"string\",\n          \"description\": \"Accessibility label\"\n        },\n        {\n          \"name\": \"children\",\n          \"type\": \"React.ReactNode\",\n          \"description\": \"Anything that can be rendered inside of the nav\"\n        },\n        {\n          \"name\": \"className\",\n          \"type\": \"string\",\n          \"description\": \"Additional classes added to the container\"\n        },\n        {\n          \"name\": \"onSelect\",\n          \"type\": \"(selectedItem: {\\n  groupId: number | string;\\n  itemId: number | string;\\n  to: string;\\n  event: React.FormEvent<HTMLInputElement>;\\n}) => void\",\n          \"description\": \"Callback for updating when item selection changes\",\n          \"defaultValue\": \"() => undefined\"\n        },\n        {\n          \"name\": \"onToggle\",\n          \"type\": \"(toggledItem: {\\n  groupId: number | string;\\n  isExpanded: boolean;\\n  event: React.MouseEvent<HTMLButtonElement>;\\n}) => void\",\n          \"description\": \"Callback for when a list is expanded or collapsed\",\n          \"defaultValue\": \"() => undefined\"\n        },\n        {\n          \"name\": \"ouiaSafe\",\n          \"type\": \"No type info\",\n          \"defaultValue\": \"true\"\n        },\n        {\n          \"name\": \"theme\",\n          \"type\": \"'dark' | 'light'\",\n          \"description\": \"Indicates which theme color to use\",\n          \"defaultValue\": \"'dark'\"\n        },\n        {\n          \"name\": \"variant\",\n          \"type\": \"'default' | 'horizontal' | 'tertiary' | 'horizontal-subnav'\",\n          \"description\": \"For horizontal navs\"\n        }\n      ]\n    },\n    {\n      \"name\": \"NavList\",\n      \"description\": \"\",\n      \"props\": [\n        {\n          \"name\": \"ariaLeftScroll\",\n          \"type\": \"string\",\n          \"description\": \"Aria-label for the left scroll button\",\n          \"defaultValue\": \"'Scroll left'\"\n        },\n        {\n          \"name\": \"ariaRightScroll\",\n          \"type\": \"string\",\n          \"description\": \"Aria-label for the right scroll button\",\n          \"defaultValue\": \"'Scroll right'\"\n        },\n        {\n          \"name\": \"children\",\n          \"type\": \"React.ReactNode\",\n          \"description\": \"Children nodes\"\n        },\n        {\n          \"name\": \"className\",\n          \"type\": \"string\",\n          \"description\": \"Additional classes added to the list\"\n        }\n      ]\n    },\n    {\n      \"name\": \"NavGroup\",\n      \"description\": \"\",\n      \"props\": [\n        {\n          \"name\": \"children\",\n          \"type\": \"React.ReactNode\",\n          \"description\": \"Anything that can be rendered inside of the group\",\n          \"defaultValue\": \"null\"\n        },\n        {\n          \"name\": \"className\",\n          \"type\": \"string\",\n          \"description\": \"Additional classes added to the container\",\n          \"defaultValue\": \"''\"\n        },\n        {\n          \"name\": \"id\",\n          \"type\": \"string\",\n          \"description\": \"Identifier to use for the section aria label\",\n          \"defaultValue\": \"getUniqueId()\"\n        },\n        {\n          \"name\": \"title\",\n          \"type\": \"string\",\n          \"description\": \"Title shown for the group\"\n        }\n      ]\n    },\n    {\n      \"name\": \"NavItem\",\n      \"description\": \"\",\n      \"props\": [\n        {\n          \"name\": \"children\",\n          \"type\": \"React.ReactNode\",\n          \"description\": \"Content rendered inside the nav item.\"\n        },\n        {\n          \"name\": \"className\",\n          \"type\": \"string\",\n          \"description\": \"Additional classes added to the nav item\"\n        },\n        {\n          \"name\": \"component\",\n          \"type\": \"React.ReactNode\",\n          \"description\": \"Component used to render NavItems if  React.isValidElement(children) is false\",\n          \"defaultValue\": \"'a'\"\n        },\n        {\n          \"name\": \"flyout\",\n          \"type\": \"React.ReactElement\",\n          \"description\": \"Flyout of a nav item. This should be a Menu component.\"\n        },\n        {\n          \"name\": \"groupId\",\n          \"type\": \"string | number | null\",\n          \"description\": \"Group identifier, will be returned with the onToggle and onSelect callback passed to the Nav component\",\n          \"defaultValue\": \"null\"\n        },\n        {\n          \"name\": \"isActive\",\n          \"type\": \"boolean\",\n          \"description\": \"Flag indicating whether the item is active\",\n          \"defaultValue\": \"false\"\n        },\n        {\n          \"name\": \"itemId\",\n          \"type\": \"string | number | null\",\n          \"description\": \"Item identifier, will be returned with the onToggle and onSelect callback passed to the Nav component\",\n          \"defaultValue\": \"null\"\n        },\n        {\n          \"name\": \"onClick\",\n          \"type\": \"NavSelectClickHandler\",\n          \"description\": \"Callback for item click\",\n          \"defaultValue\": \"null\"\n        },\n        {\n          \"name\": \"onShowFlyout\",\n          \"type\": \"() => void\",\n          \"description\": \"Callback when flyout is opened or closed\"\n        },\n        {\n          \"name\": \"preventDefault\",\n          \"type\": \"boolean\",\n          \"description\": \"If true prevents the default anchor link action to occur. Set to true if you want to handle navigation yourself.\",\n          \"defaultValue\": \"false\"\n        },\n        {\n          \"name\": \"styleChildren\",\n          \"type\": \"boolean\",\n          \"description\": \"Whether to set className on children when React.isValidElement(children)\",\n          \"defaultValue\": \"true\"\n        },\n        {\n          \"name\": \"to\",\n          \"type\": \"string\",\n          \"description\": \"Target navigation link\"\n        }\n      ]\n    },\n    {\n      \"name\": \"NavItemSeparator\",\n      \"description\": \"\",\n      \"props\": [\n        {\n          \"name\": \"component\",\n          \"type\": \"No type info\",\n          \"defaultValue\": \"'li'\"\n        }\n      ]\n    },\n    {\n      \"name\": \"NavExpandable\",\n      \"description\": \"\",\n      \"props\": [\n        {\n          \"name\": \"buttonProps\",\n          \"type\": \"any\",\n          \"description\": \"Additional props added to the NavExpandable <button>\"\n        },\n        {\n          \"name\": \"children\",\n          \"type\": \"React.ReactNode\",\n          \"description\": \"Anything that can be rendered inside of the expandable list\",\n          \"defaultValue\": \"''\"\n        },\n        {\n          \"name\": \"className\",\n          \"type\": \"string\",\n          \"description\": \"Additional classes added to the container\",\n          \"defaultValue\": \"''\"\n        },\n        {\n          \"name\": \"groupId\",\n          \"type\": \"string | number\",\n          \"description\": \"Group identifier, will be returned with the onToggle and onSelect callback passed to the Nav component\",\n          \"defaultValue\": \"null\"\n        },\n        {\n          \"name\": \"id\",\n          \"type\": \"string\",\n          \"description\": \"Identifier to use for the section aria label\",\n          \"defaultValue\": \"''\"\n        },\n        {\n          \"name\": \"isActive\",\n          \"type\": \"boolean\",\n          \"description\": \"If true makes the expandable list title active\",\n          \"defaultValue\": \"false\"\n        },\n        {\n          \"name\": \"isExpanded\",\n          \"type\": \"boolean\",\n          \"description\": \"Boolean to programatically expand or collapse section\",\n          \"defaultValue\": \"false\"\n        },\n        {\n          \"name\": \"onExpand\",\n          \"type\": \"(e: React.MouseEvent<HTMLButtonElement, MouseEvent>, val: boolean) => void\",\n          \"description\": \"allow consumer to optionally override this callback and manage expand state externally. if passed will not call Nav's onToggle.\"\n        },\n        {\n          \"name\": \"srText\",\n          \"type\": \"string\",\n          \"description\": \"If defined, screen readers will read this text instead of the list title\",\n          \"defaultValue\": \"''\"\n        },\n        {\n          \"name\": \"title\",\n          \"type\": \"string\",\n          \"description\": \"Title shown for the expandable list\",\n          \"required\": true\n        }\n      ]\n    }\n  ],\n  \"cssPrefix\": [\n    \"pf-c-nav\"\n  ],\n  \"examples\": [\n    \"Default\",\n    \"Grouped\",\n    \"Expandable\",\n    \"Expandable (w/subnavigation titles)\",\n    \"Expandable third level\",\n    \"Mixed\",\n    \"Horizontal (only in PageHeader)\",\n    \"Horizontal subnav\",\n    \"Legacy tertiary\",\n    \"Flyout\",\n    \"Drilldown\"\n  ]\n};\npageData.examples = {\n  'Default': props => \n    <Example {...pageData} {...props} {...{\"code\":\"import React from 'react';\\nimport { Nav, NavExpandable, NavItem, NavItemSeparator, NavList, NavGroup } from '@patternfly/react-core';\\n\\nclass NavDefaultList extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      activeItem: 0\\n    };\\n    this.onSelect = result => {\\n      this.setState({\\n        activeItem: result.itemId\\n      });\\n    };\\n  }\\n\\n  render() {\\n    const { activeItem } = this.state;\\n    return (\\n      <Nav onSelect={this.onSelect}>\\n        <NavList>\\n          <NavItem id=\\\"default-link1\\\" to=\\\"#default-link1\\\" itemId={0} isActive={activeItem === 0}>\\n            Link 1\\n          </NavItem>\\n          <NavItem id=\\\"default-link2\\\" to=\\\"#default-link2\\\" itemId={1} isActive={activeItem === 1}>\\n            Link 2\\n          </NavItem>\\n          <NavItem id=\\\"default-link3\\\" to=\\\"#default-link3\\\" itemId={2} isActive={activeItem === 2}>\\n            Link 3\\n          </NavItem>\\n          <NavItem id=\\\"default-link4\\\" to=\\\"#default-link4\\\" itemId={3} isActive={activeItem === 3}>\\n            Link 4\\n          </NavItem>\\n        </NavList>\\n      </Nav>\\n    );\\n  }\\n}\",\"title\":\"Default\",\"lang\":\"js\"}}>\n      \n    </Example>,\n  'Grouped': props => \n    <Example {...pageData} {...props} {...{\"code\":\"import React from 'react';\\nimport { Nav, NavExpandable, NavItem, NavItemSeparator, NavList, NavGroup } from '@patternfly/react-core';\\n\\nclass NavGroupedList extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      activeItem: 'grp-1_itm-1'\\n    };\\n    this.onSelect = result => {\\n      this.setState({\\n        activeItem: result.itemId\\n      });\\n    };\\n  }\\n\\n  render() {\\n    const { activeItem } = this.state;\\n    return (\\n      <Nav onSelect={this.onSelect}>\\n        <NavGroup title=\\\"Section title 1\\\">\\n          <NavItem preventDefault to=\\\"#grouped-1\\\" itemId=\\\"grp-1_itm-1\\\" isActive={activeItem === 'grp-1_itm-1'}>\\n            Link 1\\n          </NavItem>\\n          <NavItem preventDefault to=\\\"#grouped-2\\\" itemId=\\\"grp-1_itm-2\\\" isActive={activeItem === 'grp-1_itm-2'}>\\n            Link 2\\n          </NavItem>\\n          <NavItem preventDefault to=\\\"#grouped-3\\\" itemId=\\\"grp-1_itm-3\\\" isActive={activeItem === 'grp-1_itm-3'}>\\n            Link 3\\n          </NavItem>\\n        </NavGroup>\\n        <NavGroup title=\\\"Section title 2\\\">\\n          <NavItem preventDefault to=\\\"#grouped-4\\\" itemId=\\\"grp-2_itm-1\\\" isActive={activeItem === 'grp-2_itm-1'}>\\n            Link 1\\n          </NavItem>\\n          <NavItem preventDefault to=\\\"#grouped-5\\\" itemId=\\\"grp-2_itm-2\\\" isActive={activeItem === 'grp-2_itm-2'}>\\n            Link 2\\n          </NavItem>\\n          <NavItem preventDefault to=\\\"#grouped-6\\\" itemId=\\\"grp-2_itm-3\\\" isActive={activeItem === 'grp-2_itm-3'}>\\n            Link 3\\n          </NavItem>\\n        </NavGroup>\\n      </Nav>\\n    );\\n  }\\n}\",\"title\":\"Grouped\",\"lang\":\"js\"}}>\n      \n      <p {...{\"className\":\"ws-p\"}}>\n        {`Note: to keep nav groups accessible an `}\n        \n        <code {...{\"className\":\"ws-code\"}}>\n          {`aria-label`}\n        </code>\n        {` should be supplied if the `}\n        \n        <code {...{\"className\":\"ws-code\"}}>\n          {`title`}\n        </code>\n        {` prop is not passed.`}\n      </p>\n    </Example>,\n  'Expandable': props => \n    <Example {...pageData} {...props} {...{\"code\":\"import React from 'react';\\nimport { Nav, NavExpandable, NavItem, NavItemSeparator, NavList, NavGroup } from '@patternfly/react-core';\\n\\nclass NavExpandableList extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      activeGroup: 'grp-1',\\n      activeItem: 'grp-1_itm-1'\\n    };\\n    this.onSelect = result => {\\n      this.setState({\\n        activeGroup: result.groupId,\\n        activeItem: result.itemId\\n      });\\n    };\\n    this.onToggle = result => {\\n      // eslint-disable-next-line no-console\\n      console.log(`Group ${result.groupId} expanded? ${result.isExpanded}`);\\n    };\\n    this.handleItemOnclick = (event, itemId, groupId) => {\\n      // eslint-disable-next-line no-console\\n      console.log(`my own click handler on ${itemId}`);\\n    };\\n  }\\n\\n  render() {\\n    const { activeGroup, activeItem } = this.state;\\n    return (\\n      <Nav onSelect={this.onSelect} onToggle={this.onToggle}>\\n        <NavList>\\n          <NavExpandable title=\\\"Link 1\\\" groupId=\\\"grp-1\\\" isActive={activeGroup === 'grp-1'} isExpanded>\\n            <NavItem\\n              preventDefault\\n              to=\\\"#expandable-1\\\"\\n              groupId=\\\"grp-1\\\"\\n              itemId=\\\"grp-1_itm-1\\\"\\n              isActive={activeItem === 'grp-1_itm-1'}\\n            >\\n              Subnav Link 1\\n            </NavItem>\\n            <NavItemSeparator />\\n            <NavItem preventDefault groupId=\\\"grp-1\\\" itemId=\\\"grp-1_itm-2\\\" isActive={activeItem === 'grp-1_itm-2'}>\\n              Subnav Link 2\\n            </NavItem>\\n            <NavItem to=\\\"#expandable-3\\\" groupId=\\\"grp-1\\\" itemId=\\\"grp-1_itm-3\\\" isActive={activeItem === 'grp-1_itm-3'}>\\n              Subnav Link 3\\n            </NavItem>\\n          </NavExpandable>\\n          <NavExpandable title=\\\"Link 2\\\" groupId=\\\"grp-2\\\" isActive={activeGroup === 'grp-2'} isExpanded>\\n            <NavItem\\n              preventDefault\\n              onClick={this.handleItemOnclick}\\n              groupId=\\\"grp-2\\\"\\n              itemId=\\\"own-item-handler\\\"\\n              isActive={activeItem === 'own-item-handler'}\\n            >\\n              Custom onClick\\n            </NavItem>\\n            <NavItem\\n              preventDefault\\n              to=\\\"#expandable-4\\\"\\n              groupId=\\\"grp-2\\\"\\n              itemId=\\\"grp-2_itm-1\\\"\\n              isActive={activeItem === 'grp-2_itm-1'}\\n            >\\n              Subnav Link 1\\n            </NavItem>\\n            <NavItem\\n              preventDefault\\n              to=\\\"#expandable-5\\\"\\n              groupId=\\\"grp-2\\\"\\n              itemId=\\\"grp-2_itm-2\\\"\\n              isActive={activeItem === 'grp-2_itm-2'}\\n            >\\n              Subnav Link 2\\n            </NavItem>\\n            <NavItem\\n              preventDefault\\n              to=\\\"#expandable-6\\\"\\n              groupId=\\\"grp-2\\\"\\n              itemId=\\\"grp-2_itm-3\\\"\\n              isActive={activeItem === 'grp-2_itm-3'}\\n            >\\n              Subnav Link 3\\n            </NavItem>\\n          </NavExpandable>\\n        </NavList>\\n      </Nav>\\n    );\\n  }\\n}\",\"title\":\"Expandable\",\"lang\":\"js\"}}>\n      \n    </Example>,\n  'Expandable (w/subnavigation titles)': props => \n    <Example {...pageData} {...props} {...{\"code\":\"import React from 'react';\\nimport { Nav, NavExpandable, NavItem, NavItemSeparator, NavList, NavGroup } from '@patternfly/react-core';\\n\\nclass NavExpandableTitlesList extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      activeGroup: 'grp-1',\\n      activeItem: 'grp-1_itm-1'\\n    };\\n    this.onSelect = result => {\\n      this.setState({\\n        activeGroup: result.groupId,\\n        activeItem: result.itemId\\n      });\\n    };\\n  }\\n\\n  render() {\\n    const { activeGroup, activeItem } = this.state;\\n    return (\\n      <Nav onSelect={this.onSelect}>\\n        <NavList>\\n          <NavExpandable title=\\\"Link 1\\\" srText=\\\"SR Link\\\" groupId=\\\"grp-1\\\" isActive={activeGroup === 'grp-1'} isExpanded>\\n            <NavItem\\n              preventDefault\\n              to=\\\"#sr-expandable-1\\\"\\n              groupId=\\\"grp-1\\\"\\n              itemId=\\\"grp-1_itm-1\\\"\\n              isActive={activeItem === 'grp-1_itm-1'}\\n            >\\n              Subnav Link 1\\n            </NavItem>\\n            <NavItem\\n              preventDefault\\n              to=\\\"#sr-expandable-2\\\"\\n              groupId=\\\"grp-1\\\"\\n              itemId=\\\"grp-1_itm-2\\\"\\n              isActive={activeItem === 'grp-1_itm-2'}\\n            >\\n              Subnav Link 2\\n            </NavItem>\\n            <NavItem\\n              preventDefault\\n              to=\\\"#sr-expandable-3\\\"\\n              groupId=\\\"grp-1\\\"\\n              itemId=\\\"grp-1_itm-3\\\"\\n              isActive={activeItem === 'grp-1_itm-3'}\\n            >\\n              Subnav Link 3\\n            </NavItem>\\n          </NavExpandable>\\n          <NavExpandable title=\\\"Link 2\\\" srText=\\\"SR Link 2\\\" groupId=\\\"grp-2\\\" isActive={activeGroup === 'grp-2'}>\\n            <NavItem\\n              preventDefault\\n              to=\\\"#sr-expandable-4\\\"\\n              groupId=\\\"grp-2\\\"\\n              itemId=\\\"grp-2_itm-1\\\"\\n              isActive={activeItem === 'grp-2_itm-1'}\\n            >\\n              Subnav Link 1\\n            </NavItem>\\n            <NavItem\\n              preventDefault\\n              to=\\\"#sr-expandable-5\\\"\\n              groupId=\\\"grp-2\\\"\\n              itemId=\\\"grp-2_itm-2\\\"\\n              isActive={activeItem === 'grp-2_itm-2'}\\n            >\\n              Subnav Link 2\\n            </NavItem>\\n            <NavItem\\n              preventDefault\\n              to=\\\"#sr-expandable-6\\\"\\n              groupId=\\\"grp-2\\\"\\n              itemId=\\\"grp-2_itm-3\\\"\\n              isActive={activeItem === 'grp-2_itm-3'}\\n            >\\n              Subnav Link 3\\n            </NavItem>\\n          </NavExpandable>\\n        </NavList>\\n      </Nav>\\n    );\\n  }\\n}\",\"title\":\"Expandable (w/subnavigation titles)\",\"lang\":\"js\"}}>\n      \n    </Example>,\n  'Expandable third level': props => \n    <Example {...pageData} {...props} {...{\"code\":\"import React from 'react';\\nimport { Nav, NavExpandable, NavItem, NavList } from '@patternfly/react-core';\\n\\nNavExpandableThirdLevelList = () => {\\n  const [activeGroup, setActiveGroup] = React.useState('grp-1');\\n  const [activeItem, setActiveItem] = React.useState('grp-1_itm-1');\\n\\n  onSelect = result => {\\n    setActiveGroup(result.groupId);\\n    setActiveItem(result.itemId);\\n  };\\n\\n  onToggle = result => {\\n    // eslint-disable-next-line no-console\\n    console.log(`Group ${result.groupId} expanded? ${result.isExpanded}`);\\n  };\\n\\n  return (\\n    <Nav onSelect={onSelect} onToggle={onToggle}>\\n      <NavList>\\n        <NavExpandable title=\\\"Link 1\\\" groupId=\\\"grp-1\\\" isActive={activeGroup === 'grp-1'} isExpanded>\\n          <NavItem\\n            preventDefault\\n            to=\\\"#expandable-1\\\"\\n            groupId=\\\"grp-1\\\"\\n            itemId=\\\"grp-1_itm-1\\\"\\n            isActive={activeItem === 'grp-1_itm-1'}\\n          >\\n            Subnav Link 1\\n          </NavItem>\\n          <NavItem\\n            preventDefault\\n            to=\\\"#expandable-2\\\"\\n            groupId=\\\"grp-1\\\"\\n            itemId=\\\"grp-1_itm-2\\\"\\n            isActive={activeItem === 'grp-1_itm-2'}\\n          >\\n            Subnav Link 2\\n          </NavItem>\\n          <NavItem\\n            preventDefault\\n            to=\\\"#expandable-3\\\"\\n            groupId=\\\"grp-1\\\"\\n            itemId=\\\"grp-1_itm-3\\\"\\n            isActive={activeItem === 'grp-1_itm-3'}\\n          >\\n            Subnav Link 3\\n          </NavItem>\\n        </NavExpandable>\\n        <NavExpandable title=\\\"Link 2\\\" groupId=\\\"grp-2\\\" isActive={activeGroup === 'grp-2'} isExpanded>\\n          <NavItem\\n            preventDefault\\n            to=\\\"#expandable-4\\\"\\n            groupId=\\\"grp-2\\\"\\n            itemId=\\\"grp-2_itm-1\\\"\\n            isActive={activeItem === 'grp-2_itm-1'}\\n          >\\n            Subnav Link 1\\n          </NavItem>\\n          <NavExpandable title=\\\"Third Level\\\" groupId=\\\"grp-3\\\" isActive={activeGroup === 'grp-3'} isExpanded>\\n            <NavItem\\n              preventDefault\\n              to=\\\"#expandable-6\\\"\\n              groupId=\\\"grp-3\\\"\\n              itemId=\\\"grp-3_itm-1\\\"\\n              isActive={activeItem === 'grp-3_itm-1'}\\n            >\\n              Third Level Link 1\\n            </NavItem>\\n            <NavItem\\n              preventDefault\\n              to=\\\"#expandable-7\\\"\\n              groupId=\\\"grp-3\\\"\\n              itemId=\\\"grp-3_itm-2\\\"\\n              isActive={activeItem === 'grp-3_itm-2'}\\n            >\\n              Third Level Link 2\\n            </NavItem>\\n          </NavExpandable>\\n          <NavItem\\n            preventDefault\\n            to=\\\"#expandable-8\\\"\\n            groupId=\\\"grp-2\\\"\\n            itemId=\\\"grp-2_itm-2\\\"\\n            isActive={activeItem === 'grp-2_itm-3'}\\n          >\\n            Subnav Link 3\\n          </NavItem>\\n        </NavExpandable>\\n      </NavList>\\n    </Nav>\\n  );\\n};\",\"title\":\"Expandable third level\",\"lang\":\"js\"}}>\n      \n    </Example>,\n  'Mixed': props => \n    <Example {...pageData} {...props} {...{\"code\":\"import React from 'react';\\nimport { Nav, NavExpandable, NavItem, NavItemSeparator, NavList, NavGroup } from '@patternfly/react-core';\\n\\nclass NavMixedList extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      activeGroup: '',\\n      activeItem: 'itm-1'\\n    };\\n    this.onSelect = result => {\\n      this.setState({\\n        activeGroup: result.groupId,\\n        activeItem: result.itemId\\n      });\\n    };\\n  }\\n\\n  render() {\\n    const { activeGroup, activeItem } = this.state;\\n    return (\\n      <Nav onSelect={this.onSelect}>\\n        <NavList>\\n          <NavItem preventDefault to=\\\"#mixed-1\\\" itemId=\\\"itm-1\\\" isActive={activeItem === 'itm-1'}>\\n            Link 1 (not expandable)\\n          </NavItem>\\n          <NavExpandable title=\\\"Link 2 - expandable\\\" groupId=\\\"grp-1\\\" isActive={activeGroup === 'grp-1'}>\\n            <NavItem\\n              preventDefault\\n              to=\\\"#mixed-2\\\"\\n              groupId=\\\"grp-1\\\"\\n              itemId=\\\"grp-1_itm-1\\\"\\n              isActive={activeItem === 'grp-1_itm-1'}\\n            >\\n              Link 1\\n            </NavItem>\\n            <NavItem\\n              preventDefault\\n              to=\\\"#mixed-3\\\"\\n              groupId=\\\"grp-1\\\"\\n              itemId=\\\"grp-1_itm-2\\\"\\n              isActive={activeItem === 'grp-1_itm-2'}\\n            >\\n              Link 2\\n            </NavItem>\\n            <NavItem\\n              preventDefault\\n              to=\\\"#mixed-4\\\"\\n              groupId=\\\"grp-1\\\"\\n              itemId=\\\"grp-1_itm-3\\\"\\n              isActive={activeItem === 'grp-1_itm-3'}\\n            >\\n              Link 3\\n            </NavItem>\\n          </NavExpandable>\\n          <NavExpandable title=\\\"Link 3 - expandable\\\" groupId=\\\"grp-2\\\" isActive={activeGroup === 'grp-2'}>\\n            <NavItem\\n              preventDefault\\n              to=\\\"#mixed-5\\\"\\n              groupId=\\\"grp-2\\\"\\n              itemId=\\\"grp-2_itm-1\\\"\\n              isActive={activeItem === 'grp-2_itm-1'}\\n            >\\n              Link 1\\n            </NavItem>\\n            <NavItem\\n              preventDefault\\n              to=\\\"#mixed-6\\\"\\n              groupId=\\\"grp-2\\\"\\n              itemId=\\\"grp-2_itm-2\\\"\\n              isActive={activeItem === 'grp-2_itm-2'}\\n            >\\n              Link 2\\n            </NavItem>\\n            <NavItem\\n              preventDefault\\n              to=\\\"#mixed-7\\\"\\n              groupId=\\\"grp-2\\\"\\n              itemId=\\\"grp-2_itm-3\\\"\\n              isActive={activeItem === 'grp-2_itm-3'}\\n            >\\n              Link 3\\n            </NavItem>\\n          </NavExpandable>\\n        </NavList>\\n      </Nav>\\n    );\\n  }\\n}\",\"title\":\"Mixed\",\"lang\":\"js\"}}>\n      \n    </Example>,\n  'Horizontal (only in PageHeader)': props => \n    <Example {...pageData} {...props} {...{\"code\":\"import React from 'react';\\nimport { Nav, NavExpandable, NavItem, NavItemSeparator, NavList, NavGroup, PageHeader } from '@patternfly/react-core';\\n\\nclass NavHorizontalList extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      activeItem: 0\\n    };\\n    this.onSelect = result => {\\n      this.setState({\\n        activeItem: result.itemId\\n      });\\n    };\\n  }\\n\\n  render() {\\n    const { activeItem } = this.state;\\n    const nav = (\\n      <Nav onSelect={this.onSelect} variant=\\\"horizontal\\\">\\n        <NavList>\\n          {Array.apply(0, Array(10)).map(function(x, i) {\\n            const num = i + 1;\\n            return (\\n              <NavItem key={num} itemId={num} isActive={activeItem === num} href=\\\"#\\\">\\n                Horizontal nav item {num}\\n              </NavItem>\\n            );\\n          })}\\n        </NavList>\\n      </Nav>\\n    );\\n    return <PageHeader topNav={nav} />;\\n  }\\n}\",\"title\":\"Horizontal (only in PageHeader)\",\"lang\":\"js\"}}>\n      \n    </Example>,\n  'Horizontal subnav': props => \n    <Example {...pageData} {...props} {...{\"code\":\"import React from 'react';\\nimport { Nav, NavExpandable, NavItem, NavItemSeparator, NavList, NavGroup, PageHeader } from '@patternfly/react-core';\\n\\nclass HorizontalSubNav extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      activeItem: 0\\n    };\\n    this.onSelect = result => {\\n      this.setState({\\n        activeItem: result.itemId\\n      });\\n    };\\n  }\\n\\n  render() {\\n    const { activeItem } = this.state;\\n    return (\\n      <Nav onSelect={this.onSelect} variant=\\\"horizontal-subnav\\\">\\n        <NavList>\\n          {Array.apply(0, Array(10)).map(function(x, i) {\\n            const num = i + 1;\\n            return (\\n              <NavItem key={num} itemId={num} isActive={activeItem === num} href=\\\"#\\\">\\n                Horizontal nav item {num}\\n              </NavItem>\\n            );\\n          })}\\n        </NavList>\\n      </Nav>\\n    );\\n  }\\n}\",\"title\":\"Horizontal subnav\",\"lang\":\"js\"}}>\n      \n    </Example>,\n  'Legacy tertiary': props => \n    <Example {...pageData} {...props} {...{\"code\":\"import React from 'react';\\nimport { Nav, NavExpandable, NavItem, NavItemSeparator, NavList, NavGroup, PageSection } from '@patternfly/react-core';\\n\\nclass NavTertiaryList extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      activeItem: 0\\n    };\\n    this.onSelect = result => {\\n      this.setState({\\n        activeItem: result.itemId\\n      });\\n    };\\n  }\\n\\n  render() {\\n    const { activeItem } = this.state;\\n    return (\\n      <Nav onSelect={this.onSelect} variant=\\\"tertiary\\\">\\n        <NavList>\\n          {Array.apply(0, Array(10)).map(function(x, i) {\\n            const num = i + 1;\\n            return (\\n              <NavItem key={num} itemId={num} isActive={activeItem === num} href=\\\"#\\\">\\n                Tertiary nav item {num}\\n              </NavItem>\\n            );\\n          })}\\n        </NavList>\\n      </Nav>\\n    );\\n  }\\n}\",\"title\":\"Legacy tertiary\",\"lang\":\"js\"}}>\n      \n    </Example>,\n  'Flyout': props => \n    <Example {...pageData} {...props} {...{\"code\":\"import React from 'react';\\nimport {\\n  Nav,\\n  NavExpandable,\\n  NavItem,\\n  NavItemSeparator,\\n  NavList,\\n  NavGroup,\\n  Menu,\\n  MenuContent,\\n  MenuList,\\n  MenuItem\\n} from '@patternfly/react-core';\\n\\nNavWithFlyout = () => {\\n  const [activeItem, setActiveItem] = React.useState(0);\\n  const onSelect = result => setActiveItem(result.itemId);\\n  const onMenuSelect = (event, itemId) => setActiveItem(itemId);\\n\\n  const numFlyouts = 5;\\n  const FlyoutMenu = ({ depth, children }) => (\\n    <Menu key={depth} containsFlyout isNavFlyout id={`menu-${depth}`} onSelect={onMenuSelect}>\\n      <MenuContent>\\n        <MenuList>\\n          <MenuItem flyoutMenu={children} itemId={`next-menu-${depth}`} to={`#menu-link-${depth}`}>\\n            Next menu\\n          </MenuItem>\\n          {[...Array(numFlyouts - depth).keys()].map(j => (\\n            <MenuItem key={`${depth}-${j}`} itemId={`${depth}-${j}`} to={`#menu-link-${depth}-${j}`}>\\n              Menu {depth} item {j}\\n            </MenuItem>\\n          ))}\\n          <MenuItem flyoutMenu={children} itemId={`next-menu-2-${depth}`} to={`#second-menu-link-${depth}`}>\\n            Next menu\\n          </MenuItem>\\n        </MenuList>\\n      </MenuContent>\\n    </Menu>\\n  );\\n\\n  let curFlyout = <FlyoutMenu depth={1} />;\\n  for (let i = 2; i < numFlyouts - 1; i++) {\\n    curFlyout = <FlyoutMenu depth={i}>{curFlyout}</FlyoutMenu>;\\n  }\\n\\n  return (\\n    <Nav onSelect={onSelect}>\\n      <NavList>\\n        <NavItem id=\\\"default-link1\\\" to=\\\"#default-link1\\\" itemId={0} isActive={activeItem === 0}>\\n          Link 1\\n        </NavItem>\\n        <NavItem id=\\\"default-link2\\\" to=\\\"#default-link2\\\" itemId={1} isActive={activeItem === 1}>\\n          Link 2\\n        </NavItem>\\n        <NavItem flyout={curFlyout} id=\\\"default-link3\\\" to=\\\"#default-link3\\\" itemId={2} isActive={activeItem === 2}>\\n          Link 3\\n        </NavItem>\\n        <NavItem id=\\\"default-link4\\\" to=\\\"#default-link4\\\" itemId={3} isActive={activeItem === 3}>\\n          Link 4\\n        </NavItem>\\n      </NavList>\\n    </Nav>\\n  );\\n};\",\"title\":\"Flyout\",\"lang\":\"js\",\"isBeta\":true}}>\n      \n      <p {...{\"className\":\"ws-p\"}}>\n        {`A flyout should be a `}\n        \n        <code {...{\"className\":\"ws-code\"}}>\n          {`Menu`}\n        </code>\n        {` component. Press `}\n        \n        <code {...{\"className\":\"ws-code\"}}>\n          {`space`}\n        </code>\n        {` or `}\n        \n        <code {...{\"className\":\"ws-code\"}}>\n          {`right arrow`}\n        </code>\n        {` to open a flyout using the keyboard, use the arrow keys to navigate between flyout items, and press `}\n        \n        <code {...{\"className\":\"ws-code\"}}>\n          {`escape`}\n        </code>\n        {` or `}\n        \n        <code {...{\"className\":\"ws-code\"}}>\n          {`left arrow`}\n        </code>\n        {` to close a flyout.`}\n      </p>\n    </Example>,\n  'Drilldown': props => \n    <Example {...pageData} {...props} {...{\"code\":\"import React from 'react';\\n\\nimport { Nav, MenuContent, MenuItem, MenuList, DrilldownMenu, Menu } from '@patternfly/react-core';\\n\\ninterface MenuHeights {\\n  [menuId: string]: number;\\n}\\n\\nconst subMenuTwo: JSX.Element = (\\n  <DrilldownMenu id=\\\"subMenu-2\\\">\\n    <MenuItem itemId=\\\"subMenu-2-breadcrumb\\\" direction=\\\"up\\\">\\n      SubMenu 1 - Item 1\\n    </MenuItem>\\n    <MenuItem itemId=\\\"subMenu-2_item-1\\\" to=\\\"#subMenu-2_item-1\\\">\\n      SubMenu 2 - Item 1\\n    </MenuItem>\\n    <MenuItem itemId=\\\"subMenu-2_item-2\\\" to=\\\"#subMenu-2_item-2\\\">\\n      SubMenu 2 - Item 2\\n    </MenuItem>\\n    <MenuItem itemId=\\\"subMenu-2_item-3\\\" to=\\\"#subMenu-2_item-3\\\">\\n      SubMenu 2 - Item 3\\n    </MenuItem>\\n  </DrilldownMenu>\\n);\\n\\nconst subMenuOne: JSX.Element = (\\n  <DrilldownMenu id=\\\"subMenu-1\\\">\\n    <MenuItem itemId=\\\"subMenu-1-breadcrumb\\\" direction=\\\"up\\\">\\n      Item 1\\n    </MenuItem>\\n    <MenuItem itemId=\\\"subMenu-1_item-1\\\" description=\\\"SubMenu 2\\\" direction=\\\"down\\\" drilldownMenu={subMenuTwo}>\\n      SubMenu 1 - Item 1\\n    </MenuItem>\\n    <MenuItem itemId=\\\"subMenu-1_item-2\\\" to=\\\"#subMenu-1_item-2\\\">\\n      SubMenu 1 - Item 2\\n    </MenuItem>\\n    <MenuItem itemId=\\\"subMenu-1_item-3\\\" to=\\\"#subMenu-1_item-3\\\">\\n      SubMenu 1 - Item 3\\n    </MenuItem>\\n  </DrilldownMenu>\\n);\\n\\nexport const NavLevelThreeDrill: React.FunctionComponent = () => {\\n  const [menuDrilledIn, setMenuDrilledIn] = React.useState<string[]>([]);\\n  const [drilldownPath, setDrilldownPath] = React.useState<string[]>([]);\\n  const [menuHeights, setMenuHeights] = React.useState<MenuHeights>({});\\n  const [activeMenu, setActiveMenu] = React.useState('rootMenu');\\n\\n  const onDrillIn = (fromItemId: string, toItemId: string, itemId: string) => {\\n    setMenuDrilledIn(prevMenuDrilledIn => [...prevMenuDrilledIn, fromItemId]);\\n    setDrilldownPath(prevDrilldownPath => [...prevDrilldownPath, itemId]);\\n    setActiveMenu(toItemId);\\n  };\\n\\n  const onDrillOut = (toItemId: string, _itemId: string) => {\\n    setMenuDrilledIn(prevMenuDrilledIn => prevMenuDrilledIn.slice(0, prevMenuDrilledIn.length - 1));\\n    setDrilldownPath(prevDrilldownPath => prevDrilldownPath.slice(0, prevDrilldownPath.length - 1));\\n    setActiveMenu(toItemId);\\n  };\\n\\n  const onGetMenuHeight = (menuId: string, height: number) => {\\n    if (!menuHeights[menuId] && menuId !== 'rootMenu') {\\n      setMenuHeights(prevMenuHeights => ({ ...prevMenuHeights, [menuId]: height }));\\n    }\\n  };\\n\\n  return (\\n    <Nav>\\n      <Menu\\n        id=\\\"rootMenu\\\"\\n        containsDrilldown\\n        drilldownItemPath={drilldownPath}\\n        drilledInMenus={menuDrilledIn}\\n        activeMenu={activeMenu}\\n        onDrillIn={onDrillIn}\\n        onDrillOut={onDrillOut}\\n        onGetMenuHeight={onGetMenuHeight}\\n      >\\n        <MenuContent menuHeight={`${menuHeights[activeMenu]}px`}>\\n          <MenuList>\\n            <MenuItem itemId=\\\"item-1\\\" direction=\\\"down\\\" description=\\\"SubMenu 1\\\" drilldownMenu={subMenuOne}>\\n              Item 1\\n            </MenuItem>\\n            <MenuItem itemId=\\\"item-2\\\" to=\\\"#item-2\\\">\\n              Item 2\\n            </MenuItem>\\n            <MenuItem itemId=\\\"item-3\\\" to=\\\"#item-3\\\">\\n              Item 3\\n            </MenuItem>\\n          </MenuList>\\n        </MenuContent>\\n      </Menu>\\n    </Nav>\\n  );\\n};\\n\",\"title\":\"Drilldown\",\"lang\":\"ts\",\"isBeta\":true}}>\n      \n    </Example>\n};\n\nconst Component = () => (\n  <React.Fragment>\n    <AutoLinkHeader {...{\"id\":\"examples\",\"size\":\"h2\",\"className\":\"ws-title ws-h2\"}}>\n      {`Examples`}\n    </AutoLinkHeader>\n    {React.createElement(pageData.examples[\"Default\"])}\n    {React.createElement(pageData.examples[\"Grouped\"])}\n    {React.createElement(pageData.examples[\"Expandable\"])}\n    {React.createElement(pageData.examples[\"Expandable (w/subnavigation titles)\"])}\n    {React.createElement(pageData.examples[\"Expandable third level\"])}\n    {React.createElement(pageData.examples[\"Mixed\"])}\n    {React.createElement(pageData.examples[\"Horizontal (only in PageHeader)\"])}\n    {React.createElement(pageData.examples[\"Horizontal subnav\"])}\n    {React.createElement(pageData.examples[\"Legacy tertiary\"])}\n    {React.createElement(pageData.examples[\"Flyout\"])}\n    {React.createElement(pageData.examples[\"Drilldown\"])}\n  </React.Fragment>\n);\nComponent.displayName = 'ComponentsNavigationReactDocs';\nComponent.pageData = pageData;\n\nexport default Component;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}