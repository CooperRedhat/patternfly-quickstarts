{"ast":null,"code":"function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport { AutoLinkHeader, Example, Link as PatternflyThemeLink } from 'theme-patternfly-org/components';\nimport CheckCircleIcon from '@patternfly/react-icons/dist/esm/icons/check-circle-icon';\nvar pageData = {\n  \"id\": \"Button\",\n  \"section\": \"components\",\n  \"source\": \"react-demos\",\n  \"slug\": \"/components/button/react-demos\",\n  \"sourceLink\": \"https://github.com/patternfly/patternfly-react/blob/main/packages/docs/packages/react-core/src/demos/Button.md\",\n  \"examples\": [\"Progress button\"]\n};\npageData.liveContext = {\n  CheckCircleIcon: CheckCircleIcon\n};\npageData.examples = {\n  'Progress button': function ProgressButton(props) {\n    return /*#__PURE__*/React.createElement(Example, _extends({}, pageData, props, {\n      \"code\": \"import React from 'react';\\nimport { Form, FormGroup, ActionGroup, InputGroup, TextInput, Button } from '@patternfly/react-core';\\nimport CheckCircleIcon from '@patternfly/react-icons/dist/esm/icons/check-circle-icon';\\n\\nconst ProgressButton: React.FunctionComponent = () => {\\n  const [loginState, setLoginState] = React.useState<'notLoggedIn' | 'loading' | 'loggedIn'>('notLoggedIn');\\n\\n  return (\\n    <Form>\\n      <FormGroup label=\\\"Username\\\" isRequired fieldId=\\\"progress-button-initial-login\\\">\\n        <TextInput\\n          isRequired\\n          type=\\\"text\\\"\\n          id=\\\"progress-button-initial-login\\\"\\n          name=\\\"progress-button-initial-login\\\"\\n          value=\\\"johndoe\\\"\\n          aria-label=\\\"username input\\\"\\n        />\\n      </FormGroup>\\n      <FormGroup label=\\\"Password\\\" isRequired fieldId=\\\"progress-button-initial-password\\\">\\n        <TextInput\\n          isRequired\\n          type=\\\"password\\\"\\n          value=\\\"p@ssw0rd\\\"\\n          id=\\\"progress-button-initial-password\\\"\\n          name=\\\"progress-button-initial-password\\\"\\n          aria-label=\\\"password input\\\"\\n        />\\n      </FormGroup>\\n      <ActionGroup>\\n        <Button\\n          variant=\\\"primary\\\"\\n          onClick={\\n            loginState === 'notLoggedIn'\\n              ? () => {\\n                  setLoginState('loading');\\n                  setTimeout(() => {\\n                    setLoginState('loggedIn');\\n                  }, 3000);\\n                }\\n              : null\\n          }\\n          isLoading={loginState === 'loading'}\\n          icon={loginState === 'loggedIn' ? <CheckCircleIcon /> : null}\\n          spinnerAriaValueText=\\\"Loading...\\\"\\n        >\\n          {loginState === 'notLoggedIn' && 'Link account and log in'}\\n          {loginState === 'loading' && 'Linking account'}\\n          {loginState === 'loggedIn' && 'Logged in'}\\n        </Button>\\n      </ActionGroup>\\n    </Form>\\n  );\\n};\",\n      \"title\": \"Progress button\",\n      \"lang\": \"ts\"\n    }));\n  }\n};\n\nvar Component = function Component() {\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(AutoLinkHeader, {\n    \"id\": \"demos\",\n    \"size\": \"h2\",\n    \"className\": \"ws-title ws-h2\"\n  }, \"Demos\"), React.createElement(pageData.examples[\"Progress button\"]));\n};\n\nComponent.displayName = 'ComponentsButtonReactDemosDocs';\nComponent.pageData = pageData;\nexport default Component;","map":{"version":3,"names":["React","AutoLinkHeader","Example","Link","PatternflyThemeLink","CheckCircleIcon","pageData","liveContext","examples","props","Component","createElement","displayName"],"sources":["/Users/jschuler/Code/patternfly-quickstarts/packages/docs/src/generated/components/button/react-demos.js"],"sourcesContent":["import React from 'react';\nimport { AutoLinkHeader, Example, Link as PatternflyThemeLink } from 'theme-patternfly-org/components';\nimport CheckCircleIcon from '@patternfly/react-icons/dist/esm/icons/check-circle-icon';\nconst pageData = {\n  \"id\": \"Button\",\n  \"section\": \"components\",\n  \"source\": \"react-demos\",\n  \"slug\": \"/components/button/react-demos\",\n  \"sourceLink\": \"https://github.com/patternfly/patternfly-react/blob/main/packages/docs/packages/react-core/src/demos/Button.md\",\n  \"examples\": [\n    \"Progress button\"\n  ]\n};\npageData.liveContext = {\n  CheckCircleIcon\n};\npageData.examples = {\n  'Progress button': props => \n    <Example {...pageData} {...props} {...{\"code\":\"import React from 'react';\\nimport { Form, FormGroup, ActionGroup, InputGroup, TextInput, Button } from '@patternfly/react-core';\\nimport CheckCircleIcon from '@patternfly/react-icons/dist/esm/icons/check-circle-icon';\\n\\nconst ProgressButton: React.FunctionComponent = () => {\\n  const [loginState, setLoginState] = React.useState<'notLoggedIn' | 'loading' | 'loggedIn'>('notLoggedIn');\\n\\n  return (\\n    <Form>\\n      <FormGroup label=\\\"Username\\\" isRequired fieldId=\\\"progress-button-initial-login\\\">\\n        <TextInput\\n          isRequired\\n          type=\\\"text\\\"\\n          id=\\\"progress-button-initial-login\\\"\\n          name=\\\"progress-button-initial-login\\\"\\n          value=\\\"johndoe\\\"\\n          aria-label=\\\"username input\\\"\\n        />\\n      </FormGroup>\\n      <FormGroup label=\\\"Password\\\" isRequired fieldId=\\\"progress-button-initial-password\\\">\\n        <TextInput\\n          isRequired\\n          type=\\\"password\\\"\\n          value=\\\"p@ssw0rd\\\"\\n          id=\\\"progress-button-initial-password\\\"\\n          name=\\\"progress-button-initial-password\\\"\\n          aria-label=\\\"password input\\\"\\n        />\\n      </FormGroup>\\n      <ActionGroup>\\n        <Button\\n          variant=\\\"primary\\\"\\n          onClick={\\n            loginState === 'notLoggedIn'\\n              ? () => {\\n                  setLoginState('loading');\\n                  setTimeout(() => {\\n                    setLoginState('loggedIn');\\n                  }, 3000);\\n                }\\n              : null\\n          }\\n          isLoading={loginState === 'loading'}\\n          icon={loginState === 'loggedIn' ? <CheckCircleIcon /> : null}\\n          spinnerAriaValueText=\\\"Loading...\\\"\\n        >\\n          {loginState === 'notLoggedIn' && 'Link account and log in'}\\n          {loginState === 'loading' && 'Linking account'}\\n          {loginState === 'loggedIn' && 'Logged in'}\\n        </Button>\\n      </ActionGroup>\\n    </Form>\\n  );\\n};\",\"title\":\"Progress button\",\"lang\":\"ts\"}}>\n      \n    </Example>\n};\n\nconst Component = () => (\n  <React.Fragment>\n    <AutoLinkHeader {...{\"id\":\"demos\",\"size\":\"h2\",\"className\":\"ws-title ws-h2\"}}>\n      {`Demos`}\n    </AutoLinkHeader>\n    {React.createElement(pageData.examples[\"Progress button\"])}\n  </React.Fragment>\n);\nComponent.displayName = 'ComponentsButtonReactDemosDocs';\nComponent.pageData = pageData;\n\nexport default Component;\n"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,EAAyBC,OAAzB,EAAkCC,IAAI,IAAIC,mBAA1C,QAAqE,iCAArE;AACA,OAAOC,eAAP,MAA4B,0DAA5B;AACA,IAAMC,QAAQ,GAAG;EACf,MAAM,QADS;EAEf,WAAW,YAFI;EAGf,UAAU,aAHK;EAIf,QAAQ,gCAJO;EAKf,cAAc,gHALC;EAMf,YAAY,CACV,iBADU;AANG,CAAjB;AAUAA,QAAQ,CAACC,WAAT,GAAuB;EACrBF,eAAe,EAAfA;AADqB,CAAvB;AAGAC,QAAQ,CAACE,QAAT,GAAoB;EAClB,mBAAmB,wBAAAC,KAAK;IAAA,oBACtB,oBAAC,OAAD,eAAaH,QAAb,EAA2BG,KAA3B;MAAuC,QAAO,u5DAA9C;MAAs8D,SAAQ,iBAA98D;MAAg+D,QAAO;IAAv+D,GADsB;EAAA;AADN,CAApB;;AAOA,IAAMC,SAAS,GAAG,SAAZA,SAAY;EAAA,oBAChB,oBAAC,KAAD,CAAO,QAAP,qBACE,oBAAC,cAAD;IAAqB,MAAK,OAA1B;IAAkC,QAAO,IAAzC;IAA8C,aAAY;EAA1D,WADF,EAIGV,KAAK,CAACW,aAAN,CAAoBL,QAAQ,CAACE,QAAT,CAAkB,iBAAlB,CAApB,CAJH,CADgB;AAAA,CAAlB;;AAQAE,SAAS,CAACE,WAAV,GAAwB,gCAAxB;AACAF,SAAS,CAACJ,QAAV,GAAqBA,QAArB;AAEA,eAAeI,SAAf"},"metadata":{},"sourceType":"module"}