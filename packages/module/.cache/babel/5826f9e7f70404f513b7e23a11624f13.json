{"ast":null,"code":"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Router, useLocation } from '@reach/router';\nimport { SideNavLayout } from 'theme-patternfly-org/layouts';\nimport { Footer } from 'theme-patternfly-org/components';\nimport { MDXTemplate } from 'theme-patternfly-org/templates/mdx';\nimport { routes, groupedRoutes, fullscreenRoutes, getAsyncComponent } from './routes';\nimport 'client-styles';\n\nvar AppRoute = function AppRoute(_ref) {\n  var child = _ref.child,\n      katacodaLayout = _ref.katacodaLayout,\n      title = _ref.title;\n  var location = useLocation();\n\n  if (typeof window !== 'undefined' && window.gtag) {\n    gtag('config', 'UA-47523816-6', {\n      'page_path': location.pathname,\n      'page_title': title || location.pathname\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, child, !katacodaLayout && process.env.hasFooter && /*#__PURE__*/React.createElement(Footer, null));\n};\n\nvar SideNavRouter = function SideNavRouter() {\n  var pathname = useLocation().pathname.replace(process.env.pathPrefix, '');\n  var navOpen = !routes[pathname] || !routes[pathname].katacodaLayout;\n  return /*#__PURE__*/React.createElement(SideNavLayout, {\n    groupedRoutes: groupedRoutes,\n    navOpen: navOpen\n  }, /*#__PURE__*/React.createElement(Router, {\n    id: \"ws-page-content-router\"\n  }, Object.entries(routes).map(function (_ref2) {\n    var path = _ref2[0],\n        _ref2$ = _ref2[1],\n        Component = _ref2$.Component,\n        title = _ref2$.title,\n        sources = _ref2$.sources,\n        katacodaLayout = _ref2$.katacodaLayout;\n    return Component ? /*#__PURE__*/React.createElement(AppRoute, {\n      key: path,\n      path: path,\n      \"default\": path === '/404',\n      child: /*#__PURE__*/React.createElement(Component, null),\n      katacodaLayout: katacodaLayout,\n      title: title\n    }) : /*#__PURE__*/React.createElement(AppRoute, {\n      key: path,\n      path: path + '/*',\n      child: /*#__PURE__*/React.createElement(MDXTemplate, {\n        path: path,\n        title: title,\n        sources: sources\n      }),\n      katacodaLayout: katacodaLayout,\n      title: title\n    });\n  })));\n};\n\nvar FullscreenComponent = function FullscreenComponent(_ref3) {\n  var Component = _ref3.Component,\n      title = _ref3.title;\n\n  var _React$useState = React.useState(false),\n      isLoaded = _React$useState[0],\n      setIsLoaded = _React$useState[1];\n\n  React.useEffect(function () {\n    Component.preload().then(function () {\n      return setIsLoaded(true);\n    });\n  }, []);\n\n  var _Component$getPageDat = Component.getPageData(),\n      _Component$getPageDat2 = _Component$getPageDat.examples,\n      examples = _Component$getPageDat2 === void 0 ? {} : _Component$getPageDat2;\n\n  var Example = examples[title];\n  return isLoaded ? /*#__PURE__*/React.createElement(Example, {\n    isFullscreen: false,\n    isFullscreenPreview: true\n  }) : /*#__PURE__*/React.createElement(Component, null);\n}; // Export for SSR\n\n\nexport var App = function App() {\n  return /*#__PURE__*/React.createElement(Router, {\n    basepath: process.env.pathPrefix,\n    id: \"ws-router\"\n  }, /*#__PURE__*/React.createElement(SideNavRouter, {\n    path: \"/*\"\n  }), Object.entries(fullscreenRoutes).map(function (_ref4) {\n    var path = _ref4[0],\n        _ref4$ = _ref4[1],\n        title = _ref4$.title,\n        Component = _ref4$.Component;\n    return /*#__PURE__*/React.createElement(FullscreenComponent, {\n      key: path,\n      path: path,\n      Component: Component,\n      title: title\n    });\n  }));\n};\nvar isProd = process.env.NODE_ENV === 'production';\nvar isPrerender = process.env.PRERENDER; // Don't use ReactDOM in SSR\n\nif (!isPrerender) {\n  var render = function render() {\n    var renderFn = isProd ? ReactDOM.hydrate : ReactDOM.render;\n    renderFn( /*#__PURE__*/React.createElement(App, null), document.getElementById('root'));\n  }; // On first load, await promise for the current page to avoid flashing a \"Loading...\" state\n\n\n  var Component = getAsyncComponent(null);\n\n  if (Component) {\n    Component.preload().then(render);\n  } else {\n    render();\n  }\n}","map":{"version":3,"sources":["/Users/ctrowbri/dev/patternfly-quickstarts/node_modules/theme-patternfly-org/app.js"],"names":["React","ReactDOM","Router","useLocation","SideNavLayout","Footer","MDXTemplate","routes","groupedRoutes","fullscreenRoutes","getAsyncComponent","AppRoute","child","katacodaLayout","title","location","window","gtag","pathname","process","env","hasFooter","SideNavRouter","replace","pathPrefix","navOpen","Object","entries","map","path","Component","sources","FullscreenComponent","useState","isLoaded","setIsLoaded","useEffect","preload","then","getPageData","examples","Example","App","isProd","NODE_ENV","isPrerender","PRERENDER","render","renderFn","hydrate","document","getElementById"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,MAAT,EAAiBC,WAAjB,QAAoC,eAApC;AACA,SAASC,aAAT,QAA8B,8BAA9B;AACA,SAASC,MAAT,QAAuB,iCAAvB;AACA,SAASC,WAAT,QAA4B,oCAA5B;AACA,SAASC,MAAT,EAAiBC,aAAjB,EAAgCC,gBAAhC,EAAkDC,iBAAlD,QAA2E,UAA3E;AACA,OAAO,eAAP;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,OAAsC;AAAA,MAAnCC,KAAmC,QAAnCA,KAAmC;AAAA,MAA5BC,cAA4B,QAA5BA,cAA4B;AAAA,MAAZC,KAAY,QAAZA,KAAY;AACrD,MAAMC,QAAQ,GAAGZ,WAAW,EAA5B;;AACA,MAAI,OAAOa,MAAP,KAAkB,WAAlB,IAAiCA,MAAM,CAACC,IAA5C,EAAkD;AAChDA,IAAAA,IAAI,CAAC,QAAD,EAAW,eAAX,EAA4B;AAC9B,mBAAaF,QAAQ,CAACG,QADQ;AAE9B,oBAAeJ,KAAK,IAAIC,QAAQ,CAACG;AAFH,KAA5B,CAAJ;AAID;;AACD,sBACE,oBAAC,KAAD,CAAO,QAAP,QACGN,KADH,EAEG,CAACC,cAAD,IAAmBM,OAAO,CAACC,GAAR,CAAYC,SAA/B,iBAA4C,oBAAC,MAAD,OAF/C,CADF;AAMD,CAdD;;AAgBA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAC1B,MAAMJ,QAAQ,GAAGf,WAAW,GAAGe,QAAd,CAAuBK,OAAvB,CAA+BJ,OAAO,CAACC,GAAR,CAAYI,UAA3C,EAAuD,EAAvD,CAAjB;AACA,MAAMC,OAAO,GAAG,CAAClB,MAAM,CAACW,QAAD,CAAP,IAAqB,CAACX,MAAM,CAACW,QAAD,CAAN,CAAiBL,cAAvD;AACA,sBACE,oBAAC,aAAD;AAAe,IAAA,aAAa,EAAEL,aAA9B;AAA6C,IAAA,OAAO,EAAEiB;AAAtD,kBACE,oBAAC,MAAD;AAAQ,IAAA,EAAE,EAAC;AAAX,KACGC,MAAM,CAACC,OAAP,CAAepB,MAAf,EACEqB,GADF,CACM;AAAA,QAAEC,IAAF;AAAA;AAAA,QAAUC,SAAV,UAAUA,SAAV;AAAA,QAAqBhB,KAArB,UAAqBA,KAArB;AAAA,QAA4BiB,OAA5B,UAA4BA,OAA5B;AAAA,QAAqClB,cAArC,UAAqCA,cAArC;AAAA,WAA2DiB,SAAS,gBACrE,oBAAC,QAAD;AACE,MAAA,GAAG,EAAED,IADP;AAEE,MAAA,IAAI,EAAEA,IAFR;AAGE,iBAASA,IAAI,KAAK,MAHpB;AAIE,MAAA,KAAK,eAAE,oBAAC,SAAD,OAJT;AAKE,MAAA,cAAc,EAAEhB,cALlB;AAME,MAAA,KAAK,EAAEC;AANT,MADqE,gBASrE,oBAAC,QAAD;AACE,MAAA,GAAG,EAAEe,IADP;AAEE,MAAA,IAAI,EAAEA,IAAI,GAAG,IAFf;AAGE,MAAA,KAAK,eACH,oBAAC,WAAD;AACE,QAAA,IAAI,EAAEA,IADR;AAEE,QAAA,KAAK,EAAEf,KAFT;AAGE,QAAA,OAAO,EAAEiB;AAHX,QAJJ;AAUE,MAAA,cAAc,EAAElB,cAVlB;AAWE,MAAA,KAAK,EAAEC;AAXT,MATC;AAAA,GADN,CADH,CADF,CADF;AA+BD,CAlCD;;AAoCA,IAAMkB,mBAAmB,GAAG,SAAtBA,mBAAsB,QAA0B;AAAA,MAAvBF,SAAuB,SAAvBA,SAAuB;AAAA,MAAZhB,KAAY,SAAZA,KAAY;;AACpD,wBAAgCd,KAAK,CAACiC,QAAN,CAAe,KAAf,CAAhC;AAAA,MAAOC,QAAP;AAAA,MAAiBC,WAAjB;;AACAnC,EAAAA,KAAK,CAACoC,SAAN,CAAgB,YAAM;AACpBN,IAAAA,SAAS,CAACO,OAAV,GAAoBC,IAApB,CAAyB;AAAA,aAAMH,WAAW,CAAC,IAAD,CAAjB;AAAA,KAAzB;AACD,GAFD,EAEG,EAFH;;AAGA,8BAA0BL,SAAS,CAACS,WAAV,EAA1B;AAAA,qDAAQC,QAAR;AAAA,MAAQA,QAAR,uCAAmB,EAAnB;;AACA,MAAMC,OAAO,GAAGD,QAAQ,CAAC1B,KAAD,CAAxB;AACA,SAAOoB,QAAQ,gBAAG,oBAAC,OAAD;AAAS,IAAA,YAAY,EAAE,KAAvB;AAA8B,IAAA,mBAAmB;AAAjD,IAAH,gBAA0D,oBAAC,SAAD,OAAzE;AACD,CARD,C,CAUA;;;AACA,OAAO,IAAMQ,GAAG,GAAG,SAANA,GAAM;AAAA,sBACjB,oBAAC,MAAD;AAAQ,IAAA,QAAQ,EAAEvB,OAAO,CAACC,GAAR,CAAYI,UAA9B;AAA0C,IAAA,EAAE,EAAC;AAA7C,kBACE,oBAAC,aAAD;AAAe,IAAA,IAAI,EAAC;AAApB,IADF,EAEGE,MAAM,CAACC,OAAP,CAAelB,gBAAf,EACEmB,GADF,CACM;AAAA,QAAEC,IAAF;AAAA;AAAA,QAAUf,KAAV,UAAUA,KAAV;AAAA,QAAiBgB,SAAjB,UAAiBA,SAAjB;AAAA,wBACH,oBAAC,mBAAD;AACE,MAAA,GAAG,EAAED,IADP;AAEE,MAAA,IAAI,EAAEA,IAFR;AAGE,MAAA,SAAS,EAAEC,SAHb;AAIE,MAAA,KAAK,EAAEhB;AAJT,MADG;AAAA,GADN,CAFH,CADiB;AAAA,CAAZ;AAgBP,IAAM6B,MAAM,GAAGxB,OAAO,CAACC,GAAR,CAAYwB,QAAZ,KAAyB,YAAxC;AACA,IAAMC,WAAW,GAAG1B,OAAO,CAACC,GAAR,CAAY0B,SAAhC,C,CACA;;AACA,IAAI,CAACD,WAAL,EAAkB;AAAA,MACPE,MADO,GAChB,SAASA,MAAT,GAAkB;AAChB,QAAMC,QAAQ,GAAGL,MAAM,GAAG1C,QAAQ,CAACgD,OAAZ,GAAsBhD,QAAQ,CAAC8C,MAAtD;AACAC,IAAAA,QAAQ,eAAC,oBAAC,GAAD,OAAD,EAAUE,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAV,CAAR;AACD,GAJe,EAKhB;;;AACA,MAAMrB,SAAS,GAAGpB,iBAAiB,CAAC,IAAD,CAAnC;;AACA,MAAIoB,SAAJ,EAAe;AACbA,IAAAA,SAAS,CAACO,OAAV,GAAoBC,IAApB,CAAyBS,MAAzB;AACD,GAFD,MAGK;AACHA,IAAAA,MAAM;AACP;AACF","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Router, useLocation } from '@reach/router';\nimport { SideNavLayout } from 'theme-patternfly-org/layouts';\nimport { Footer } from 'theme-patternfly-org/components';\nimport { MDXTemplate } from 'theme-patternfly-org/templates/mdx';\nimport { routes, groupedRoutes, fullscreenRoutes, getAsyncComponent } from './routes';\nimport 'client-styles';\n\nconst AppRoute = ({ child, katacodaLayout, title }) => {\n  const location = useLocation();\n  if (typeof window !== 'undefined' && window.gtag) {\n    gtag('config', 'UA-47523816-6', {\n      'page_path': location.pathname,\n      'page_title': (title || location.pathname)\n    });\n  }\n  return (\n    <React.Fragment>\n      {child}\n      {!katacodaLayout && process.env.hasFooter && <Footer />}\n    </React.Fragment>\n  );\n}\n\nconst SideNavRouter = () => {\n  const pathname = useLocation().pathname.replace(process.env.pathPrefix, '');\n  const navOpen = !routes[pathname] || !routes[pathname].katacodaLayout;\n  return (\n    <SideNavLayout groupedRoutes={groupedRoutes} navOpen={navOpen} >\n      <Router id=\"ws-page-content-router\">\n        {Object.entries(routes)\n          .map(([path, { Component, title, sources, katacodaLayout }]) => Component\n            ? <AppRoute\n                key={path}\n                path={path}\n                default={path === '/404'}\n                child={<Component />}\n                katacodaLayout={katacodaLayout}\n                title={title}\n              />\n            : <AppRoute\n                key={path}\n                path={path + '/*'}\n                child={\n                  <MDXTemplate\n                    path={path}\n                    title={title}\n                    sources={sources}\n                  />\n                }\n                katacodaLayout={katacodaLayout}\n                title={title}\n              />\n          )\n        }\n      </Router>\n    </SideNavLayout>\n  );\n}\n\nconst FullscreenComponent = ({ Component, title }) => {\n  const [isLoaded, setIsLoaded] = React.useState(false);\n  React.useEffect(() => {\n    Component.preload().then(() => setIsLoaded(true));\n  }, []);\n  const { examples = {} } = Component.getPageData();\n  const Example = examples[title];\n  return isLoaded ? <Example isFullscreen={false} isFullscreenPreview /> : <Component />;\n};\n\n// Export for SSR\nexport const App = () => (\n  <Router basepath={process.env.pathPrefix} id=\"ws-router\">\n    <SideNavRouter path=\"/*\" />\n    {Object.entries(fullscreenRoutes)\n      .map(([path, { title, Component }]) =>\n        <FullscreenComponent\n          key={path}\n          path={path}\n          Component={Component}\n          title={title}\n        />\n      )\n    }\n  </Router>\n);\n\nconst isProd = process.env.NODE_ENV === 'production';\nconst isPrerender = process.env.PRERENDER;\n// Don't use ReactDOM in SSR\nif (!isPrerender) {\n  function render() {\n    const renderFn = isProd ? ReactDOM.hydrate : ReactDOM.render;\n    renderFn(<App />, document.getElementById('root'));\n  }\n  // On first load, await promise for the current page to avoid flashing a \"Loading...\" state\n  const Component = getAsyncComponent(null);\n  if (Component) {\n    Component.preload().then(render);\n  }\n  else {\n    render();\n  }\n}\n"]},"metadata":{},"sourceType":"module"}