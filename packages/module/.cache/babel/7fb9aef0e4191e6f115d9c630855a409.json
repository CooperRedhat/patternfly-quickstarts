{"ast":null,"code":"// This module is shared between NodeJS and babelled ES5\nvar _require = require('theme-patternfly-org/helpers/slugger'),\n    makeSlug = _require.makeSlug,\n    slugger = _require.slugger;\n\nvar _require2 = require('theme-patternfly-org/helpers/asyncComponentFactory'),\n    asyncComponentFactory = _require2.asyncComponentFactory;\n\nvar clientRoutes = require('./routes-client'); // Webpack replaces this import\n\n\nvar generatedRoutes = require('./routes-generated'); // Webpack replaces this import\n\n\nvar routes = Object.assign({}, clientRoutes, generatedRoutes);\n\nfor (var route in routes) {\n  var pageData = routes[route];\n\n  if (pageData.SyncComponent) {\n    pageData.Component = pageData.SyncComponent;\n  } else if (pageData.Component) {\n    pageData.Component = asyncComponentFactory(route, pageData);\n  }\n} // Save a copy of all routes for path matching on first load\n\n\nvar allRoutes = Object.assign({}, routes); // Group routes by section, id\n\nvar isNull = function isNull(o) {\n  return o === null || o === undefined;\n};\n\nvar groupedRoutes = Object.entries(routes).filter(function (_ref) {\n  var _slug = _ref[0],\n      _ref$ = _ref[1],\n      id = _ref$.id,\n      section = _ref$.section;\n  return !isNull(id) && !isNull(section);\n}).reduce(function (accum, _ref2) {\n  var slug = _ref2[0],\n      pageData = _ref2[1];\n  var section = pageData.section,\n      id = pageData.id,\n      title = pageData.title,\n      source = pageData.source,\n      katacodaLayout = pageData.katacodaLayout,\n      hideNavItem = pageData.hideNavItem;\n  accum[section] = accum[section] || {};\n  accum[section][id] = accum[section][id] || {\n    id: id,\n    section: section,\n    title: title,\n    slug: makeSlug(source, section, id, true),\n    sources: [],\n    katacodaLayout: katacodaLayout,\n    hideNavItem: hideNavItem\n  };\n  pageData.slug = slug;\n  accum[section][id].sources.push(pageData);\n  return accum;\n}, {});\nvar sourceOrder = {\n  react: 1,\n  'react-composable': 1.1,\n  'react-legacy': 1.2,\n  'react-demos': 2,\n  html: 3,\n  'html-demos': 4,\n  'design-guidelines': 99,\n  'accessibility': 100\n};\nvar defaultOrder = 50;\n\nvar sortSources = function sortSources(_ref3, _ref4) {\n  var s1 = _ref3.source;\n  var s2 = _ref4.source;\n  var s1Index = sourceOrder[s1] || defaultOrder;\n  var s2Index = sourceOrder[s2] || defaultOrder;\n\n  if (s1Index === defaultOrder && s2Index === defaultOrder) {\n    return s1.localeCompare(s2);\n  }\n\n  return s1Index > s2Index ? 1 : -1;\n};\n\nvar getDefaultDesignGuidelines = function getDefaultDesignGuidelines(_ref5) {\n  var id = _ref5.id,\n      section = _ref5.section,\n      slug = _ref5.slug,\n      title = _ref5.title;\n\n  var Component = function Component() {\n    return require('theme-patternfly-org/templates/design-guidelines').DesignGuidelineTemplate;\n  };\n\n  var pageData = {\n    id: id,\n    section: section,\n    slug: slug + \"/design-guidelines\",\n    source: 'design-guidelines',\n    title: title,\n    Component: Component\n  };\n\n  Component.getPageData = function () {\n    return pageData;\n  };\n\n  return pageData;\n};\n\nObject.entries(groupedRoutes).forEach(function (_ref6) {\n  var _section = _ref6[0],\n      ids = _ref6[1];\n  Object.values(ids).forEach(function (pageData) {\n    var slug = pageData.slug,\n        section = pageData.section; // Remove source routes for `app.js`\n\n    pageData.sources.forEach(function (_ref7) {\n      var slug = _ref7.slug;\n      delete routes[slug];\n    }); // Add design guidelines if doesn't exist\n\n    if (['components', 'charts', 'layouts', 'demos'].includes(section) && !pageData.sources.map(function (_ref8) {\n      var source = _ref8.source;\n      return source;\n    }).includes('design-guidelines') && process.env.hasDesignGuidelines) {\n      pageData.sources.push(getDefaultDesignGuidelines(pageData));\n    } // Sort sources for tabs\n\n\n    pageData.sources = pageData.sources.sort(sortSources); // Add grouped route\n\n    routes[slug] = pageData;\n  });\n});\n\nfunction getAsyncComponent(url) {\n  if (!url && typeof window !== 'undefined') {\n    url = window.location.pathname.replace(/\\/$/, '') || '/';\n  } // Normalize path for matching\n\n\n  url = url.replace(process.env.pathPrefix, '');\n  var res;\n\n  if (allRoutes[url]) {\n    res = allRoutes[url].Component;\n  } else if (routes[url]) {\n    res = routes[url].sources[0].Component;\n  }\n\n  if (res && res.preload) {\n    return res;\n  }\n\n  return null;\n}\n\nvar fullscreenRoutes = Object.entries(allRoutes).filter(function (_ref9) {\n  var _ref9$ = _ref9[1],\n      examples = _ref9$.examples,\n      fullscreenExamples = _ref9$.fullscreenExamples;\n  return examples || fullscreenExamples;\n}).reduce(function (acc, val) {\n  var path = val[0],\n      _val$ = val[1],\n      Component = _val$.Component,\n      _val$$examples = _val$.examples,\n      examples = _val$$examples === void 0 ? [] : _val$$examples,\n      _val$$fullscreenExamp = _val$.fullscreenExamples,\n      fullscreenExamples = _val$$fullscreenExamp === void 0 ? [] : _val$$fullscreenExamp;\n  examples.concat(fullscreenExamples).forEach(function (title) {\n    var slug = path + \"/\" + slugger(title);\n    acc[slug] = {\n      title: title,\n      Component: Component,\n      isFullscreen: true,\n      isFullscreenOnly: fullscreenExamples.includes(title)\n    };\n  });\n  return acc;\n}, {});\nmodule.exports = {\n  routes: routes,\n  groupedRoutes: groupedRoutes,\n  fullscreenRoutes: fullscreenRoutes,\n  getAsyncComponent: getAsyncComponent\n};","map":null,"metadata":{},"sourceType":"module"}