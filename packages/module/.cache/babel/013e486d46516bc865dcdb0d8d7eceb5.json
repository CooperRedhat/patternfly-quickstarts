{"ast":null,"code":"import React from 'react';\nimport { Link } from '../link/link';\nimport { Nav, NavList, NavExpandable, PageContextConsumer, capitalize } from '@patternfly/react-core';\nimport { css } from '@patternfly/react-styles';\nimport { Location } from '@reach/router';\nimport { slugger } from '../../helpers';\nimport './sideNav.css';\nimport globalBreakpointXl from \"@patternfly/react-tokens/dist/esm/global_breakpoint_xl\";\nimport { trackEvent } from '../../helpers';\n\nvar NavItem = function NavItem(_ref) {\n  var text = _ref.text,\n      href = _ref.href;\n  var isMobileView = window.innerWidth < Number.parseInt(globalBreakpointXl.value, 10);\n  return /*#__PURE__*/React.createElement(PageContextConsumer, {\n    key: href + text\n  }, function (_ref2) {\n    var onNavToggle = _ref2.onNavToggle;\n    return /*#__PURE__*/React.createElement(\"li\", {\n      key: href + text,\n      className: \"pf-c-nav__item\",\n      onClick: function onClick() {\n        return isMobileView && onNavToggle();\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: href,\n      getProps: function getProps(_ref3) {\n        var isCurrent = _ref3.isCurrent,\n            href = _ref3.href,\n            location = _ref3.location;\n        var pathname = location.pathname;\n        return {\n          className: css('pf-c-nav__link', (isCurrent || pathname.startsWith(href + '/')) && 'pf-m-current')\n        };\n      }\n    }, text));\n  });\n};\n\nexport var SideNav = function SideNav(_ref4) {\n  var _ref4$groupedRoutes = _ref4.groupedRoutes,\n      groupedRoutes = _ref4$groupedRoutes === void 0 ? {} : _ref4$groupedRoutes,\n      _ref4$navItems = _ref4.navItems,\n      navItems = _ref4$navItems === void 0 ? [] : _ref4$navItems;\n  React.useEffect(function () {\n    if (typeof window === 'undefined') {\n      return;\n    }\n\n    var overflowElement = document.getElementById('page-sidebar');\n\n    if (!overflowElement) {\n      return;\n    }\n\n    var activeElements = overflowElement.getElementsByClassName('pf-m-current');\n\n    if (activeElements.length > 0) {\n      var lastElement = activeElements[activeElements.length - 1];\n      lastElement.scrollIntoView({\n        block: 'center'\n      });\n    }\n  }, []);\n  return /*#__PURE__*/React.createElement(Nav, {\n    \"aria-label\": \"Side Nav\",\n    theme: \"light\"\n  }, /*#__PURE__*/React.createElement(NavList, {\n    className: \"ws-side-nav-list\"\n  }, navItems.map(function (_ref5) {\n    var section = _ref5.section,\n        text = _ref5.text,\n        href = _ref5.href;\n    return section ? /*#__PURE__*/React.createElement(Location, {\n      key: section\n    }, function (_ref6) {\n      var location = _ref6.location;\n      var isActive = location.pathname.startsWith(process.env.pathPrefix + \"/\" + slugger(section));\n      return /*#__PURE__*/React.createElement(NavExpandable, {\n        title: capitalize(section.replace(/-/g, ' ')),\n        isActive: isActive,\n        isExpanded: isActive,\n        className: \"ws-side-nav-group\",\n        onClick: function onClick(event) {\n          // Don't trigger for bubbled events from NavItems\n          if (!event.target.href) {\n            var isExpanded = event.currentTarget.classList.contains('pf-m-expanded'); // 1 === expand section, 0 === collapse section\n\n            trackEvent('sidenav_section_click', 'click_event', section, isExpanded ? 0 : 1);\n          }\n        }\n      }, Object.entries(groupedRoutes[section] || {}).filter(function (_ref7) {\n        var hideNavItem = _ref7[1].hideNavItem;\n        return !Boolean(hideNavItem);\n      }).map(function (_ref8) {\n        var id = _ref8[0],\n            slug = _ref8[1].slug;\n        return {\n          text: id,\n          href: slug\n        };\n      }).sort(function (_ref9, _ref10) {\n        var text1 = _ref9.text;\n        var text2 = _ref10.text;\n        return text1.localeCompare(text2);\n      }).map(NavItem));\n    }) : NavItem({\n      text: text || capitalize(href.replace(/\\//g, '').replace(/-/g, ' ')),\n      href: href\n    });\n  })));\n};","map":{"version":3,"sources":["/Users/ctrowbri/dev/patternfly-quickstarts/node_modules/theme-patternfly-org/components/sideNav/sideNav.js"],"names":["React","Link","Nav","NavList","NavExpandable","PageContextConsumer","capitalize","css","Location","slugger","globalBreakpointXl","trackEvent","NavItem","text","href","isMobileView","window","innerWidth","Number","parseInt","value","onNavToggle","isCurrent","location","pathname","className","startsWith","SideNav","groupedRoutes","navItems","useEffect","overflowElement","document","getElementById","activeElements","getElementsByClassName","length","lastElement","scrollIntoView","block","map","section","isActive","process","env","pathPrefix","replace","event","target","isExpanded","currentTarget","classList","contains","Object","entries","filter","hideNavItem","Boolean","id","slug","sort","text1","text2","localeCompare"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Link } from '../link/link';\nimport { Nav, NavList, NavExpandable, PageContextConsumer, capitalize } from '@patternfly/react-core';\nimport { css } from '@patternfly/react-styles';\nimport { Location } from '@reach/router';\nimport { slugger } from '../../helpers';\nimport './sideNav.css';\nimport globalBreakpointXl from \"@patternfly/react-tokens/dist/esm/global_breakpoint_xl\";\nimport { trackEvent } from '../../helpers';\n\nconst NavItem = ({ text, href }) => {\n  const isMobileView = window.innerWidth < Number.parseInt(globalBreakpointXl.value, 10);\n  return (\n    <PageContextConsumer key={href + text}>\n      {({onNavToggle}) => (\n          <li key={href + text} className=\"pf-c-nav__item\" onClick={() => isMobileView && onNavToggle()}>\n            <Link\n              to={href}\n              getProps={({ isCurrent, href, location }) => {\n                const { pathname } = location;\n                return {\n                  className: css(\n                    'pf-c-nav__link',\n                    (isCurrent || pathname.startsWith(href + '/')) && 'pf-m-current'\n                  )\n                }}\n              }\n            >\n              {text}\n            </Link>\n          </li>\n      )}\n    </PageContextConsumer>\n  )\n};\n\nexport const SideNav = ({ groupedRoutes = {}, navItems = [] }) => {\n  React.useEffect(() => {\n    if (typeof window === 'undefined') {\n      return;\n    }\n    const overflowElement = document.getElementById('page-sidebar');\n    if (!overflowElement) {\n      return;\n    }\n    const activeElements = overflowElement.getElementsByClassName('pf-m-current');\n    if (activeElements.length > 0) {\n      const lastElement = activeElements[activeElements.length - 1];\n      lastElement.scrollIntoView({ block: 'center' });\n    }\n  }, []);\n  \n  return (\n    <Nav aria-label=\"Side Nav\" theme=\"light\">\n      <NavList className=\"ws-side-nav-list\">\n        {navItems.map(({ section, text, href }) => section\n          ? (\n            <Location key={section}>\n              {({ location }) => {\n                const isActive = location.pathname.startsWith(`${process.env.pathPrefix}/${slugger(section)}`);\n                return (\n                  <NavExpandable\n                    title={capitalize(section.replace(/-/g, ' '))}\n                    isActive={isActive}\n                    isExpanded={isActive}\n                    className=\"ws-side-nav-group\"\n                    onClick={(event) => {\n                      // Don't trigger for bubbled events from NavItems\n                      if (!event.target.href) {\n                        const isExpanded = event.currentTarget.classList.contains('pf-m-expanded');\n                        // 1 === expand section, 0 === collapse section\n                        trackEvent('sidenav_section_click', 'click_event', section, isExpanded ? 0 : 1);\n                      }\n                    }}\n                  >\n                    {Object.entries(groupedRoutes[section] || {})\n                      .filter(([, { hideNavItem }]) => !Boolean(hideNavItem))\n                      .map(([id, { slug }]) => ({ text: id, href: slug }))\n                      .sort(({ text: text1 }, { text: text2 }) => text1.localeCompare(text2))\n                      .map(NavItem)\n                    }\n                  </NavExpandable>\n                );\n              }}\n            </Location>\n          )\n          : NavItem({\n              text: text || capitalize(href.replace(/\\//g, '').replace(/-/g, ' ')),\n              href: href\n            })\n        )}\n      </NavList>\n    </Nav>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}