{"ast":null,"code":"function _construct(Parent, args, Class) { if (_isNativeReflectConstruct()) { _construct = Reflect.construct; } else { _construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf(instance, Class.prototype); return instance; }; } return _construct.apply(null, arguments); }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport React from 'react';\nimport { useLocation } from '@reach/router';\nimport { Badge, CodeBlock, CodeBlockCode, debounce } from '@patternfly/react-core';\nimport * as reactCoreModule from '@patternfly/react-core';\nimport * as reactTableModule from '@patternfly/react-table';\nimport { css } from '@patternfly/react-styles';\nimport { getParameters } from 'codesandbox/lib/api/define';\nimport { ExampleToolbar } from './exampleToolbar';\nimport { AutoLinkHeader } from '../autoLinkHeader/autoLinkHeader';\nimport { slugger, getStaticParams, getReactParams, getExampleClassName, getExampleId, liveCodeTypes } from '../../helpers';\nimport { convertToReactComponent } from '@patternfly/ast-helpers';\nimport missingThumbnail from './missing-thumbnail.jpg';\nimport './example.css';\n\nvar errorComponent = function errorComponent(err) {\n  return /*#__PURE__*/React.createElement(\"pre\", null, err.toString());\n};\n\nvar ErrorBoundary = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(ErrorBoundary, _React$Component);\n\n  function ErrorBoundary(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n    _this.state = {\n      error: null,\n      errorInfo: null\n    };\n    return _this;\n  }\n\n  var _proto = ErrorBoundary.prototype;\n\n  _proto.componentDidCatch = function componentDidCatch(error, errorInfo) {\n    errorInfo._suppressLogging = true;\n    this.setState({\n      error: error,\n      errorInfo: errorInfo\n    });\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    if (prevProps.children !== this.props.children) {\n      this.setState({\n        error: null,\n        errorInfo: null\n      });\n    }\n  };\n\n  _proto.render = function render() {\n    if (this.state.errorInfo) {\n      return errorComponent(this.state.error);\n    }\n\n    return this.props.children;\n  };\n\n  return ErrorBoundary;\n}(React.Component); // Props come from mdx-ast-to-mdx-hast.js\n\n\nexport var Example = function Example(_ref) {\n  var code = _ref.code,\n      _ref$lang = _ref.lang,\n      lang = _ref$lang === void 0 ? '' : _ref$lang,\n      source = _ref.source,\n      _ref$noLive = _ref.noLive,\n      noLive = _ref$noLive === void 0 ? !liveCodeTypes.includes(lang) : _ref$noLive,\n      _ref$title = _ref.title,\n      title = _ref$title === void 0 ? 'Untitled' : _ref$title,\n      isFullscreen = _ref.isFullscreen,\n      isFullscreenPreview = _ref.isFullscreenPreview,\n      _ref$thumbnail = _ref.thumbnail,\n      thumbnail = _ref$thumbnail === void 0 ? missingThumbnail : _ref$thumbnail,\n      isBeta = _ref.isBeta,\n      id = _ref.id,\n      section = _ref.section,\n      liveContext = _ref.liveContext,\n      children = _ref.children;\n\n  if (isFullscreenPreview) {\n    isFullscreen = false;\n  }\n\n  if (!lang) {\n    // Inline code\n    return /*#__PURE__*/React.createElement(\"code\", {\n      className: \"ws-code\"\n    }, code);\n  } else if (noLive) {\n    // Code block\n    return /*#__PURE__*/React.createElement(CodeBlock, null, /*#__PURE__*/React.createElement(CodeBlockCode, null, code));\n  }\n\n  var _React$useState = React.useState(code),\n      editorCode = _React$useState[0],\n      setEditorCode = _React$useState[1];\n\n  var loc = useLocation();\n  var scope = Object.assign({}, liveContext, reactCoreModule, reactTableModule);\n  var livePreview = null;\n\n  if (lang === 'html') {\n    livePreview = /*#__PURE__*/React.createElement(\"div\", {\n      className: css('ws-preview-html', isFullscreenPreview && 'pf-u-h-100'),\n      dangerouslySetInnerHTML: {\n        __html: editorCode\n      }\n    });\n  } else {\n    try {\n      var _convertToReactCompon = convertToReactComponent(editorCode),\n          transformedCode = _convertToReactCompon.code,\n          hasTS = _convertToReactCompon.hasTS;\n\n      if (hasTS) {\n        lang = 'ts';\n      } else {\n        lang = 'js';\n      }\n\n      var getPreviewComponent = _construct(Function, ['React'].concat(Object.keys(scope), [transformedCode]));\n\n      var PreviewComponent = getPreviewComponent.apply(void 0, [React].concat(Object.values(scope)));\n      livePreview = /*#__PURE__*/React.createElement(ErrorBoundary, null, /*#__PURE__*/React.createElement(PreviewComponent, null));\n    } catch (err) {\n      livePreview = errorComponent(err);\n    }\n  }\n\n  var previewId = getExampleId(source, section[0], id, title);\n  var className = getExampleClassName(source, section[0], id);\n\n  if (isFullscreenPreview) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: previewId,\n      className: css(className, 'pf-u-h-100')\n    }, livePreview);\n  }\n\n  var codeBoxParams = getParameters(lang === 'html' ? getStaticParams(title, editorCode) : getReactParams(title, editorCode, scope, lang));\n  var fullscreenLink = loc.pathname.replace(/\\/$/, '') + (loc.pathname.endsWith(source) ? '' : \"/\" + source) + '/' + slugger(title);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ws-example\"\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ws-example-header\"\n  }, /*#__PURE__*/React.createElement(AutoLinkHeader, {\n    metaText: isBeta && /*#__PURE__*/React.createElement(Badge, {\n      className: \"ws-beta-badge pf-u-ml-xs\"\n    }, \"Beta\"),\n    size: \"h4\",\n    headingLevel: \"h3\",\n    className: \"ws-example-heading\"\n  }, title), children), isFullscreen ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ws-preview\"\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    className: \"ws-preview__thumbnail-link\",\n    href: fullscreenLink,\n    target: \"_blank\",\n    \"aria-label\": \"Open fullscreen \" + title + \" example\"\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: thumbnail.src,\n    width: thumbnail.width,\n    height: thumbnail.height\n  }))) : /*#__PURE__*/React.createElement(\"div\", {\n    id: previewId,\n    className: css(className, isFullscreen ? 'ws-preview-fullscreen' : 'ws-preview')\n  }, livePreview), /*#__PURE__*/React.createElement(ExampleToolbar, {\n    lang: lang,\n    isFullscreen: isFullscreen,\n    fullscreenLink: fullscreenLink,\n    originalCode: code,\n    code: editorCode,\n    setCode: debounce(setEditorCode, 300),\n    codeBoxParams: codeBoxParams\n  }));\n};","map":{"version":3,"sources":["/Users/ctrowbri/dev/patternfly-quickstarts/node_modules/theme-patternfly-org/components/example/example.js"],"names":["React","useLocation","Badge","CodeBlock","CodeBlockCode","debounce","reactCoreModule","reactTableModule","css","getParameters","ExampleToolbar","AutoLinkHeader","slugger","getStaticParams","getReactParams","getExampleClassName","getExampleId","liveCodeTypes","convertToReactComponent","missingThumbnail","errorComponent","err","toString","ErrorBoundary","props","state","error","errorInfo","componentDidCatch","_suppressLogging","setState","componentDidUpdate","prevProps","children","render","Component","Example","code","lang","source","noLive","includes","title","isFullscreen","isFullscreenPreview","thumbnail","isBeta","id","section","liveContext","useState","editorCode","setEditorCode","loc","scope","livePreview","__html","transformedCode","hasTS","getPreviewComponent","Function","Object","keys","PreviewComponent","values","previewId","className","codeBoxParams","fullscreenLink","pathname","replace","endsWith","src","width","height"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useLocation } from '@reach/router';\nimport { Badge, CodeBlock, CodeBlockCode, debounce } from '@patternfly/react-core';\nimport * as reactCoreModule from '@patternfly/react-core';\nimport * as reactTableModule from '@patternfly/react-table';\nimport { css } from '@patternfly/react-styles';\nimport { getParameters } from 'codesandbox/lib/api/define';\nimport { ExampleToolbar } from './exampleToolbar';\nimport { AutoLinkHeader } from '../autoLinkHeader/autoLinkHeader';\nimport {\n  slugger,\n  getStaticParams,\n  getReactParams,\n  getExampleClassName,\n  getExampleId,\n  liveCodeTypes\n} from '../../helpers';\nimport { convertToReactComponent } from '@patternfly/ast-helpers';\nimport missingThumbnail from './missing-thumbnail.jpg';\nimport './example.css';\n\nconst errorComponent = err => <pre>{err.toString()}</pre>;\n\nclass ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { error: null, errorInfo: null };\n  }\n  \n  componentDidCatch(error, errorInfo) {\n    errorInfo._suppressLogging = true;\n    this.setState({\n      error: error,\n      errorInfo: errorInfo\n    });\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.children !== this.props.children) {\n      this.setState({ error: null, errorInfo: null });\n    }\n  }\n  \n  render() {\n    if (this.state.errorInfo) {\n      return errorComponent(this.state.error);\n    }\n    return this.props.children;\n  }  \n}\n\n// Props come from mdx-ast-to-mdx-hast.js\nexport const Example = ({\n  // The ts/js/html code for the example\n  code,\n  // The language of the code\n  lang = '',\n  // Second parameter to sourceMD for file containing this code\n  // Should match tab name\n  source,\n  // Whether to disable the live code editor\n  noLive = !liveCodeTypes.includes(lang),\n  // Nearest parent h3\n  title = 'Untitled',\n  // Whether the example is fullscreen only and we should show a thumbnail\n  isFullscreen,\n  // Whether the example is open on the fullscreen page\n  isFullscreenPreview,\n  // The image src thumbnail for the example\n  thumbnail = missingThumbnail,\n  // Whether the example shows demo capability\n  isBeta,\n  // Slugified source + title\n  id,\n  // Section in frontmatter of MD file (components, demos, etc)\n  section,\n  // Extra constants for example (images, extra JS files, etc)\n  liveContext,\n  // Content that appears between h3 and code block to explain example\n  children,\n}) => {\n  if (isFullscreenPreview) {\n    isFullscreen = false;\n  }\n  if (!lang) {\n    // Inline code\n    return <code className=\"ws-code\">{code}</code>;\n  } else if (noLive) {\n    // Code block\n    return (\n      <CodeBlock>\n        <CodeBlockCode>{code}</CodeBlockCode>\n      </CodeBlock>\n    );\n  }\n\n  const [editorCode, setEditorCode] = React.useState(code);\n  const loc = useLocation();\n\n  const scope = {\n    ...liveContext,\n    // These 2 are in the bundle anyways for the site since we dogfood\n    ...reactCoreModule,\n    ...reactTableModule,\n  };\n  let livePreview = null;\n  if (lang === 'html') {\n    livePreview = (\n      <div\n        className={css('ws-preview-html', isFullscreenPreview && 'pf-u-h-100')}\n        dangerouslySetInnerHTML={{ __html: editorCode }}\n      />\n    );\n  } else {\n    try {\n      const { code: transformedCode, hasTS } = convertToReactComponent(editorCode);\n      if (hasTS) {\n        lang = 'ts';\n      } else {\n        lang = 'js';\n      }\n      const getPreviewComponent = new Function('React', ...Object.keys(scope), transformedCode);\n      const PreviewComponent = getPreviewComponent(React, ...Object.values(scope));\n      livePreview = (\n        <ErrorBoundary>\n          <PreviewComponent />\n        </ErrorBoundary>\n      );\n    } catch (err) {\n      livePreview = errorComponent(err);\n    }\n  }\n  const previewId = getExampleId(source, section[0], id, title);\n  const className = getExampleClassName(source, section[0], id);\n\n  if (isFullscreenPreview) {\n    return (\n      <div id={previewId} className={css(className, 'pf-u-h-100')}>\n        {livePreview}\n      </div>\n    );\n  }\n\n  const codeBoxParams = getParameters(\n    lang === 'html'\n      ? getStaticParams(title, editorCode)\n      : getReactParams(title, editorCode, scope, lang)\n  );\n  const fullscreenLink = loc.pathname.replace(/\\/$/, '')\n    + (loc.pathname.endsWith(source) ? '' : `/${source}`)\n    + '/'\n    + slugger(title);\n\n  return (\n    <div className=\"ws-example\">\n      <div className=\"ws-example-header\">\n        <AutoLinkHeader\n          metaText={isBeta && <Badge className=\"ws-beta-badge pf-u-ml-xs\">Beta</Badge>}\n          size=\"h4\"\n          headingLevel=\"h3\"\n          className=\"ws-example-heading\"\n        >\n          {title}\n        </AutoLinkHeader>\n        {children}\n      </div>\n      {isFullscreen\n        ? <div className=\"ws-preview\">\n            <a\n              className=\"ws-preview__thumbnail-link\"\n              href={fullscreenLink}\n              target=\"_blank\"\n              aria-label={`Open fullscreen ${title} example`}\n            >\n              <img src={thumbnail.src} width={thumbnail.width} height={thumbnail.height} />\n            </a>\n          </div>\n        : <div\n            id={previewId}\n            className={css(className, isFullscreen ? 'ws-preview-fullscreen' : 'ws-preview')}\n          >\n            {livePreview}\n          </div>\n      }\n      <ExampleToolbar\n        lang={lang}\n        isFullscreen={isFullscreen}\n        fullscreenLink={fullscreenLink}\n        originalCode={code}\n        code={editorCode}\n        setCode={debounce(setEditorCode, 300)}\n        codeBoxParams={codeBoxParams}\n      />\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}