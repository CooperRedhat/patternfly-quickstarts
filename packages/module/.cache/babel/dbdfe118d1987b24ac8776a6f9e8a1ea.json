{"ast":null,"code":"var React = require('react'); // Should produce valid URLs and valid CSS ids\n\n\nvar slugger = function slugger(children) {\n  var value = React.Children.toArray(children).join('');\n  return value.toLowerCase().trim().replace(/index$/, '').replace(/\\s/g, '-').replace(/[^A-Za-z0-9.\\-~]/g, '');\n};\n\nvar makeSlug = function makeSlug(source, section, id, noSource) {\n  var url = '';\n\n  if (section) {\n    url += \"/\" + slugger(section);\n  }\n\n  if (id) {\n    url += \"/\" + slugger(id);\n  }\n\n  if (source && !source.includes('pages-') && !noSource) {\n    url += \"/\" + source;\n  }\n\n  return url;\n};\n\nmodule.exports = {\n  slugger: slugger,\n  makeSlug: makeSlug\n};","map":{"version":3,"sources":["/Users/ctrowbri/dev/patternfly-quickstarts/node_modules/theme-patternfly-org/helpers/slugger.js"],"names":["React","require","slugger","children","value","Children","toArray","join","toLowerCase","trim","replace","makeSlug","source","section","id","noSource","url","includes","module","exports"],"mappings":"AAAA,IAAMA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB,C,CAEA;;;AACA,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAAAC,QAAQ,EAAI;AAC1B,MAAMC,KAAK,GAAGJ,KAAK,CAACK,QAAN,CAAeC,OAAf,CAAuBH,QAAvB,EAAiCI,IAAjC,CAAsC,EAAtC,CAAd;AACA,SAAOH,KAAK,CACTI,WADI,GAEJC,IAFI,GAGJC,OAHI,CAGI,QAHJ,EAGc,EAHd,EAIJA,OAJI,CAII,KAJJ,EAIW,GAJX,EAKJA,OALI,CAKI,mBALJ,EAKyB,EALzB,CAAP;AAMD,CARD;;AAUA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,MAAD,EAASC,OAAT,EAAkBC,EAAlB,EAAsBC,QAAtB,EAAmC;AAClD,MAAIC,GAAG,GAAG,EAAV;;AAEA,MAAIH,OAAJ,EAAa;AACXG,IAAAA,GAAG,UAAQd,OAAO,CAACW,OAAD,CAAlB;AACD;;AAED,MAAIC,EAAJ,EAAQ;AACNE,IAAAA,GAAG,UAAQd,OAAO,CAACY,EAAD,CAAlB;AACD;;AAED,MAAIF,MAAM,IAAI,CAACA,MAAM,CAACK,QAAP,CAAgB,QAAhB,CAAX,IAAwC,CAACF,QAA7C,EAAuD;AACrDC,IAAAA,GAAG,UAAQJ,MAAX;AACD;;AAED,SAAOI,GAAP;AACD,CAhBD;;AAkBAE,MAAM,CAACC,OAAP,GAAiB;AACfjB,EAAAA,OAAO,EAAPA,OADe;AAEfS,EAAAA,QAAQ,EAARA;AAFe,CAAjB","sourcesContent":["const React = require('react');\n\n// Should produce valid URLs and valid CSS ids\nconst slugger = children => {\n  const value = React.Children.toArray(children).join('');\n  return value\n    .toLowerCase()\n    .trim()\n    .replace(/index$/, '')\n    .replace(/\\s/g, '-')\n    .replace(/[^A-Za-z0-9.\\-~]/g, '');\n}\n\nconst makeSlug = (source, section, id, noSource) => {\n  let url = '';\n\n  if (section) {\n    url += `/${slugger(section)}`\n  }\n\n  if (id) {\n    url += `/${slugger(id)}`;\n  }\n\n  if (source && !source.includes('pages-') && !noSource) {\n    url += `/${source}`;\n  }\n\n  return url;\n}\n\nmodule.exports = {\n  slugger,\n  makeSlug \n};\n"]},"metadata":{},"sourceType":"module"}