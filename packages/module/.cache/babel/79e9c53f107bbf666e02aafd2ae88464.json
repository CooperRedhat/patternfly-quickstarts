{"ast":null,"code":"import React from 'react';\nimport { PageSection, Title, PageSectionVariants, BackToTop } from '@patternfly/react-core';\nimport { css } from '@patternfly/react-styles';\nimport ExternalLinkAltIcon from '@patternfly/react-icons/dist/esm/icons/external-link-alt-icon';\nimport { Router, useLocation } from '@reach/router';\nimport { CSSVariables, PropsTable, TableOfContents, Link, AutoLinkHeader, InlineAlert } from '../components';\nimport { capitalize, getTitle, slugger, trackEvent } from '../helpers';\nimport './mdx.css';\n\nvar MDXChildTemplate = function MDXChildTemplate(_ref) {\n  var Component = _ref.Component,\n      source = _ref.source,\n      _ref$toc = _ref.toc,\n      toc = _ref$toc === void 0 ? [] : _ref$toc,\n      _ref$index = _ref.index,\n      index = _ref$index === void 0 ? 0 : _ref$index;\n\n  var _Component$getPageDat = Component.getPageData(),\n      _Component$getPageDat2 = _Component$getPageDat.propComponents,\n      propComponents = _Component$getPageDat2 === void 0 ? [] : _Component$getPageDat2,\n      sourceLink = _Component$getPageDat.sourceLink,\n      _Component$getPageDat3 = _Component$getPageDat.cssPrefix,\n      cssPrefix = _Component$getPageDat3 === void 0 ? [] : _Component$getPageDat3,\n      optIn = _Component$getPageDat.optIn,\n      beta = _Component$getPageDat.beta,\n      katacodaBroken = _Component$getPageDat.katacodaBroken,\n      katacodaLayout = _Component$getPageDat.katacodaLayout;\n\n  var cssVarsTitle = cssPrefix.length > 0 && 'CSS variables';\n  var propsTitle = propComponents.length > 0 && 'Props';\n\n  if (propsTitle && !toc.find(function (item) {\n    return item.text === propsTitle;\n  })) {\n    toc.push({\n      text: propsTitle\n    });\n    toc.push(propComponents.map(function (propComponent) {\n      return {\n        text: propComponent.name\n      };\n    }));\n  }\n\n  if (cssVarsTitle && !toc.find(function (item) {\n    return item.text === cssVarsTitle;\n  })) {\n    toc.push({\n      text: cssVarsTitle\n    });\n  } // We don't add `id`s in anchor-header.js for items where id === slugger(text)\n  // in order to save ~10KB bandwidth.\n\n\n  if (toc.length > 1) {\n    var ensureID = function ensureID(tocItem) {\n      if (Array.isArray(tocItem)) {\n        tocItem.forEach(ensureID);\n      } else if (!tocItem.id) {\n        tocItem.id = slugger(tocItem.text);\n      }\n    };\n\n    ensureID(toc);\n  }\n\n  var InlineAlerts = /*#__PURE__*/React.createElement(React.Fragment, null, optIn && /*#__PURE__*/React.createElement(InlineAlert, {\n    title: \"Opt-in feature\"\n  }, optIn), beta && /*#__PURE__*/React.createElement(InlineAlert, {\n    title: \"Beta feature\"\n  }, \"This Beta component is currently under review and is still open for further evolution. It is available for use in product. Beta components are considered for promotion on a quarterly basis. Please join in and give us your feedback or submit any questions on the \", /*#__PURE__*/React.createElement(\"a\", {\n    href: \"https://forum.patternfly.org/\"\n  }, \"PatternFly forum\"), \" or via \", /*#__PURE__*/React.createElement(\"a\", {\n    href: \"//slack.patternfly.org/\",\n    target: \"_blank\",\n    rel: \"noopener noreferrer\"\n  }, \"Slack\"), \". To learn more go to our \", /*#__PURE__*/React.createElement(\"a\", {\n    href: \"https://github.com/patternfly/patternfly-org/tree/main/beta-component-promotion\"\n  }, \"Beta components\"), \" page on GitHub.\"), katacodaBroken && /*#__PURE__*/React.createElement(InlineAlert, {\n    variant: \"warning\",\n    title: \"Down for maintenance\"\n  }, \"The embedded version of our tutorials are broken, but you can still access our tutorials on \", /*#__PURE__*/React.createElement(\"a\", {\n    href: \"https://www.katacoda.com/patternfly\"\n  }, \"Katacoda.com \", /*#__PURE__*/React.createElement(ExternalLinkAltIcon, null)), \".\")); // Create dynamic component for @reach/router\n\n  var ChildComponent = function ChildComponent() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"pf-u-display-flex ws-mdx-child-template\"\n    }, toc.length > 1 && /*#__PURE__*/React.createElement(TableOfContents, {\n      items: toc\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: katacodaLayout ? \"ws-mdx-content-katacoda\" : \"ws-mdx-content\"\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: katacodaLayout ? \"\" : \"ws-mdx-content-content\"\n    }, InlineAlerts, /*#__PURE__*/React.createElement(Component, null), propsTitle && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(AutoLinkHeader, {\n      size: \"h2\",\n      className: \"ws-h2\",\n      id: \"props\"\n    }, propsTitle), propComponents.map(function (component) {\n      return /*#__PURE__*/React.createElement(PropsTable, {\n        key: component.name,\n        title: component.name,\n        rows: component.props,\n        allPropComponents: propComponents\n      });\n    })), cssVarsTitle && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(AutoLinkHeader, {\n      size: \"h2\",\n      className: \"ws-h2\",\n      id: \"css-variables\"\n    }, cssVarsTitle), /*#__PURE__*/React.createElement(CSSVariables, {\n      prefix: cssPrefix\n    })), !katacodaLayout && sourceLink && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"br\", null), /*#__PURE__*/React.createElement(\"a\", {\n      href: sourceLink,\n      target: \"_blank\",\n      onClick: function onClick() {\n        return trackEvent('view_source_click', 'click_event', source.toUpperCase());\n      }\n    }, \"View source on GitHub\")))));\n  };\n\n  ChildComponent.displayName = \"MDXChildTemplate\" + Component.displayName;\n  return /*#__PURE__*/React.createElement(ChildComponent, {\n    key: source,\n    path: source,\n    \"default\": index === 0\n  });\n};\n\nexport var MDXTemplate = function MDXTemplate(_ref2) {\n  var title = _ref2.title,\n      _ref2$sources = _ref2.sources,\n      sources = _ref2$sources === void 0 ? [] : _ref2$sources,\n      path = _ref2.path;\n  var sourceKeys = sources.map(function (v) {\n    return v.source;\n  });\n  var isSinglePage = sourceKeys.length === 1;\n\n  var _useLocation = useLocation(),\n      pathname = _useLocation.pathname;\n\n  var _sources$0$Component$ = sources[0].Component.getPageData(),\n      katacodaLayout = _sources$0$Component$.katacodaLayout;\n\n  var activeSource = pathname.replace(/\\/$/, '').split('/').pop();\n\n  if (!sourceKeys.includes(activeSource)) {\n    activeSource = sourceKeys[0];\n  }\n\n  if (typeof document !== 'undefined') {\n    document.title = getTitle(title);\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(PageSection, {\n    className: isSinglePage ? 'ws-docs-title' : '',\n    variant: isSinglePage ? PageSectionVariants[\"default\"] : PageSectionVariants.light\n  }, !katacodaLayout && /*#__PURE__*/React.createElement(Title, {\n    size: \"4xl\",\n    headingLevel: \"h1\",\n    id: \"ws-page-title\"\n  }, title)), !isSinglePage && /*#__PURE__*/React.createElement(PageSection, {\n    className: \"pf-m-light pf-u-pb-0 pf-u-pt-0\"\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pf-c-tabs ws-source-tabs\"\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"pf-c-tabs__list\"\n  }, sourceKeys.map(function (source, index) {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      key: source,\n      className: css('pf-c-tabs__item', activeSource === source && 'pf-m-current') // Send clicked tab name for analytics\n      ,\n      onClick: function onClick() {\n        return trackEvent('tab_click', 'click_event', source.toUpperCase());\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      className: \"pf-c-tabs__link\",\n      to: \"\" + path + (index === 0 ? '' : '/' + source)\n    }, capitalize(source.replace('html', 'HTML').replace(/-/g, ' '))));\n  })))), /*#__PURE__*/React.createElement(PageSection, {\n    id: \"main-content\",\n    className: isSinglePage ? 'pf-m-fill' : 'pf-m-fill pf-m-light'\n  }, isSinglePage && /*#__PURE__*/React.createElement(MDXChildTemplate, sources[0]), !isSinglePage && /*#__PURE__*/React.createElement(Router, {\n    className: \"pf-u-h-100\",\n    primary: false\n  }, sources.map(function (source, index) {\n    source.index = index;\n    return source;\n  }).map(MDXChildTemplate))), /*#__PURE__*/React.createElement(BackToTop, {\n    className: \"ws-back-to-top\",\n    scrollableSelector: \"#ws-page-main\"\n  }));\n};","map":null,"metadata":{},"sourceType":"module"}