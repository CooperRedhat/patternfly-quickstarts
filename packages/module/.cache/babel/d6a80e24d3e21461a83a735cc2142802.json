{"ast":null,"code":"import React, { useEffect, useState } from 'react';\nimport { Button, Page, PageHeader, PageSidebar, PageHeaderTools, PageHeaderToolsItem, TextInput, Brand, Dropdown, DropdownToggle, DropdownItem, DropdownGroup, Divider, Text, TextVariants, SkipToContent } from '@patternfly/react-core';\nimport SearchIcon from '@patternfly/react-icons/dist/esm/icons/search-icon';\nimport ExternalLinkAltIcon from '@patternfly/react-icons/dist/esm/icons/external-link-alt-icon';\nimport TimesIcon from '@patternfly/react-icons/dist/esm/icons/times-icon';\nimport GithubIcon from '@patternfly/react-icons/dist/esm/icons/github-icon';\nimport { SideNav, TopNav, GdprBanner } from '../../components';\nimport staticVersions from '../../versions.json';\nimport logo from '../logo.svg';\nimport './sideNavLayout.css';\n\nvar HeaderTools = function HeaderTools(_ref) {\n  var versions = _ref.versions,\n      hasVersionSwitcher = _ref.hasVersionSwitcher,\n      hasSearch = _ref.hasSearch,\n      pathPrefix = _ref.pathPrefix;\n  var initialVersion = staticVersions.Releases.find(function (release) {\n    return release.latest;\n  });\n\n  var _useState = useState(false),\n      isDropdownOpen = _useState[0],\n      setDropdownOpen = _useState[1];\n\n  var _useState2 = useState(false),\n      isSearchExpanded = _useState2[0],\n      setSearchExpanded = _useState2[1];\n\n  var latestVersion = versions.Releases.find(function (version) {\n    return version.latest;\n  });\n\n  var getDropdownItem = function getDropdownItem(version) {\n    return /*#__PURE__*/React.createElement(DropdownItem, {\n      key: version.name,\n      component: /*#__PURE__*/React.createElement(\"a\", {\n        href: version.latest ? '/v4' : \"/\" + version.name\n      }, \"Release \" + version.name)\n    });\n  };\n\n  var searchRef = React.useRef();\n  useEffect(function () {\n    var handleSearchHotkeys = function handleSearchHotkeys(event) {\n      var tagName = event.target.tagName.toLowerCase();\n      var isContentEditable = event.target.contentEditable === 'true';\n\n      if ((event.code === 'Slash' || event.code === 'KeyS') && tagName !== 'input' && tagName !== 'textarea' && !isContentEditable) {\n        setSearchExpanded(true);\n        setTimeout(function () {\n          return searchRef.current && searchRef.current.focus();\n        }, 0);\n      } else if (event.code === 'Escape' && event.target === searchRef.current) {\n        setSearchExpanded(false);\n      }\n    };\n\n    window.addEventListener('keyup', handleSearchHotkeys);\n    return function () {\n      return window.removeEventListener('keyup', handleSearchHotkeys);\n    };\n  }, []);\n  return /*#__PURE__*/React.createElement(PageHeaderTools, null, hasSearch && /*#__PURE__*/React.createElement(PageHeaderToolsItem, {\n    id: \"ws-global-search-wrapper\",\n    className: isSearchExpanded ? '' : 'ws-hide-search-input'\n  }, /*#__PURE__*/React.createElement(TextInput, {\n    id: \"ws-global-search\",\n    ref: searchRef,\n    placeholder: \"Search\"\n  }), isSearchExpanded && /*#__PURE__*/React.createElement(SearchIcon, {\n    className: \"global-search-icon\"\n  })), hasSearch && /*#__PURE__*/React.createElement(Button, {\n    \"aria-label\": (isSearchExpanded ? 'Collapse' : 'Expand') + \" search input\",\n    variant: \"plain\",\n    className: \"ws-toggle-search\",\n    onClick: function onClick() {\n      setSearchExpanded(!isSearchExpanded);\n\n      if (!isSearchExpanded) {\n        setTimeout(function () {\n          return searchRef.current && searchRef.current.focus();\n        }, 0);\n      }\n    }\n  }, isSearchExpanded ? /*#__PURE__*/React.createElement(TimesIcon, null) : /*#__PURE__*/React.createElement(SearchIcon, {\n    className: \"global-search-icon\"\n  })), /*#__PURE__*/React.createElement(PageHeaderToolsItem, null, /*#__PURE__*/React.createElement(Button, {\n    component: \"a\",\n    variant: \"link\",\n    href: \"//github.com/patternfly\",\n    target: \"top\",\n    \"aria-label\": \"Link to PatternFly GitHub page\",\n    className: \"ws-github-pageheader pf-u-mr-sm\"\n  }, /*#__PURE__*/React.createElement(GithubIcon, null))), hasVersionSwitcher && /*#__PURE__*/React.createElement(PageHeaderToolsItem, null, /*#__PURE__*/React.createElement(Dropdown, {\n    className: \"ws-org-version-switcher\",\n    onSelect: function onSelect() {\n      return setDropdownOpen(!isDropdownOpen);\n    },\n    toggle: /*#__PURE__*/React.createElement(DropdownToggle, {\n      className: \"ws-org-version-toggle\" + (isDropdownOpen ? '-expanded' : ''),\n      onToggle: function onToggle() {\n        return setDropdownOpen(!isDropdownOpen);\n      }\n    }, \"Release \", initialVersion.name),\n    isOpen: isDropdownOpen,\n    dropdownItems: [/*#__PURE__*/React.createElement(DropdownGroup, {\n      key: \"latest\",\n      label: \"Latest\"\n    }, getDropdownItem(latestVersion)), /*#__PURE__*/React.createElement(DropdownGroup, {\n      key: \"Previous\",\n      label: \"Previous releases\"\n    }, Object.values(versions.Releases).filter(function (version) {\n      return !version.hidden && !version.latest;\n    }).slice(0, 3).map(getDropdownItem)), /*#__PURE__*/React.createElement(Divider, {\n      key: \"divider\",\n      className: \"ws-switcher-divider\"\n    }), /*#__PURE__*/React.createElement(DropdownItem, {\n      key: \"PatternFly 3\",\n      className: \"ws-patternfly-3\",\n      target: \"_blank\",\n      href: \"https://www.patternfly.org/v3\"\n    }, \"PatternFly 3\", /*#__PURE__*/React.createElement(ExternalLinkAltIcon, null))]\n  })));\n}; // https://github.com/algolia/autocomplete.js#global-options\n\n\nexport function attachDocSearch(algolia, inputSelector, timeout) {\n  if (window.docsearch) {\n    return window.docsearch(Object.assign({\n      inputSelector: inputSelector,\n      autocompleteOptions: {\n        hint: false,\n        appendTo: inputSelector + \"-wrapper\"\n      },\n      debug: process.env.NODE_ENV !== 'production'\n    }, algolia));\n  } else {\n    setTimeout(function () {\n      return attachDocSearch(algolia, inputSelector, timeout);\n    }, timeout);\n  }\n}\nexport var SideNavLayout = function SideNavLayout(_ref2) {\n  var children = _ref2.children,\n      groupedRoutes = _ref2.groupedRoutes,\n      navOpenProp = _ref2.navOpen;\n  var pathPrefix = process.env.pathPrefix;\n  var algolia = process.env.algolia;\n  var hasGdprBanner = process.env.hasGdprBanner;\n  var hasVersionSwitcher = process.env.hasVersionSwitcher;\n  var sideNavItems = process.env.sideNavItems;\n  var topNavItems = process.env.topNavItems;\n  var prnum = process.env.prnum;\n  var prurl = process.env.prurl;\n\n  var _useState3 = useState(Object.assign({}, staticVersions)),\n      versions = _useState3[0],\n      setVersions = _useState3[1];\n\n  useEffect(function () {\n    if (typeof window === 'undefined') {\n      return;\n    }\n\n    if (algolia) {\n      attachDocSearch(algolia, '#ws-global-search', 1000);\n    }\n\n    if (hasVersionSwitcher && window.fetch) {\n      fetch('/versions.json').then(function (res) {\n        if (res.ok) {\n          res.json().then(function (json) {\n            return setVersions(json);\n          });\n        }\n      });\n    }\n  }, []);\n  var SideBar = /*#__PURE__*/React.createElement(PageSidebar, {\n    className: \"ws-page-sidebar\",\n    theme: \"light\",\n    nav: /*#__PURE__*/React.createElement(SideNav, {\n      navItems: sideNavItems,\n      groupedRoutes: groupedRoutes\n    })\n  });\n  var Header = /*#__PURE__*/React.createElement(PageHeader, {\n    className: \"ws-page-header\",\n    headerTools: (algolia || hasVersionSwitcher) && /*#__PURE__*/React.createElement(HeaderTools, {\n      versions: versions,\n      hasSearch: algolia,\n      hasVersionSwitcher: hasVersionSwitcher,\n      pathPrefix: pathPrefix\n    }),\n    logo: prnum ? \"PR #\" + prnum : /*#__PURE__*/React.createElement(Brand, {\n      src: logo,\n      alt: \"Patternfly Logo\"\n    }),\n    logoProps: {\n      href: prurl || pathPrefix || '/'\n    },\n    showNavToggle: true,\n    topNav: topNavItems.length > 0 && /*#__PURE__*/React.createElement(TopNav, {\n      navItems: topNavItems\n    })\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"ws-page-banners\"\n  }, hasGdprBanner && /*#__PURE__*/React.createElement(GdprBanner, null)), /*#__PURE__*/React.createElement(Page, {\n    id: \"ws-page\",\n    mainContainerId: \"ws-page-main\",\n    header: Header,\n    sidebar: SideBar,\n    skipToContent: /*#__PURE__*/React.createElement(SkipToContent, {\n      href: \"#ws-page-main\"\n    }, \"Skip to content\"),\n    isManagedSidebar: true,\n    defaultManagedSidebarIsOpen: navOpenProp\n  }, children));\n};","map":null,"metadata":{},"sourceType":"module"}