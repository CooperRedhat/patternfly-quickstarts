{"ast":null,"code":"function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\";\nimport { TextInput } from \"@patternfly/react-core\";\nexport var CSSSearch = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(CSSSearch, _React$Component);\n\n  function CSSSearch(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n\n    _defineProperty(_assertThisInitialized(_this), \"onFilterChange\", function (_change, event) {\n      _this.setState({\n        filterValue: event.target.value\n      }, function () {\n        return _this.props.getDebouncedFilteredRows(_this.state.filterValue);\n      });\n    });\n\n    _this.state = {\n      filterValue: \"\"\n    };\n    return _this;\n  }\n\n  var _proto = CSSSearch.prototype;\n\n  _proto.render = function render() {\n    return /*#__PURE__*/React.createElement(TextInput, {\n      type: \"text\",\n      \"aria-label\": \"Filter CSS Variables\",\n      placeholder: \"Filter CSS Variables\",\n      value: this.state.filterValue,\n      onChange: this.onFilterChange\n    });\n  };\n\n  return CSSSearch;\n}(React.Component);","map":null,"metadata":{},"sourceType":"module"}