{"ast":null,"code":"import React from \"react\";\nimport { slugger } from \"../../helpers/slugger\";\nexport var PropTypeWithLinks = function PropTypeWithLinks(_ref) {\n  var type = _ref.type,\n      allPropComponents = _ref.allPropComponents;\n  // If this type contains the names of any other components on this page as full words, turn them into links.\n  var referencedComponentNames = allPropComponents.filter(function (component) {\n    return type.match(new RegExp(\"\\\\b\" + component.name + \"\\\\b\"));\n  }).map(function (component) {\n    return component.name;\n  });\n\n  if (referencedComponentNames.length > 0) {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, type.split(new RegExp(\"\\\\b(\" + referencedComponentNames.join(\"|\") + \")\\\\b\")).map(function (segment, i) {\n      return referencedComponentNames.includes(segment) ? /*#__PURE__*/React.createElement(\"a\", {\n        key: segment + i,\n        onClick: function onClick(event) {\n          event.preventDefault();\n          document.getElementById(slugger(segment)).scrollIntoView();\n        }\n      }, segment) : segment;\n    }));\n  }\n\n  return type;\n};","map":{"version":3,"sources":["/Users/ctrowbri/dev/patternfly-quickstarts/node_modules/theme-patternfly-org/components/propsTable/propTypeWithLinks.js"],"names":["React","slugger","PropTypeWithLinks","type","allPropComponents","referencedComponentNames","filter","component","match","RegExp","name","map","length","split","join","segment","i","includes","event","preventDefault","document","getElementById","scrollIntoView"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,uBAAxB;AAEA,OAAO,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,OAAiC;AAAA,MAA9BC,IAA8B,QAA9BA,IAA8B;AAAA,MAAxBC,iBAAwB,QAAxBA,iBAAwB;AAChE;AACA,MAAMC,wBAAwB,GAAGD,iBAAiB,CAC/CE,MAD8B,CACvB,UAACC,SAAD;AAAA,WAAeJ,IAAI,CAACK,KAAL,CAAW,IAAIC,MAAJ,SAAiBF,SAAS,CAACG,IAA3B,SAAX,CAAf;AAAA,GADuB,EAE9BC,GAF8B,CAE1B,UAACJ,SAAD;AAAA,WAAeA,SAAS,CAACG,IAAzB;AAAA,GAF0B,CAAjC;;AAGA,MAAIL,wBAAwB,CAACO,MAAzB,GAAkC,CAAtC,EAAyC;AACvC,wBACE,oBAAC,KAAD,CAAO,QAAP,QACGT,IAAI,CACFU,KADF,CACQ,IAAIJ,MAAJ,UAAkBJ,wBAAwB,CAACS,IAAzB,CAA8B,GAA9B,CAAlB,UADR,EAEEH,GAFF,CAEM,UAACI,OAAD,EAAUC,CAAV;AAAA,aACHX,wBAAwB,CAACY,QAAzB,CAAkCF,OAAlC,iBACE;AACE,QAAA,GAAG,EAAEA,OAAO,GAAGC,CADjB;AAEE,QAAA,OAAO,EAAE,iBAACE,KAAD,EAAW;AAClBA,UAAAA,KAAK,CAACC,cAAN;AACAC,UAAAA,QAAQ,CAACC,cAAT,CAAwBpB,OAAO,CAACc,OAAD,CAA/B,EAA0CO,cAA1C;AACD;AALH,SAOGP,OAPH,CADF,GAWEA,OAZC;AAAA,KAFN,CADH,CADF;AAqBD;;AACD,SAAOZ,IAAP;AACD,CA7BM","sourcesContent":["import React from \"react\";\nimport { slugger } from \"../../helpers/slugger\";\n\nexport const PropTypeWithLinks = ({ type, allPropComponents }) => {\n  // If this type contains the names of any other components on this page as full words, turn them into links.\n  const referencedComponentNames = allPropComponents\n    .filter((component) => type.match(new RegExp(`\\\\b${component.name}\\\\b`)))\n    .map((component) => component.name);\n  if (referencedComponentNames.length > 0) {\n    return (\n      <React.Fragment>\n        {type\n          .split(new RegExp(`\\\\b(${referencedComponentNames.join(\"|\")})\\\\b`))\n          .map((segment, i) =>\n            referencedComponentNames.includes(segment) ? (\n              <a\n                key={segment + i}\n                onClick={(event) => {\n                  event.preventDefault();\n                  document.getElementById(slugger(segment)).scrollIntoView();\n                }}\n              >\n                {segment}\n              </a>\n            ) : (\n              segment\n            )\n          )}\n      </React.Fragment>\n    );\n  }\n  return type;\n};\n"]},"metadata":{},"sourceType":"module"}