{"ast":null,"code":"import React from 'react';\nimport { JumpLinks, JumpLinksItem, JumpLinksList } from '@patternfly/react-core';\nimport './tableOfContents.css';\nimport { trackEvent } from '../../helpers';\nexport var TableOfContents = function TableOfContents(_ref) {\n  var items = _ref.items;\n\n  // Used to recalculate JumpLinks offset if screen size changes\n  var _React$useState = React.useState(window.innerWidth),\n      width = _React$useState[0],\n      setWidth = _React$useState[1];\n\n  var updateWidth = function updateWidth() {\n    var _window = window,\n        innerWidth = _window.innerWidth;\n    innerWidth !== width && setWidth(innerWidth);\n  };\n\n  var renderItem = function renderItem(item, index) {\n    return Array.isArray(item) ? /*#__PURE__*/React.createElement(JumpLinksList, {\n      key: index,\n      className: \"ws-toc-sublist\"\n    }, item.map(renderItem)) : /*#__PURE__*/React.createElement(JumpLinksItem, {\n      key: item.id,\n      href: \"#\" + item.id,\n      className: \"ws-toc-item\",\n      onKeyDown: updateWidth,\n      onMouseDown: updateWidth,\n      onClick: function onClick() {\n        return trackEvent('jump_link_click', 'click_event', item.id.toUpperCase());\n      }\n    }, item.text);\n  };\n\n  return /*#__PURE__*/React.createElement(JumpLinks, {\n    label: \"Table of contents\",\n    isVertical: true,\n    scrollableSelector: \"#ws-page-main\",\n    className: \"ws-toc\",\n    offset: width > 1450 ? 92 : 148,\n    expandable: {\n      \"default\": 'expandable',\n      '2xl': 'nonExpandable'\n    }\n  }, items.map(renderItem));\n};","map":{"version":3,"sources":["/Users/ctrowbri/dev/patternfly-quickstarts/node_modules/theme-patternfly-org/components/tableOfContents/tableOfContents.js"],"names":["React","JumpLinks","JumpLinksItem","JumpLinksList","trackEvent","TableOfContents","items","useState","window","innerWidth","width","setWidth","updateWidth","renderItem","item","index","Array","isArray","map","id","toUpperCase","text"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,aAApB,EAAmCC,aAAnC,QAAwD,wBAAxD;AACA,OAAO,uBAAP;AACA,SAASC,UAAT,QAA2B,eAA3B;AAEA,OAAO,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,OAAe;AAAA,MAAZC,KAAY,QAAZA,KAAY;;AAC5C;AACA,wBAA0BN,KAAK,CAACO,QAAN,CAAeC,MAAM,CAACC,UAAtB,CAA1B;AAAA,MAAOC,KAAP;AAAA,MAAcC,QAAd;;AACA,MAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxB,kBAAuBJ,MAAvB;AAAA,QAAQC,UAAR,WAAQA,UAAR;AACAA,IAAAA,UAAU,KAAKC,KAAf,IAAwBC,QAAQ,CAACF,UAAD,CAAhC;AACD,GAHD;;AAKA,MAAMI,UAAU,GAAG,SAAbA,UAAa,CAACC,IAAD,EAAOC,KAAP,EAAiB;AAClC,WAAOC,KAAK,CAACC,OAAN,CAAcH,IAAd,iBAEH,oBAAC,aAAD;AAAe,MAAA,GAAG,EAAEC,KAApB;AAA2B,MAAA,SAAS,EAAC;AAArC,OACGD,IAAI,CAACI,GAAL,CAASL,UAAT,CADH,CAFG,gBAMH,oBAAC,aAAD;AACE,MAAA,GAAG,EAAEC,IAAI,CAACK,EADZ;AAEE,MAAA,IAAI,QAAML,IAAI,CAACK,EAFjB;AAGE,MAAA,SAAS,EAAC,aAHZ;AAIE,MAAA,SAAS,EAAEP,WAJb;AAKE,MAAA,WAAW,EAAEA,WALf;AAME,MAAA,OAAO,EAAE;AAAA,eAAMR,UAAU,CAAC,iBAAD,EAAoB,aAApB,EAAmCU,IAAI,CAACK,EAAL,CAAQC,WAAR,EAAnC,CAAhB;AAAA;AANX,OAQGN,IAAI,CAACO,IARR,CANJ;AAiBD,GAlBD;;AAoBA,sBACE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAC,mBADR;AAEE,IAAA,UAAU,MAFZ;AAGE,IAAA,kBAAkB,EAAC,eAHrB;AAIE,IAAA,SAAS,EAAC,QAJZ;AAKE,IAAA,MAAM,EAAEX,KAAK,GAAG,IAAR,GAAe,EAAf,GAAoB,GAL9B;AAME,IAAA,UAAU,EAAE;AAAE,iBAAS,YAAX;AAAyB,aAAO;AAAhC;AANd,KAQGJ,KAAK,CAACY,GAAN,CAAUL,UAAV,CARH,CADF;AAYD,CAxCM","sourcesContent":["import React from 'react';\nimport { JumpLinks, JumpLinksItem, JumpLinksList } from '@patternfly/react-core';\nimport './tableOfContents.css';\nimport { trackEvent } from '../../helpers';\n\nexport const TableOfContents = ({ items }) => {\n  // Used to recalculate JumpLinks offset if screen size changes\n  const [width, setWidth] = React.useState(window.innerWidth);\n  const updateWidth = () => {\n    const { innerWidth } = window;\n    innerWidth !== width && setWidth(innerWidth);\n  }\n\n  const renderItem = (item, index) => {\n    return Array.isArray(item)\n      ? (\n        <JumpLinksList key={index} className=\"ws-toc-sublist\">\n          {item.map(renderItem)}\n        </JumpLinksList>\n      ) : (\n        <JumpLinksItem\n          key={item.id}\n          href={`#${item.id}`}\n          className=\"ws-toc-item\"\n          onKeyDown={updateWidth}\n          onMouseDown={updateWidth}\n          onClick={() => trackEvent('jump_link_click', 'click_event', item.id.toUpperCase())\n        }>\n          {item.text}\n        </JumpLinksItem>\n      )\n  }\n\n  return (\n    <JumpLinks\n      label=\"Table of contents\"\n      isVertical\n      scrollableSelector=\"#ws-page-main\"\n      className=\"ws-toc\"\n      offset={width > 1450 ? 92 : 148}\n      expandable={{ default: 'expandable', '2xl': 'nonExpandable' }}\n    >\n      {items.map(renderItem)}\n    </JumpLinks>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}